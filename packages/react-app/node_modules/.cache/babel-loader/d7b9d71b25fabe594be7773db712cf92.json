{"ast":null,"code":"import \"../globals/index.js\";\nimport { isNonNullObject } from \"./objects.js\";\n\nfunction deepFreeze(value) {\n  var workSet = new Set([value]);\n  workSet.forEach(function (obj) {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(function (name) {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze(obj) {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n\n  return obj;\n}\n\nexport function maybeDeepFreeze(obj) {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n\n  return obj;\n}","map":{"version":3,"sources":["../../../src/utilities/common/maybeDeepFreeze.ts"],"names":[],"mappings":"AAAA,OAAO,qBAAP;AACA,SAAS,eAAT,QAAgC,cAAhC;;AAEA,SAAS,UAAT,CAAoB,KAApB,EAA8B;EAC5B,IAAM,OAAO,GAAG,IAAI,GAAJ,CAAQ,CAAC,KAAD,CAAR,CAAhB;EACA,OAAO,CAAC,OAAR,CAAgB,UAAA,GAAA,EAAG;IACjB,IAAI,eAAe,CAAC,GAAD,CAAf,IAAwB,aAAa,CAAC,GAAD,CAAb,KAAuB,GAAnD,EAAwD;MACtD,MAAM,CAAC,mBAAP,CAA2B,GAA3B,EAAgC,OAAhC,CAAwC,UAAA,IAAA,EAAI;QAC1C,IAAI,eAAe,CAAC,GAAG,CAAC,IAAD,CAAJ,CAAnB,EAAgC,OAAO,CAAC,GAAR,CAAY,GAAG,CAAC,IAAD,CAAf;MACjC,CAFD;IAGD;EACF,CAND;EAOA,OAAO,KAAP;AACD;;AAED,SAAS,aAAT,CAAyC,GAAzC,EAA+C;EAC7C,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,QAAP,CAAgB,GAAhB,CAAhB,EAAsC;IACpC,IAAI;MACF,MAAM,CAAC,MAAP,CAAc,GAAd;IACD,CAFD,CAEE,OAAO,CAAP,EAAU;MAIV,IAAI,CAAC,YAAY,SAAjB,EAA4B,OAAO,IAAP;MAC5B,MAAM,CAAN;IACD;EACF;;EACD,OAAO,GAAP;AACD;;AAED,OAAM,SAAU,eAAV,CAA6B,GAA7B,EAAmC;EACvC,IAAI,OAAJ,EAAa;IACX,UAAU,CAAC,GAAD,CAAV;EACD;;EACD,OAAO,GAAP;AACD","sourcesContent":["import '../globals'; // For __DEV__\nimport { isNonNullObject } from './objects';\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj) && shallowFreeze(obj) === obj) {\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nfunction shallowFreeze<T extends object>(obj: T): T | null {\n  if (__DEV__ && !Object.isFrozen(obj)) {\n    try {\n      Object.freeze(obj);\n    } catch (e) {\n      // Some types like Uint8Array and Node.js's Buffer cannot be frozen, but\n      // they all throw a TypeError when you try, so we re-throw any exceptions\n      // that are not TypeErrors, since that would be unexpected.\n      if (e instanceof TypeError) return null;\n      throw e;\n    }\n  }\n  return obj;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}