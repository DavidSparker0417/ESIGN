{"ast":null,"code":"/**\n * @licstart The following is the entire license notice for the\n * Javascript code in this page\n *\n * Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @licend The above is the entire license notice for the\n * Javascript code in this page\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n  if (typeof exports === 'object' && typeof module === 'object') module.exports = factory();else if (typeof define === 'function' && define.amd) define(\"pdfjs-dist/build/pdf\", [], factory);else if (typeof exports === 'object') exports[\"pdfjs-dist/build/pdf\"] = factory();else root[\"pdfjs-dist/build/pdf\"] = root.pdfjsLib = factory();\n})(this, function () {\n  return (\n    /******/\n    function (modules) {\n      // webpackBootstrap\n\n      /******/\n      // The module cache\n\n      /******/\n      var installedModules = {};\n      /******/\n\n      /******/\n      // The require function\n\n      /******/\n\n      function __w_pdfjs_require__(moduleId) {\n        /******/\n\n        /******/\n        // Check if module is in cache\n\n        /******/\n        if (installedModules[moduleId]) {\n          /******/\n          return installedModules[moduleId].exports;\n          /******/\n        }\n        /******/\n        // Create a new module (and put it into the cache)\n\n        /******/\n\n\n        var module = installedModules[moduleId] = {\n          /******/\n          i: moduleId,\n\n          /******/\n          l: false,\n\n          /******/\n          exports: {}\n          /******/\n\n        };\n        /******/\n\n        /******/\n        // Execute the module function\n\n        /******/\n\n        modules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n        /******/\n\n        /******/\n        // Flag the module as loaded\n\n        /******/\n\n        module.l = true;\n        /******/\n\n        /******/\n        // Return the exports of the module\n\n        /******/\n\n        return module.exports;\n        /******/\n      }\n      /******/\n\n      /******/\n\n      /******/\n      // expose the modules object (__webpack_modules__)\n\n      /******/\n\n\n      __w_pdfjs_require__.m = modules;\n      /******/\n\n      /******/\n      // expose the module cache\n\n      /******/\n\n      __w_pdfjs_require__.c = installedModules;\n      /******/\n\n      /******/\n      // define getter function for harmony exports\n\n      /******/\n\n      __w_pdfjs_require__.d = function (exports, name, getter) {\n        /******/\n        if (!__w_pdfjs_require__.o(exports, name)) {\n          /******/\n          Object.defineProperty(exports, name, {\n            enumerable: true,\n            get: getter\n          });\n          /******/\n        }\n        /******/\n\n      };\n      /******/\n\n      /******/\n      // define __esModule on exports\n\n      /******/\n\n\n      __w_pdfjs_require__.r = function (exports) {\n        /******/\n        if (typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n          /******/\n          Object.defineProperty(exports, Symbol.toStringTag, {\n            value: 'Module'\n          });\n          /******/\n        }\n        /******/\n\n\n        Object.defineProperty(exports, '__esModule', {\n          value: true\n        });\n        /******/\n      };\n      /******/\n\n      /******/\n      // create a fake namespace object\n\n      /******/\n      // mode & 1: value is a module id, require it\n\n      /******/\n      // mode & 2: merge all properties of value into the ns\n\n      /******/\n      // mode & 4: return value when already ns object\n\n      /******/\n      // mode & 8|1: behave like require\n\n      /******/\n\n\n      __w_pdfjs_require__.t = function (value, mode) {\n        /******/\n        if (mode & 1) value = __w_pdfjs_require__(value);\n        /******/\n\n        if (mode & 8) return value;\n        /******/\n\n        if (mode & 4 && typeof value === 'object' && value && value.__esModule) return value;\n        /******/\n\n        var ns = Object.create(null);\n        /******/\n\n        __w_pdfjs_require__.r(ns);\n        /******/\n\n\n        Object.defineProperty(ns, 'default', {\n          enumerable: true,\n          value: value\n        });\n        /******/\n\n        if (mode & 2 && typeof value != 'string') for (var key in value) __w_pdfjs_require__.d(ns, key, function (key) {\n          return value[key];\n        }.bind(null, key));\n        /******/\n\n        return ns;\n        /******/\n      };\n      /******/\n\n      /******/\n      // getDefaultExport function for compatibility with non-harmony modules\n\n      /******/\n\n\n      __w_pdfjs_require__.n = function (module) {\n        /******/\n        var getter = module && module.__esModule ?\n        /******/\n        function getDefault() {\n          return module['default'];\n        } :\n        /******/\n        function getModuleExports() {\n          return module;\n        };\n        /******/\n\n        __w_pdfjs_require__.d(getter, 'a', getter);\n        /******/\n\n\n        return getter;\n        /******/\n      };\n      /******/\n\n      /******/\n      // Object.prototype.hasOwnProperty.call\n\n      /******/\n\n\n      __w_pdfjs_require__.o = function (object, property) {\n        return Object.prototype.hasOwnProperty.call(object, property);\n      };\n      /******/\n\n      /******/\n      // __webpack_public_path__\n\n      /******/\n\n\n      __w_pdfjs_require__.p = \"\";\n      /******/\n\n      /******/\n\n      /******/\n      // Load entry module and return exports\n\n      /******/\n\n      return __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n      /******/\n    }\n    /************************************************************************/\n\n    /******/\n    ([\n    /* 0 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      Object.defineProperty(exports, \"addLinkAttributes\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.addLinkAttributes;\n        }\n      });\n      Object.defineProperty(exports, \"getFilenameFromUrl\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.getFilenameFromUrl;\n        }\n      });\n      Object.defineProperty(exports, \"LinkTarget\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.LinkTarget;\n        }\n      });\n      Object.defineProperty(exports, \"loadScript\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.loadScript;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDateString\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.PDFDateString;\n        }\n      });\n      Object.defineProperty(exports, \"RenderingCancelledException\", {\n        enumerable: true,\n        get: function () {\n          return _display_utils.RenderingCancelledException;\n        }\n      });\n      Object.defineProperty(exports, \"build\", {\n        enumerable: true,\n        get: function () {\n          return _api.build;\n        }\n      });\n      Object.defineProperty(exports, \"getDocument\", {\n        enumerable: true,\n        get: function () {\n          return _api.getDocument;\n        }\n      });\n      Object.defineProperty(exports, \"LoopbackPort\", {\n        enumerable: true,\n        get: function () {\n          return _api.LoopbackPort;\n        }\n      });\n      Object.defineProperty(exports, \"PDFDataRangeTransport\", {\n        enumerable: true,\n        get: function () {\n          return _api.PDFDataRangeTransport;\n        }\n      });\n      Object.defineProperty(exports, \"PDFWorker\", {\n        enumerable: true,\n        get: function () {\n          return _api.PDFWorker;\n        }\n      });\n      Object.defineProperty(exports, \"version\", {\n        enumerable: true,\n        get: function () {\n          return _api.version;\n        }\n      });\n      Object.defineProperty(exports, \"CMapCompressionType\", {\n        enumerable: true,\n        get: function () {\n          return _util.CMapCompressionType;\n        }\n      });\n      Object.defineProperty(exports, \"createObjectURL\", {\n        enumerable: true,\n        get: function () {\n          return _util.createObjectURL;\n        }\n      });\n      Object.defineProperty(exports, \"createPromiseCapability\", {\n        enumerable: true,\n        get: function () {\n          return _util.createPromiseCapability;\n        }\n      });\n      Object.defineProperty(exports, \"createValidAbsoluteUrl\", {\n        enumerable: true,\n        get: function () {\n          return _util.createValidAbsoluteUrl;\n        }\n      });\n      Object.defineProperty(exports, \"InvalidPDFException\", {\n        enumerable: true,\n        get: function () {\n          return _util.InvalidPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"MissingPDFException\", {\n        enumerable: true,\n        get: function () {\n          return _util.MissingPDFException;\n        }\n      });\n      Object.defineProperty(exports, \"OPS\", {\n        enumerable: true,\n        get: function () {\n          return _util.OPS;\n        }\n      });\n      Object.defineProperty(exports, \"PasswordResponses\", {\n        enumerable: true,\n        get: function () {\n          return _util.PasswordResponses;\n        }\n      });\n      Object.defineProperty(exports, \"PermissionFlag\", {\n        enumerable: true,\n        get: function () {\n          return _util.PermissionFlag;\n        }\n      });\n      Object.defineProperty(exports, \"removeNullCharacters\", {\n        enumerable: true,\n        get: function () {\n          return _util.removeNullCharacters;\n        }\n      });\n      Object.defineProperty(exports, \"shadow\", {\n        enumerable: true,\n        get: function () {\n          return _util.shadow;\n        }\n      });\n      Object.defineProperty(exports, \"UnexpectedResponseException\", {\n        enumerable: true,\n        get: function () {\n          return _util.UnexpectedResponseException;\n        }\n      });\n      Object.defineProperty(exports, \"UNSUPPORTED_FEATURES\", {\n        enumerable: true,\n        get: function () {\n          return _util.UNSUPPORTED_FEATURES;\n        }\n      });\n      Object.defineProperty(exports, \"Util\", {\n        enumerable: true,\n        get: function () {\n          return _util.Util;\n        }\n      });\n      Object.defineProperty(exports, \"VerbosityLevel\", {\n        enumerable: true,\n        get: function () {\n          return _util.VerbosityLevel;\n        }\n      });\n      Object.defineProperty(exports, \"AnnotationLayer\", {\n        enumerable: true,\n        get: function () {\n          return _annotation_layer.AnnotationLayer;\n        }\n      });\n      Object.defineProperty(exports, \"apiCompatibilityParams\", {\n        enumerable: true,\n        get: function () {\n          return _api_compatibility.apiCompatibilityParams;\n        }\n      });\n      Object.defineProperty(exports, \"GlobalWorkerOptions\", {\n        enumerable: true,\n        get: function () {\n          return _worker_options.GlobalWorkerOptions;\n        }\n      });\n      Object.defineProperty(exports, \"renderTextLayer\", {\n        enumerable: true,\n        get: function () {\n          return _text_layer.renderTextLayer;\n        }\n      });\n      Object.defineProperty(exports, \"SVGGraphics\", {\n        enumerable: true,\n        get: function () {\n          return _svg.SVGGraphics;\n        }\n      });\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _api = __w_pdfjs_require__(5);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _annotation_layer = __w_pdfjs_require__(19);\n\n      var _api_compatibility = __w_pdfjs_require__(9);\n\n      var _worker_options = __w_pdfjs_require__(12);\n\n      var _text_layer = __w_pdfjs_require__(20);\n\n      var _svg = __w_pdfjs_require__(21);\n\n      const pdfjsVersion = '2.6.347';\n      const pdfjsBuild = '3be9c65f';\n      {\n        const {\n          isNodeJS\n        } = __w_pdfjs_require__(4);\n\n        if (isNodeJS) {\n          const PDFNodeStream = __w_pdfjs_require__(22).PDFNodeStream;\n\n          (0, _api.setPDFNetworkStreamFactory)(params => {\n            return new PDFNodeStream(params);\n          });\n        } else {\n          const PDFNetworkStream = __w_pdfjs_require__(25).PDFNetworkStream;\n\n          let PDFFetchStream;\n\n          if ((0, _display_utils.isFetchSupported)()) {\n            PDFFetchStream = __w_pdfjs_require__(26).PDFFetchStream;\n          }\n\n          (0, _api.setPDFNetworkStreamFactory)(params => {\n            if (PDFFetchStream && (0, _display_utils.isValidFetchUrl)(params.url)) {\n              return new PDFFetchStream(params);\n            }\n\n            return new PDFNetworkStream(params);\n          });\n        }\n      }\n      /***/\n    },\n    /* 1 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.addLinkAttributes = addLinkAttributes;\n      exports.getFilenameFromUrl = getFilenameFromUrl;\n      exports.isFetchSupported = isFetchSupported;\n      exports.isValidFetchUrl = isValidFetchUrl;\n      exports.loadScript = loadScript;\n      exports.deprecated = deprecated;\n      exports.PDFDateString = exports.StatTimer = exports.DOMSVGFactory = exports.DOMCMapReaderFactory = exports.BaseCMapReaderFactory = exports.DOMCanvasFactory = exports.BaseCanvasFactory = exports.DEFAULT_LINK_REL = exports.LinkTarget = exports.RenderingCancelledException = exports.PageViewport = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      const DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\n      exports.DEFAULT_LINK_REL = DEFAULT_LINK_REL;\n      const SVG_NS = \"http://www.w3.org/2000/svg\";\n\n      class BaseCanvasFactory {\n        constructor() {\n          if (this.constructor === BaseCanvasFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseCanvasFactory.\");\n          }\n        }\n\n        create(width, height) {\n          (0, _util.unreachable)(\"Abstract method `create` called.\");\n        }\n\n        reset(canvasAndContext, width, height) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n\n          canvasAndContext.canvas.width = width;\n          canvasAndContext.canvas.height = height;\n        }\n\n        destroy(canvasAndContext) {\n          if (!canvasAndContext.canvas) {\n            throw new Error(\"Canvas is not specified\");\n          }\n\n          canvasAndContext.canvas.width = 0;\n          canvasAndContext.canvas.height = 0;\n          canvasAndContext.canvas = null;\n          canvasAndContext.context = null;\n        }\n\n      }\n\n      exports.BaseCanvasFactory = BaseCanvasFactory;\n\n      class DOMCanvasFactory extends BaseCanvasFactory {\n        constructor() {\n          let {\n            ownerDocument = globalThis.document\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          super();\n          this._document = ownerDocument;\n        }\n\n        create(width, height) {\n          if (width <= 0 || height <= 0) {\n            throw new Error(\"Invalid canvas size\");\n          }\n\n          const canvas = this._document.createElement(\"canvas\");\n\n          const context = canvas.getContext(\"2d\");\n          canvas.width = width;\n          canvas.height = height;\n          return {\n            canvas,\n            context\n          };\n        }\n\n      }\n\n      exports.DOMCanvasFactory = DOMCanvasFactory;\n\n      class BaseCMapReaderFactory {\n        constructor(_ref) {\n          let {\n            baseUrl = null,\n            isCompressed = false\n          } = _ref;\n\n          if (this.constructor === BaseCMapReaderFactory) {\n            (0, _util.unreachable)(\"Cannot initialize BaseCMapReaderFactory.\");\n          }\n\n          this.baseUrl = baseUrl;\n          this.isCompressed = isCompressed;\n        }\n\n        async fetch(_ref2) {\n          let {\n            name\n          } = _ref2;\n\n          if (!this.baseUrl) {\n            throw new Error('The CMap \"baseUrl\" parameter must be specified, ensure that ' + 'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.');\n          }\n\n          if (!name) {\n            throw new Error(\"CMap name must be specified.\");\n          }\n\n          const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n          const compressionType = this.isCompressed ? _util.CMapCompressionType.BINARY : _util.CMapCompressionType.NONE;\n          return this._fetchData(url, compressionType).catch(reason => {\n            throw new Error(`Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`);\n          });\n        }\n\n        _fetchData(url, compressionType) {\n          (0, _util.unreachable)(\"Abstract method `_fetchData` called.\");\n        }\n\n      }\n\n      exports.BaseCMapReaderFactory = BaseCMapReaderFactory;\n\n      class DOMCMapReaderFactory extends BaseCMapReaderFactory {\n        _fetchData(url, compressionType) {\n          if (isFetchSupported() && isValidFetchUrl(url, document.baseURI)) {\n            return fetch(url).then(async response => {\n              if (!response.ok) {\n                throw new Error(response.statusText);\n              }\n\n              let cMapData;\n\n              if (this.isCompressed) {\n                cMapData = new Uint8Array(await response.arrayBuffer());\n              } else {\n                cMapData = (0, _util.stringToBytes)(await response.text());\n              }\n\n              return {\n                cMapData,\n                compressionType\n              };\n            });\n          }\n\n          return new Promise((resolve, reject) => {\n            const request = new XMLHttpRequest();\n            request.open(\"GET\", url, true);\n\n            if (this.isCompressed) {\n              request.responseType = \"arraybuffer\";\n            }\n\n            request.onreadystatechange = () => {\n              if (request.readyState !== XMLHttpRequest.DONE) {\n                return;\n              }\n\n              if (request.status === 200 || request.status === 0) {\n                let cMapData;\n\n                if (this.isCompressed && request.response) {\n                  cMapData = new Uint8Array(request.response);\n                } else if (!this.isCompressed && request.responseText) {\n                  cMapData = (0, _util.stringToBytes)(request.responseText);\n                }\n\n                if (cMapData) {\n                  resolve({\n                    cMapData,\n                    compressionType\n                  });\n                  return;\n                }\n              }\n\n              reject(new Error(request.statusText));\n            };\n\n            request.send(null);\n          });\n        }\n\n      }\n\n      exports.DOMCMapReaderFactory = DOMCMapReaderFactory;\n\n      class DOMSVGFactory {\n        create(width, height) {\n          (0, _util.assert)(width > 0 && height > 0, \"Invalid SVG dimensions\");\n          const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n          svg.setAttribute(\"version\", \"1.1\");\n          svg.setAttribute(\"width\", width + \"px\");\n          svg.setAttribute(\"height\", height + \"px\");\n          svg.setAttribute(\"preserveAspectRatio\", \"none\");\n          svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n          return svg;\n        }\n\n        createElement(type) {\n          (0, _util.assert)(typeof type === \"string\", \"Invalid SVG element type\");\n          return document.createElementNS(SVG_NS, type);\n        }\n\n      }\n\n      exports.DOMSVGFactory = DOMSVGFactory;\n\n      class PageViewport {\n        constructor(_ref3) {\n          let {\n            viewBox,\n            scale,\n            rotation,\n            offsetX = 0,\n            offsetY = 0,\n            dontFlip = false\n          } = _ref3;\n          this.viewBox = viewBox;\n          this.scale = scale;\n          this.rotation = rotation;\n          this.offsetX = offsetX;\n          this.offsetY = offsetY;\n          const centerX = (viewBox[2] + viewBox[0]) / 2;\n          const centerY = (viewBox[3] + viewBox[1]) / 2;\n          let rotateA, rotateB, rotateC, rotateD;\n          rotation = rotation % 360;\n          rotation = rotation < 0 ? rotation + 360 : rotation;\n\n          switch (rotation) {\n            case 180:\n              rotateA = -1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = 1;\n              break;\n\n            case 90:\n              rotateA = 0;\n              rotateB = 1;\n              rotateC = 1;\n              rotateD = 0;\n              break;\n\n            case 270:\n              rotateA = 0;\n              rotateB = -1;\n              rotateC = -1;\n              rotateD = 0;\n              break;\n\n            case 0:\n              rotateA = 1;\n              rotateB = 0;\n              rotateC = 0;\n              rotateD = -1;\n              break;\n\n            default:\n              throw new Error(\"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\");\n          }\n\n          if (dontFlip) {\n            rotateC = -rotateC;\n            rotateD = -rotateD;\n          }\n\n          let offsetCanvasX, offsetCanvasY;\n          let width, height;\n\n          if (rotateA === 0) {\n            offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n            width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n            height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n          } else {\n            offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n            offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n            width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n            height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n          }\n\n          this.transform = [rotateA * scale, rotateB * scale, rotateC * scale, rotateD * scale, offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY, offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY];\n          this.width = width;\n          this.height = height;\n        }\n\n        clone() {\n          let {\n            scale = this.scale,\n            rotation = this.rotation,\n            offsetX = this.offsetX,\n            offsetY = this.offsetY,\n            dontFlip = false\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return new PageViewport({\n            viewBox: this.viewBox.slice(),\n            scale,\n            rotation,\n            offsetX,\n            offsetY,\n            dontFlip\n          });\n        }\n\n        convertToViewportPoint(x, y) {\n          return _util.Util.applyTransform([x, y], this.transform);\n        }\n\n        convertToViewportRectangle(rect) {\n          const topLeft = _util.Util.applyTransform([rect[0], rect[1]], this.transform);\n\n          const bottomRight = _util.Util.applyTransform([rect[2], rect[3]], this.transform);\n\n          return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n        }\n\n        convertToPdfPoint(x, y) {\n          return _util.Util.applyInverseTransform([x, y], this.transform);\n        }\n\n      }\n\n      exports.PageViewport = PageViewport;\n\n      class RenderingCancelledException extends _util.BaseException {\n        constructor(msg, type) {\n          super(msg);\n          this.type = type;\n        }\n\n      }\n\n      exports.RenderingCancelledException = RenderingCancelledException;\n      const LinkTarget = {\n        NONE: 0,\n        SELF: 1,\n        BLANK: 2,\n        PARENT: 3,\n        TOP: 4\n      };\n      exports.LinkTarget = LinkTarget;\n\n      function addLinkAttributes(link) {\n        let {\n          url,\n          target,\n          rel,\n          enabled = true\n        } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n        (0, _util.assert)(url && typeof url === \"string\", 'addLinkAttributes: A valid \"url\" parameter must provided.');\n        const urlNullRemoved = (0, _util.removeNullCharacters)(url);\n\n        if (enabled) {\n          link.href = link.title = urlNullRemoved;\n        } else {\n          link.href = \"\";\n          link.title = `Disabled: ${urlNullRemoved}`;\n\n          link.onclick = () => {\n            return false;\n          };\n        }\n\n        let targetStr = \"\";\n\n        switch (target) {\n          case LinkTarget.NONE:\n            break;\n\n          case LinkTarget.SELF:\n            targetStr = \"_self\";\n            break;\n\n          case LinkTarget.BLANK:\n            targetStr = \"_blank\";\n            break;\n\n          case LinkTarget.PARENT:\n            targetStr = \"_parent\";\n            break;\n\n          case LinkTarget.TOP:\n            targetStr = \"_top\";\n            break;\n        }\n\n        link.target = targetStr;\n        link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n      }\n\n      function getFilenameFromUrl(url) {\n        const anchor = url.indexOf(\"#\");\n        const query = url.indexOf(\"?\");\n        const end = Math.min(anchor > 0 ? anchor : url.length, query > 0 ? query : url.length);\n        return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n      }\n\n      class StatTimer {\n        constructor() {\n          this.started = Object.create(null);\n          this.times = [];\n        }\n\n        time(name) {\n          if (name in this.started) {\n            (0, _util.warn)(`Timer is already running for ${name}`);\n          }\n\n          this.started[name] = Date.now();\n        }\n\n        timeEnd(name) {\n          if (!(name in this.started)) {\n            (0, _util.warn)(`Timer has not been started for ${name}`);\n          }\n\n          this.times.push({\n            name,\n            start: this.started[name],\n            end: Date.now()\n          });\n          delete this.started[name];\n        }\n\n        toString() {\n          const outBuf = [];\n          let longest = 0;\n\n          for (const time of this.times) {\n            const name = time.name;\n\n            if (name.length > longest) {\n              longest = name.length;\n            }\n          }\n\n          for (const time of this.times) {\n            const duration = time.end - time.start;\n            outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n          }\n\n          return outBuf.join(\"\");\n        }\n\n      }\n\n      exports.StatTimer = StatTimer;\n\n      function isFetchSupported() {\n        return typeof fetch !== \"undefined\" && typeof Response !== \"undefined\" && \"body\" in Response.prototype && typeof ReadableStream !== \"undefined\";\n      }\n\n      function isValidFetchUrl(url, baseUrl) {\n        try {\n          const {\n            protocol\n          } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n          return protocol === \"http:\" || protocol === \"https:\";\n        } catch (ex) {\n          return false;\n        }\n      }\n\n      function loadScript(src) {\n        return new Promise((resolve, reject) => {\n          const script = document.createElement(\"script\");\n          script.src = src;\n          script.onload = resolve;\n\n          script.onerror = function () {\n            reject(new Error(`Cannot load script at: ${script.src}`));\n          };\n\n          (document.head || document.documentElement).appendChild(script);\n        });\n      }\n\n      function deprecated(details) {\n        console.log(\"Deprecated API usage: \" + details);\n      }\n\n      let pdfDateStringRegex;\n\n      class PDFDateString {\n        static toDateObject(input) {\n          if (!input || !(0, _util.isString)(input)) {\n            return null;\n          }\n\n          if (!pdfDateStringRegex) {\n            pdfDateStringRegex = new RegExp(\"^D:\" + \"(\\\\d{4})\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"(\\\\d{2})?\" + \"([Z|+|-])?\" + \"(\\\\d{2})?\" + \"'?\" + \"(\\\\d{2})?\" + \"'?\");\n          }\n\n          const matches = pdfDateStringRegex.exec(input);\n\n          if (!matches) {\n            return null;\n          }\n\n          const year = parseInt(matches[1], 10);\n          let month = parseInt(matches[2], 10);\n          month = month >= 1 && month <= 12 ? month - 1 : 0;\n          let day = parseInt(matches[3], 10);\n          day = day >= 1 && day <= 31 ? day : 1;\n          let hour = parseInt(matches[4], 10);\n          hour = hour >= 0 && hour <= 23 ? hour : 0;\n          let minute = parseInt(matches[5], 10);\n          minute = minute >= 0 && minute <= 59 ? minute : 0;\n          let second = parseInt(matches[6], 10);\n          second = second >= 0 && second <= 59 ? second : 0;\n          const universalTimeRelation = matches[7] || \"Z\";\n          let offsetHour = parseInt(matches[8], 10);\n          offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n          let offsetMinute = parseInt(matches[9], 10) || 0;\n          offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n          if (universalTimeRelation === \"-\") {\n            hour += offsetHour;\n            minute += offsetMinute;\n          } else if (universalTimeRelation === \"+\") {\n            hour -= offsetHour;\n            minute -= offsetMinute;\n          }\n\n          return new Date(Date.UTC(year, month, day, hour, minute, second));\n        }\n\n      }\n\n      exports.PDFDateString = PDFDateString;\n      /***/\n    },\n    /* 2 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.arrayByteLength = arrayByteLength;\n      exports.arraysToBytes = arraysToBytes;\n      exports.assert = assert;\n      exports.bytesToString = bytesToString;\n      exports.createPromiseCapability = createPromiseCapability;\n      exports.escapeString = escapeString;\n      exports.getModificationDate = getModificationDate;\n      exports.getVerbosityLevel = getVerbosityLevel;\n      exports.info = info;\n      exports.isArrayBuffer = isArrayBuffer;\n      exports.isArrayEqual = isArrayEqual;\n      exports.isBool = isBool;\n      exports.isNum = isNum;\n      exports.isString = isString;\n      exports.isSameOrigin = isSameOrigin;\n      exports.createValidAbsoluteUrl = createValidAbsoluteUrl;\n      exports.removeNullCharacters = removeNullCharacters;\n      exports.setVerbosityLevel = setVerbosityLevel;\n      exports.shadow = shadow;\n      exports.string32 = string32;\n      exports.stringToBytes = stringToBytes;\n      exports.stringToPDFString = stringToPDFString;\n      exports.stringToUTF8String = stringToUTF8String;\n      exports.utf8StringToString = utf8StringToString;\n      exports.warn = warn;\n      exports.unreachable = unreachable;\n      exports.IsEvalSupportedCached = exports.IsLittleEndianCached = exports.createObjectURL = exports.FormatError = exports.Util = exports.UnknownErrorException = exports.UnexpectedResponseException = exports.TextRenderingMode = exports.StreamType = exports.PermissionFlag = exports.PasswordResponses = exports.PasswordException = exports.MissingPDFException = exports.InvalidPDFException = exports.AbortException = exports.CMapCompressionType = exports.ImageKind = exports.FontType = exports.AnnotationType = exports.AnnotationStateModelType = exports.AnnotationReviewState = exports.AnnotationReplyType = exports.AnnotationMarkedState = exports.AnnotationFlag = exports.AnnotationFieldFlag = exports.AnnotationBorderStyleType = exports.UNSUPPORTED_FEATURES = exports.VerbosityLevel = exports.OPS = exports.IDENTITY_MATRIX = exports.FONT_IDENTITY_MATRIX = exports.BaseException = void 0;\n\n      __w_pdfjs_require__(3);\n\n      const IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\n      exports.IDENTITY_MATRIX = IDENTITY_MATRIX;\n      const FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n      exports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\n      const PermissionFlag = {\n        PRINT: 0x04,\n        MODIFY_CONTENTS: 0x08,\n        COPY: 0x10,\n        MODIFY_ANNOTATIONS: 0x20,\n        FILL_INTERACTIVE_FORMS: 0x100,\n        COPY_FOR_ACCESSIBILITY: 0x200,\n        ASSEMBLE: 0x400,\n        PRINT_HIGH_QUALITY: 0x800\n      };\n      exports.PermissionFlag = PermissionFlag;\n      const TextRenderingMode = {\n        FILL: 0,\n        STROKE: 1,\n        FILL_STROKE: 2,\n        INVISIBLE: 3,\n        FILL_ADD_TO_PATH: 4,\n        STROKE_ADD_TO_PATH: 5,\n        FILL_STROKE_ADD_TO_PATH: 6,\n        ADD_TO_PATH: 7,\n        FILL_STROKE_MASK: 3,\n        ADD_TO_PATH_FLAG: 4\n      };\n      exports.TextRenderingMode = TextRenderingMode;\n      const ImageKind = {\n        GRAYSCALE_1BPP: 1,\n        RGB_24BPP: 2,\n        RGBA_32BPP: 3\n      };\n      exports.ImageKind = ImageKind;\n      const AnnotationType = {\n        TEXT: 1,\n        LINK: 2,\n        FREETEXT: 3,\n        LINE: 4,\n        SQUARE: 5,\n        CIRCLE: 6,\n        POLYGON: 7,\n        POLYLINE: 8,\n        HIGHLIGHT: 9,\n        UNDERLINE: 10,\n        SQUIGGLY: 11,\n        STRIKEOUT: 12,\n        STAMP: 13,\n        CARET: 14,\n        INK: 15,\n        POPUP: 16,\n        FILEATTACHMENT: 17,\n        SOUND: 18,\n        MOVIE: 19,\n        WIDGET: 20,\n        SCREEN: 21,\n        PRINTERMARK: 22,\n        TRAPNET: 23,\n        WATERMARK: 24,\n        THREED: 25,\n        REDACT: 26\n      };\n      exports.AnnotationType = AnnotationType;\n      const AnnotationStateModelType = {\n        MARKED: \"Marked\",\n        REVIEW: \"Review\"\n      };\n      exports.AnnotationStateModelType = AnnotationStateModelType;\n      const AnnotationMarkedState = {\n        MARKED: \"Marked\",\n        UNMARKED: \"Unmarked\"\n      };\n      exports.AnnotationMarkedState = AnnotationMarkedState;\n      const AnnotationReviewState = {\n        ACCEPTED: \"Accepted\",\n        REJECTED: \"Rejected\",\n        CANCELLED: \"Cancelled\",\n        COMPLETED: \"Completed\",\n        NONE: \"None\"\n      };\n      exports.AnnotationReviewState = AnnotationReviewState;\n      const AnnotationReplyType = {\n        GROUP: \"Group\",\n        REPLY: \"R\"\n      };\n      exports.AnnotationReplyType = AnnotationReplyType;\n      const AnnotationFlag = {\n        INVISIBLE: 0x01,\n        HIDDEN: 0x02,\n        PRINT: 0x04,\n        NOZOOM: 0x08,\n        NOROTATE: 0x10,\n        NOVIEW: 0x20,\n        READONLY: 0x40,\n        LOCKED: 0x80,\n        TOGGLENOVIEW: 0x100,\n        LOCKEDCONTENTS: 0x200\n      };\n      exports.AnnotationFlag = AnnotationFlag;\n      const AnnotationFieldFlag = {\n        READONLY: 0x0000001,\n        REQUIRED: 0x0000002,\n        NOEXPORT: 0x0000004,\n        MULTILINE: 0x0001000,\n        PASSWORD: 0x0002000,\n        NOTOGGLETOOFF: 0x0004000,\n        RADIO: 0x0008000,\n        PUSHBUTTON: 0x0010000,\n        COMBO: 0x0020000,\n        EDIT: 0x0040000,\n        SORT: 0x0080000,\n        FILESELECT: 0x0100000,\n        MULTISELECT: 0x0200000,\n        DONOTSPELLCHECK: 0x0400000,\n        DONOTSCROLL: 0x0800000,\n        COMB: 0x1000000,\n        RICHTEXT: 0x2000000,\n        RADIOSINUNISON: 0x2000000,\n        COMMITONSELCHANGE: 0x4000000\n      };\n      exports.AnnotationFieldFlag = AnnotationFieldFlag;\n      const AnnotationBorderStyleType = {\n        SOLID: 1,\n        DASHED: 2,\n        BEVELED: 3,\n        INSET: 4,\n        UNDERLINE: 5\n      };\n      exports.AnnotationBorderStyleType = AnnotationBorderStyleType;\n      const StreamType = {\n        UNKNOWN: \"UNKNOWN\",\n        FLATE: \"FLATE\",\n        LZW: \"LZW\",\n        DCT: \"DCT\",\n        JPX: \"JPX\",\n        JBIG: \"JBIG\",\n        A85: \"A85\",\n        AHX: \"AHX\",\n        CCF: \"CCF\",\n        RLX: \"RLX\"\n      };\n      exports.StreamType = StreamType;\n      const FontType = {\n        UNKNOWN: \"UNKNOWN\",\n        TYPE1: \"TYPE1\",\n        TYPE1C: \"TYPE1C\",\n        CIDFONTTYPE0: \"CIDFONTTYPE0\",\n        CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n        TRUETYPE: \"TRUETYPE\",\n        CIDFONTTYPE2: \"CIDFONTTYPE2\",\n        TYPE3: \"TYPE3\",\n        OPENTYPE: \"OPENTYPE\",\n        TYPE0: \"TYPE0\",\n        MMTYPE1: \"MMTYPE1\"\n      };\n      exports.FontType = FontType;\n      const VerbosityLevel = {\n        ERRORS: 0,\n        WARNINGS: 1,\n        INFOS: 5\n      };\n      exports.VerbosityLevel = VerbosityLevel;\n      const CMapCompressionType = {\n        NONE: 0,\n        BINARY: 1,\n        STREAM: 2\n      };\n      exports.CMapCompressionType = CMapCompressionType;\n      const OPS = {\n        dependency: 1,\n        setLineWidth: 2,\n        setLineCap: 3,\n        setLineJoin: 4,\n        setMiterLimit: 5,\n        setDash: 6,\n        setRenderingIntent: 7,\n        setFlatness: 8,\n        setGState: 9,\n        save: 10,\n        restore: 11,\n        transform: 12,\n        moveTo: 13,\n        lineTo: 14,\n        curveTo: 15,\n        curveTo2: 16,\n        curveTo3: 17,\n        closePath: 18,\n        rectangle: 19,\n        stroke: 20,\n        closeStroke: 21,\n        fill: 22,\n        eoFill: 23,\n        fillStroke: 24,\n        eoFillStroke: 25,\n        closeFillStroke: 26,\n        closeEOFillStroke: 27,\n        endPath: 28,\n        clip: 29,\n        eoClip: 30,\n        beginText: 31,\n        endText: 32,\n        setCharSpacing: 33,\n        setWordSpacing: 34,\n        setHScale: 35,\n        setLeading: 36,\n        setFont: 37,\n        setTextRenderingMode: 38,\n        setTextRise: 39,\n        moveText: 40,\n        setLeadingMoveText: 41,\n        setTextMatrix: 42,\n        nextLine: 43,\n        showText: 44,\n        showSpacedText: 45,\n        nextLineShowText: 46,\n        nextLineSetSpacingShowText: 47,\n        setCharWidth: 48,\n        setCharWidthAndBounds: 49,\n        setStrokeColorSpace: 50,\n        setFillColorSpace: 51,\n        setStrokeColor: 52,\n        setStrokeColorN: 53,\n        setFillColor: 54,\n        setFillColorN: 55,\n        setStrokeGray: 56,\n        setFillGray: 57,\n        setStrokeRGBColor: 58,\n        setFillRGBColor: 59,\n        setStrokeCMYKColor: 60,\n        setFillCMYKColor: 61,\n        shadingFill: 62,\n        beginInlineImage: 63,\n        beginImageData: 64,\n        endInlineImage: 65,\n        paintXObject: 66,\n        markPoint: 67,\n        markPointProps: 68,\n        beginMarkedContent: 69,\n        beginMarkedContentProps: 70,\n        endMarkedContent: 71,\n        beginCompat: 72,\n        endCompat: 73,\n        paintFormXObjectBegin: 74,\n        paintFormXObjectEnd: 75,\n        beginGroup: 76,\n        endGroup: 77,\n        beginAnnotations: 78,\n        endAnnotations: 79,\n        beginAnnotation: 80,\n        endAnnotation: 81,\n        paintJpegXObject: 82,\n        paintImageMaskXObject: 83,\n        paintImageMaskXObjectGroup: 84,\n        paintImageXObject: 85,\n        paintInlineImageXObject: 86,\n        paintInlineImageXObjectGroup: 87,\n        paintImageXObjectRepeat: 88,\n        paintImageMaskXObjectRepeat: 89,\n        paintSolidColorImageMask: 90,\n        constructPath: 91\n      };\n      exports.OPS = OPS;\n      const UNSUPPORTED_FEATURES = {\n        unknown: \"unknown\",\n        forms: \"forms\",\n        javaScript: \"javaScript\",\n        smask: \"smask\",\n        shadingPattern: \"shadingPattern\",\n        font: \"font\",\n        errorTilingPattern: \"errorTilingPattern\",\n        errorExtGState: \"errorExtGState\",\n        errorXObject: \"errorXObject\",\n        errorFontLoadType3: \"errorFontLoadType3\",\n        errorFontState: \"errorFontState\",\n        errorFontMissing: \"errorFontMissing\",\n        errorFontTranslate: \"errorFontTranslate\",\n        errorColorSpace: \"errorColorSpace\",\n        errorOperatorList: \"errorOperatorList\",\n        errorFontToUnicode: \"errorFontToUnicode\",\n        errorFontLoadNative: \"errorFontLoadNative\",\n        errorFontGetPath: \"errorFontGetPath\",\n        errorMarkedContent: \"errorMarkedContent\"\n      };\n      exports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\n      const PasswordResponses = {\n        NEED_PASSWORD: 1,\n        INCORRECT_PASSWORD: 2\n      };\n      exports.PasswordResponses = PasswordResponses;\n      let verbosity = VerbosityLevel.WARNINGS;\n\n      function setVerbosityLevel(level) {\n        if (Number.isInteger(level)) {\n          verbosity = level;\n        }\n      }\n\n      function getVerbosityLevel() {\n        return verbosity;\n      }\n\n      function info(msg) {\n        if (verbosity >= VerbosityLevel.INFOS) {\n          console.log(`Info: ${msg}`);\n        }\n      }\n\n      function warn(msg) {\n        if (verbosity >= VerbosityLevel.WARNINGS) {\n          console.log(`Warning: ${msg}`);\n        }\n      }\n\n      function unreachable(msg) {\n        throw new Error(msg);\n      }\n\n      function assert(cond, msg) {\n        if (!cond) {\n          unreachable(msg);\n        }\n      }\n\n      function isSameOrigin(baseUrl, otherUrl) {\n        let base;\n\n        try {\n          base = new URL(baseUrl);\n\n          if (!base.origin || base.origin === \"null\") {\n            return false;\n          }\n        } catch (e) {\n          return false;\n        }\n\n        const other = new URL(otherUrl, base);\n        return base.origin === other.origin;\n      }\n\n      function _isValidProtocol(url) {\n        if (!url) {\n          return false;\n        }\n\n        switch (url.protocol) {\n          case \"http:\":\n          case \"https:\":\n          case \"ftp:\":\n          case \"mailto:\":\n          case \"tel:\":\n            return true;\n\n          default:\n            return false;\n        }\n      }\n\n      function createValidAbsoluteUrl(url, baseUrl) {\n        if (!url) {\n          return null;\n        }\n\n        try {\n          const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n\n          if (_isValidProtocol(absoluteUrl)) {\n            return absoluteUrl;\n          }\n        } catch (ex) {}\n\n        return null;\n      }\n\n      function shadow(obj, prop, value) {\n        Object.defineProperty(obj, prop, {\n          value,\n          enumerable: true,\n          configurable: true,\n          writable: false\n        });\n        return value;\n      }\n\n      const BaseException = function BaseExceptionClosure() {\n        function BaseException(message) {\n          if (this.constructor === BaseException) {\n            unreachable(\"Cannot initialize BaseException.\");\n          }\n\n          this.message = message;\n          this.name = this.constructor.name;\n        }\n\n        BaseException.prototype = new Error();\n        BaseException.constructor = BaseException;\n        return BaseException;\n      }();\n\n      exports.BaseException = BaseException;\n\n      class PasswordException extends BaseException {\n        constructor(msg, code) {\n          super(msg);\n          this.code = code;\n        }\n\n      }\n\n      exports.PasswordException = PasswordException;\n\n      class UnknownErrorException extends BaseException {\n        constructor(msg, details) {\n          super(msg);\n          this.details = details;\n        }\n\n      }\n\n      exports.UnknownErrorException = UnknownErrorException;\n\n      class InvalidPDFException extends BaseException {}\n\n      exports.InvalidPDFException = InvalidPDFException;\n\n      class MissingPDFException extends BaseException {}\n\n      exports.MissingPDFException = MissingPDFException;\n\n      class UnexpectedResponseException extends BaseException {\n        constructor(msg, status) {\n          super(msg);\n          this.status = status;\n        }\n\n      }\n\n      exports.UnexpectedResponseException = UnexpectedResponseException;\n\n      class FormatError extends BaseException {}\n\n      exports.FormatError = FormatError;\n\n      class AbortException extends BaseException {}\n\n      exports.AbortException = AbortException;\n      const NullCharactersRegExp = /\\x00/g;\n\n      function removeNullCharacters(str) {\n        if (typeof str !== \"string\") {\n          warn(\"The argument for removeNullCharacters must be a string.\");\n          return str;\n        }\n\n        return str.replace(NullCharactersRegExp, \"\");\n      }\n\n      function bytesToString(bytes) {\n        assert(bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined, \"Invalid argument for bytesToString\");\n        const length = bytes.length;\n        const MAX_ARGUMENT_COUNT = 8192;\n\n        if (length < MAX_ARGUMENT_COUNT) {\n          return String.fromCharCode.apply(null, bytes);\n        }\n\n        const strBuf = [];\n\n        for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n          const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n          const chunk = bytes.subarray(i, chunkEnd);\n          strBuf.push(String.fromCharCode.apply(null, chunk));\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function stringToBytes(str) {\n        assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n        const length = str.length;\n        const bytes = new Uint8Array(length);\n\n        for (let i = 0; i < length; ++i) {\n          bytes[i] = str.charCodeAt(i) & 0xff;\n        }\n\n        return bytes;\n      }\n\n      function arrayByteLength(arr) {\n        if (arr.length !== undefined) {\n          return arr.length;\n        }\n\n        assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n        return arr.byteLength;\n      }\n\n      function arraysToBytes(arr) {\n        const length = arr.length;\n\n        if (length === 1 && arr[0] instanceof Uint8Array) {\n          return arr[0];\n        }\n\n        let resultLength = 0;\n\n        for (let i = 0; i < length; i++) {\n          resultLength += arrayByteLength(arr[i]);\n        }\n\n        let pos = 0;\n        const data = new Uint8Array(resultLength);\n\n        for (let i = 0; i < length; i++) {\n          let item = arr[i];\n\n          if (!(item instanceof Uint8Array)) {\n            if (typeof item === \"string\") {\n              item = stringToBytes(item);\n            } else {\n              item = new Uint8Array(item);\n            }\n          }\n\n          const itemLength = item.byteLength;\n          data.set(item, pos);\n          pos += itemLength;\n        }\n\n        return data;\n      }\n\n      function string32(value) {\n        return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n      }\n\n      function isLittleEndian() {\n        const buffer8 = new Uint8Array(4);\n        buffer8[0] = 1;\n        const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n        return view32[0] === 1;\n      }\n\n      const IsLittleEndianCached = {\n        get value() {\n          return shadow(this, \"value\", isLittleEndian());\n        }\n\n      };\n      exports.IsLittleEndianCached = IsLittleEndianCached;\n\n      function isEvalSupported() {\n        try {\n          new Function(\"\");\n          return true;\n        } catch (e) {\n          return false;\n        }\n      }\n\n      const IsEvalSupportedCached = {\n        get value() {\n          return shadow(this, \"value\", isEvalSupported());\n        }\n\n      };\n      exports.IsEvalSupportedCached = IsEvalSupportedCached;\n      const rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\n      class Util {\n        static makeCssRgb(r, g, b) {\n          rgbBuf[1] = r;\n          rgbBuf[3] = g;\n          rgbBuf[5] = b;\n          return rgbBuf.join(\"\");\n        }\n\n        static transform(m1, m2) {\n          return [m1[0] * m2[0] + m1[2] * m2[1], m1[1] * m2[0] + m1[3] * m2[1], m1[0] * m2[2] + m1[2] * m2[3], m1[1] * m2[2] + m1[3] * m2[3], m1[0] * m2[4] + m1[2] * m2[5] + m1[4], m1[1] * m2[4] + m1[3] * m2[5] + m1[5]];\n        }\n\n        static applyTransform(p, m) {\n          const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n          const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n          return [xt, yt];\n        }\n\n        static applyInverseTransform(p, m) {\n          const d = m[0] * m[3] - m[1] * m[2];\n          const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n          const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n          return [xt, yt];\n        }\n\n        static getAxialAlignedBoundingBox(r, m) {\n          const p1 = Util.applyTransform(r, m);\n          const p2 = Util.applyTransform(r.slice(2, 4), m);\n          const p3 = Util.applyTransform([r[0], r[3]], m);\n          const p4 = Util.applyTransform([r[2], r[1]], m);\n          return [Math.min(p1[0], p2[0], p3[0], p4[0]), Math.min(p1[1], p2[1], p3[1], p4[1]), Math.max(p1[0], p2[0], p3[0], p4[0]), Math.max(p1[1], p2[1], p3[1], p4[1])];\n        }\n\n        static inverseTransform(m) {\n          const d = m[0] * m[3] - m[1] * m[2];\n          return [m[3] / d, -m[1] / d, -m[2] / d, m[0] / d, (m[2] * m[5] - m[4] * m[3]) / d, (m[4] * m[1] - m[5] * m[0]) / d];\n        }\n\n        static apply3dTransform(m, v) {\n          return [m[0] * v[0] + m[1] * v[1] + m[2] * v[2], m[3] * v[0] + m[4] * v[1] + m[5] * v[2], m[6] * v[0] + m[7] * v[1] + m[8] * v[2]];\n        }\n\n        static singularValueDecompose2dScale(m) {\n          const transpose = [m[0], m[2], m[1], m[3]];\n          const a = m[0] * transpose[0] + m[1] * transpose[2];\n          const b = m[0] * transpose[1] + m[1] * transpose[3];\n          const c = m[2] * transpose[0] + m[3] * transpose[2];\n          const d = m[2] * transpose[1] + m[3] * transpose[3];\n          const first = (a + d) / 2;\n          const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n          const sx = first + second || 1;\n          const sy = first - second || 1;\n          return [Math.sqrt(sx), Math.sqrt(sy)];\n        }\n\n        static normalizeRect(rect) {\n          const r = rect.slice(0);\n\n          if (rect[0] > rect[2]) {\n            r[0] = rect[2];\n            r[2] = rect[0];\n          }\n\n          if (rect[1] > rect[3]) {\n            r[1] = rect[3];\n            r[3] = rect[1];\n          }\n\n          return r;\n        }\n\n        static intersect(rect1, rect2) {\n          function compare(a, b) {\n            return a - b;\n          }\n\n          const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n          const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n          const result = [];\n          rect1 = Util.normalizeRect(rect1);\n          rect2 = Util.normalizeRect(rect2);\n\n          if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n            result[0] = orderedX[1];\n            result[2] = orderedX[2];\n          } else {\n            return null;\n          }\n\n          if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n            result[1] = orderedY[1];\n            result[3] = orderedY[2];\n          } else {\n            return null;\n          }\n\n          return result;\n        }\n\n      }\n\n      exports.Util = Util;\n      const PDFStringTranslateTable = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014, 0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C, 0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160, 0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC];\n\n      function stringToPDFString(str) {\n        const length = str.length,\n              strBuf = [];\n\n        if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n          for (let i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n          }\n        } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n          for (let i = 2; i < length; i += 2) {\n            strBuf.push(String.fromCharCode(str.charCodeAt(i + 1) << 8 | str.charCodeAt(i)));\n          }\n        } else {\n          for (let i = 0; i < length; ++i) {\n            const code = PDFStringTranslateTable[str.charCodeAt(i)];\n            strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n          }\n        }\n\n        return strBuf.join(\"\");\n      }\n\n      function escapeString(str) {\n        return str.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n      }\n\n      function stringToUTF8String(str) {\n        return decodeURIComponent(escape(str));\n      }\n\n      function utf8StringToString(str) {\n        return unescape(encodeURIComponent(str));\n      }\n\n      function isBool(v) {\n        return typeof v === \"boolean\";\n      }\n\n      function isNum(v) {\n        return typeof v === \"number\";\n      }\n\n      function isString(v) {\n        return typeof v === \"string\";\n      }\n\n      function isArrayBuffer(v) {\n        return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n      }\n\n      function isArrayEqual(arr1, arr2) {\n        if (arr1.length !== arr2.length) {\n          return false;\n        }\n\n        return arr1.every(function (element, index) {\n          return element === arr2[index];\n        });\n      }\n\n      function getModificationDate() {\n        let date = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Date(Date.now());\n        const buffer = [date.getUTCFullYear().toString(), (date.getUTCMonth() + 1).toString().padStart(2, \"0\"), (date.getUTCDate() + 1).toString().padStart(2, \"0\"), date.getUTCHours().toString().padStart(2, \"0\"), date.getUTCMinutes().toString().padStart(2, \"0\"), date.getUTCSeconds().toString().padStart(2, \"0\")];\n        return buffer.join(\"\");\n      }\n\n      function createPromiseCapability() {\n        const capability = Object.create(null);\n        let isSettled = false;\n        Object.defineProperty(capability, \"settled\", {\n          get() {\n            return isSettled;\n          }\n\n        });\n        capability.promise = new Promise(function (resolve, reject) {\n          capability.resolve = function (data) {\n            isSettled = true;\n            resolve(data);\n          };\n\n          capability.reject = function (reason) {\n            isSettled = true;\n            reject(reason);\n          };\n        });\n        return capability;\n      }\n\n      const createObjectURL = function createObjectURLClosure() {\n        const digits = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        return function createObjectURL(data, contentType) {\n          let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n          if (!forceDataSchema && URL.createObjectURL) {\n            const blob = new Blob([data], {\n              type: contentType\n            });\n            return URL.createObjectURL(blob);\n          }\n\n          let buffer = `data:${contentType};base64,`;\n\n          for (let i = 0, ii = data.length; i < ii; i += 3) {\n            const b1 = data[i] & 0xff;\n            const b2 = data[i + 1] & 0xff;\n            const b3 = data[i + 2] & 0xff;\n            const d1 = b1 >> 2,\n                  d2 = (b1 & 3) << 4 | b2 >> 4;\n            const d3 = i + 1 < ii ? (b2 & 0xf) << 2 | b3 >> 6 : 64;\n            const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n            buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n          }\n\n          return buffer;\n        };\n      }();\n\n      exports.createObjectURL = createObjectURL;\n      /***/\n    },\n    /* 3 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      ;\n      /***/\n    },\n    /* 4 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.isNodeJS = void 0;\n      const isNodeJS = typeof process === \"object\" && process + \"\" === \"[object process]\" && !process.versions.nw && !(process.versions.electron && process.type && process.type !== \"browser\");\n      exports.isNodeJS = isNodeJS;\n      /***/\n    },\n    /* 5 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getDocument = getDocument;\n      exports.setPDFNetworkStreamFactory = setPDFNetworkStreamFactory;\n      exports.build = exports.version = exports.PDFPageProxy = exports.PDFDocumentProxy = exports.PDFWorker = exports.PDFDataRangeTransport = exports.LoopbackPort = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _font_loader = __w_pdfjs_require__(6);\n\n      var _node_utils = __w_pdfjs_require__(7);\n\n      var _annotation_storage = __w_pdfjs_require__(8);\n\n      var _api_compatibility = __w_pdfjs_require__(9);\n\n      var _canvas = __w_pdfjs_require__(10);\n\n      var _worker_options = __w_pdfjs_require__(12);\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      var _message_handler = __w_pdfjs_require__(13);\n\n      var _metadata = __w_pdfjs_require__(14);\n\n      var _optional_content_config = __w_pdfjs_require__(16);\n\n      var _transport_stream = __w_pdfjs_require__(17);\n\n      var _webgl = __w_pdfjs_require__(18);\n\n      const DEFAULT_RANGE_CHUNK_SIZE = 65536;\n      const RENDERING_CANCELLED_TIMEOUT = 100;\n      const DefaultCanvasFactory = _is_node.isNodeJS ? _node_utils.NodeCanvasFactory : _display_utils.DOMCanvasFactory;\n      const DefaultCMapReaderFactory = _is_node.isNodeJS ? _node_utils.NodeCMapReaderFactory : _display_utils.DOMCMapReaderFactory;\n      let createPDFNetworkStream;\n\n      function setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n        createPDFNetworkStream = pdfNetworkStreamFactory;\n      }\n\n      function getDocument(src) {\n        const task = new PDFDocumentLoadingTask();\n        let source;\n\n        if (typeof src === \"string\") {\n          source = {\n            url: src\n          };\n        } else if ((0, _util.isArrayBuffer)(src)) {\n          source = {\n            data: src\n          };\n        } else if (src instanceof PDFDataRangeTransport) {\n          source = {\n            range: src\n          };\n        } else {\n          if (typeof src !== \"object\") {\n            throw new Error(\"Invalid parameter in getDocument, \" + \"need either Uint8Array, string or a parameter object\");\n          }\n\n          if (!src.url && !src.data && !src.range) {\n            throw new Error(\"Invalid parameter object: need either .data, .range or .url\");\n          }\n\n          source = src;\n        }\n\n        const params = Object.create(null);\n        let rangeTransport = null,\n            worker = null;\n\n        for (const key in source) {\n          if (key === \"url\" && typeof window !== \"undefined\") {\n            params[key] = new URL(source[key], window.location).href;\n            continue;\n          } else if (key === \"range\") {\n            rangeTransport = source[key];\n            continue;\n          } else if (key === \"worker\") {\n            worker = source[key];\n            continue;\n          } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n            const pdfBytes = source[key];\n\n            if (typeof pdfBytes === \"string\") {\n              params[key] = (0, _util.stringToBytes)(pdfBytes);\n            } else if (typeof pdfBytes === \"object\" && pdfBytes !== null && !isNaN(pdfBytes.length)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else if ((0, _util.isArrayBuffer)(pdfBytes)) {\n              params[key] = new Uint8Array(pdfBytes);\n            } else {\n              throw new Error(\"Invalid PDF binary data: either typed array, \" + \"string or array-like object is expected in the \" + \"data property.\");\n            }\n\n            continue;\n          }\n\n          params[key] = source[key];\n        }\n\n        params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n        params.CMapReaderFactory = params.CMapReaderFactory || DefaultCMapReaderFactory;\n        params.ignoreErrors = params.stopAtErrors !== true;\n        params.fontExtraProperties = params.fontExtraProperties === true;\n        params.pdfBug = params.pdfBug === true;\n\n        if (!Number.isInteger(params.maxImageSize)) {\n          params.maxImageSize = -1;\n        }\n\n        if (typeof params.isEvalSupported !== \"boolean\") {\n          params.isEvalSupported = true;\n        }\n\n        if (typeof params.disableFontFace !== \"boolean\") {\n          params.disableFontFace = _api_compatibility.apiCompatibilityParams.disableFontFace || false;\n        }\n\n        if (typeof params.ownerDocument === \"undefined\") {\n          params.ownerDocument = globalThis.document;\n        }\n\n        if (typeof params.disableRange !== \"boolean\") {\n          params.disableRange = false;\n        }\n\n        if (typeof params.disableStream !== \"boolean\") {\n          params.disableStream = false;\n        }\n\n        if (typeof params.disableAutoFetch !== \"boolean\") {\n          params.disableAutoFetch = false;\n        }\n\n        (0, _util.setVerbosityLevel)(params.verbosity);\n\n        if (!worker) {\n          const workerParams = {\n            verbosity: params.verbosity,\n            port: _worker_options.GlobalWorkerOptions.workerPort\n          };\n          worker = workerParams.port ? PDFWorker.fromPort(workerParams) : new PDFWorker(workerParams);\n          task._worker = worker;\n        }\n\n        const docId = task.docId;\n        worker.promise.then(function () {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const workerIdPromise = _fetchDocument(worker, params, rangeTransport, docId);\n\n          const networkStreamPromise = new Promise(function (resolve) {\n            let networkStream;\n\n            if (rangeTransport) {\n              networkStream = new _transport_stream.PDFDataTransportStream({\n                length: params.length,\n                initialData: params.initialData,\n                progressiveDone: params.progressiveDone,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              }, rangeTransport);\n            } else if (!params.data) {\n              networkStream = createPDFNetworkStream({\n                url: params.url,\n                length: params.length,\n                httpHeaders: params.httpHeaders,\n                withCredentials: params.withCredentials,\n                rangeChunkSize: params.rangeChunkSize,\n                disableRange: params.disableRange,\n                disableStream: params.disableStream\n              });\n            }\n\n            resolve(networkStream);\n          });\n          return Promise.all([workerIdPromise, networkStreamPromise]).then(function (_ref4) {\n            let [workerId, networkStream] = _ref4;\n\n            if (task.destroyed) {\n              throw new Error(\"Loading aborted\");\n            }\n\n            const messageHandler = new _message_handler.MessageHandler(docId, workerId, worker.port);\n            messageHandler.postMessageTransfers = worker.postMessageTransfers;\n            const transport = new WorkerTransport(messageHandler, task, networkStream, params);\n            task._transport = transport;\n            messageHandler.send(\"Ready\", null);\n          });\n        }).catch(task._capability.reject);\n        return task;\n      }\n\n      function _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n        if (worker.destroyed) {\n          return Promise.reject(new Error(\"Worker was destroyed\"));\n        }\n\n        if (pdfDataRangeTransport) {\n          source.length = pdfDataRangeTransport.length;\n          source.initialData = pdfDataRangeTransport.initialData;\n          source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n        }\n\n        return worker.messageHandler.sendWithPromise(\"GetDocRequest\", {\n          docId,\n          apiVersion: '2.6.347',\n          source: {\n            data: source.data,\n            url: source.url,\n            password: source.password,\n            disableAutoFetch: source.disableAutoFetch,\n            rangeChunkSize: source.rangeChunkSize,\n            length: source.length\n          },\n          maxImageSize: source.maxImageSize,\n          disableFontFace: source.disableFontFace,\n          postMessageTransfers: worker.postMessageTransfers,\n          docBaseUrl: source.docBaseUrl,\n          ignoreErrors: source.ignoreErrors,\n          isEvalSupported: source.isEvalSupported,\n          fontExtraProperties: source.fontExtraProperties\n        }).then(function (workerId) {\n          if (worker.destroyed) {\n            throw new Error(\"Worker was destroyed\");\n          }\n\n          return workerId;\n        });\n      }\n\n      const PDFDocumentLoadingTask = function PDFDocumentLoadingTaskClosure() {\n        let nextDocumentId = 0;\n\n        class PDFDocumentLoadingTask {\n          constructor() {\n            this._capability = (0, _util.createPromiseCapability)();\n            this._transport = null;\n            this._worker = null;\n            this.docId = \"d\" + nextDocumentId++;\n            this.destroyed = false;\n            this.onPassword = null;\n            this.onProgress = null;\n            this.onUnsupportedFeature = null;\n          }\n\n          get promise() {\n            return this._capability.promise;\n          }\n\n          destroy() {\n            this.destroyed = true;\n            const transportDestroyed = !this._transport ? Promise.resolve() : this._transport.destroy();\n            return transportDestroyed.then(() => {\n              this._transport = null;\n\n              if (this._worker) {\n                this._worker.destroy();\n\n                this._worker = null;\n              }\n            });\n          }\n\n        }\n\n        return PDFDocumentLoadingTask;\n      }();\n\n      class PDFDataRangeTransport {\n        constructor(length, initialData) {\n          let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this.length = length;\n          this.initialData = initialData;\n          this.progressiveDone = progressiveDone;\n          this._rangeListeners = [];\n          this._progressListeners = [];\n          this._progressiveReadListeners = [];\n          this._progressiveDoneListeners = [];\n          this._readyCapability = (0, _util.createPromiseCapability)();\n        }\n\n        addRangeListener(listener) {\n          this._rangeListeners.push(listener);\n        }\n\n        addProgressListener(listener) {\n          this._progressListeners.push(listener);\n        }\n\n        addProgressiveReadListener(listener) {\n          this._progressiveReadListeners.push(listener);\n        }\n\n        addProgressiveDoneListener(listener) {\n          this._progressiveDoneListeners.push(listener);\n        }\n\n        onDataRange(begin, chunk) {\n          for (const listener of this._rangeListeners) {\n            listener(begin, chunk);\n          }\n        }\n\n        onDataProgress(loaded, total) {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressListeners) {\n              listener(loaded, total);\n            }\n          });\n        }\n\n        onDataProgressiveRead(chunk) {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressiveReadListeners) {\n              listener(chunk);\n            }\n          });\n        }\n\n        onDataProgressiveDone() {\n          this._readyCapability.promise.then(() => {\n            for (const listener of this._progressiveDoneListeners) {\n              listener();\n            }\n          });\n        }\n\n        transportReady() {\n          this._readyCapability.resolve();\n        }\n\n        requestDataRange(begin, end) {\n          (0, _util.unreachable)(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n        }\n\n        abort() {}\n\n      }\n\n      exports.PDFDataRangeTransport = PDFDataRangeTransport;\n\n      class PDFDocumentProxy {\n        constructor(pdfInfo, transport) {\n          this._pdfInfo = pdfInfo;\n          this._transport = transport;\n        }\n\n        get annotationStorage() {\n          return (0, _util.shadow)(this, \"annotationStorage\", new _annotation_storage.AnnotationStorage());\n        }\n\n        get numPages() {\n          return this._pdfInfo.numPages;\n        }\n\n        get fingerprint() {\n          return this._pdfInfo.fingerprint;\n        }\n\n        getPage(pageNumber) {\n          return this._transport.getPage(pageNumber);\n        }\n\n        getPageIndex(ref) {\n          return this._transport.getPageIndex(ref);\n        }\n\n        getDestinations() {\n          return this._transport.getDestinations();\n        }\n\n        getDestination(id) {\n          return this._transport.getDestination(id);\n        }\n\n        getPageLabels() {\n          return this._transport.getPageLabels();\n        }\n\n        getPageLayout() {\n          return this._transport.getPageLayout();\n        }\n\n        getPageMode() {\n          return this._transport.getPageMode();\n        }\n\n        getViewerPreferences() {\n          return this._transport.getViewerPreferences();\n        }\n\n        getOpenAction() {\n          return this._transport.getOpenAction();\n        }\n\n        getAttachments() {\n          return this._transport.getAttachments();\n        }\n\n        getJavaScript() {\n          return this._transport.getJavaScript();\n        }\n\n        getOutline() {\n          return this._transport.getOutline();\n        }\n\n        getOptionalContentConfig() {\n          return this._transport.getOptionalContentConfig();\n        }\n\n        getPermissions() {\n          return this._transport.getPermissions();\n        }\n\n        getMetadata() {\n          return this._transport.getMetadata();\n        }\n\n        getData() {\n          return this._transport.getData();\n        }\n\n        getDownloadInfo() {\n          return this._transport.downloadInfoCapability.promise;\n        }\n\n        getStats() {\n          return this._transport.getStats();\n        }\n\n        cleanup() {\n          return this._transport.startCleanup();\n        }\n\n        destroy() {\n          return this.loadingTask.destroy();\n        }\n\n        get loadingParams() {\n          return this._transport.loadingParams;\n        }\n\n        get loadingTask() {\n          return this._transport.loadingTask;\n        }\n\n        saveDocument(annotationStorage) {\n          return this._transport.saveDocument(annotationStorage);\n        }\n\n      }\n\n      exports.PDFDocumentProxy = PDFDocumentProxy;\n\n      class PDFPageProxy {\n        constructor(pageIndex, pageInfo, transport, ownerDocument) {\n          let pdfBug = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n          this._pageIndex = pageIndex;\n          this._pageInfo = pageInfo;\n          this._ownerDocument = ownerDocument;\n          this._transport = transport;\n          this._stats = pdfBug ? new _display_utils.StatTimer() : null;\n          this._pdfBug = pdfBug;\n          this.commonObjs = transport.commonObjs;\n          this.objs = new PDFObjects();\n          this.cleanupAfterRender = false;\n          this.pendingCleanup = false;\n          this._intentStates = new Map();\n          this.destroyed = false;\n        }\n\n        get pageNumber() {\n          return this._pageIndex + 1;\n        }\n\n        get rotate() {\n          return this._pageInfo.rotate;\n        }\n\n        get ref() {\n          return this._pageInfo.ref;\n        }\n\n        get userUnit() {\n          return this._pageInfo.userUnit;\n        }\n\n        get view() {\n          return this._pageInfo.view;\n        }\n\n        getViewport() {\n          let {\n            scale,\n            rotation = this.rotate,\n            offsetX = 0,\n            offsetY = 0,\n            dontFlip = false\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return new _display_utils.PageViewport({\n            viewBox: this.view,\n            scale,\n            rotation,\n            offsetX,\n            offsetY,\n            dontFlip\n          });\n        }\n\n        getAnnotations() {\n          let {\n            intent = null\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n          if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n            this.annotationsPromise = this._transport.getAnnotations(this._pageIndex, intent);\n            this.annotationsIntent = intent;\n          }\n\n          return this.annotationsPromise;\n        }\n\n        render(_ref5) {\n          let {\n            canvasContext,\n            viewport,\n            intent = \"display\",\n            enableWebGL = false,\n            renderInteractiveForms = false,\n            transform = null,\n            imageLayer = null,\n            canvasFactory = null,\n            background = null,\n            annotationStorage = null,\n            optionalContentConfigPromise = null\n          } = _ref5;\n\n          if (this._stats) {\n            this._stats.time(\"Overall\");\n          }\n\n          const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n          this.pendingCleanup = false;\n\n          if (!optionalContentConfigPromise) {\n            optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n          }\n\n          let intentState = this._intentStates.get(renderingIntent);\n\n          if (!intentState) {\n            intentState = Object.create(null);\n\n            this._intentStates.set(renderingIntent, intentState);\n          }\n\n          if (intentState.streamReaderCancelTimeout) {\n            clearTimeout(intentState.streamReaderCancelTimeout);\n            intentState.streamReaderCancelTimeout = null;\n          }\n\n          const canvasFactoryInstance = canvasFactory || new DefaultCanvasFactory({\n            ownerDocument: this._ownerDocument\n          });\n          const webGLContext = new _webgl.WebGLContext({\n            enable: enableWebGL\n          });\n\n          if (!intentState.displayReadyCapability) {\n            intentState.displayReadyCapability = (0, _util.createPromiseCapability)();\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n\n            this._pumpOperatorList({\n              pageIndex: this._pageIndex,\n              intent: renderingIntent,\n              renderInteractiveForms: renderInteractiveForms === true,\n              annotationStorage: annotationStorage && annotationStorage.getAll() || null\n            });\n          }\n\n          const complete = error => {\n            const i = intentState.renderTasks.indexOf(internalRenderTask);\n\n            if (i >= 0) {\n              intentState.renderTasks.splice(i, 1);\n            }\n\n            if (this.cleanupAfterRender || renderingIntent === \"print\") {\n              this.pendingCleanup = true;\n            }\n\n            this._tryCleanup();\n\n            if (error) {\n              internalRenderTask.capability.reject(error);\n\n              this._abortOperatorList({\n                intentState,\n                reason: error\n              });\n            } else {\n              internalRenderTask.capability.resolve();\n            }\n\n            if (this._stats) {\n              this._stats.timeEnd(\"Rendering\");\n\n              this._stats.timeEnd(\"Overall\");\n            }\n          };\n\n          const internalRenderTask = new InternalRenderTask({\n            callback: complete,\n            params: {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            },\n            objs: this.objs,\n            commonObjs: this.commonObjs,\n            operatorList: intentState.operatorList,\n            pageIndex: this._pageIndex,\n            canvasFactory: canvasFactoryInstance,\n            webGLContext,\n            useRequestAnimationFrame: renderingIntent !== \"print\",\n            pdfBug: this._pdfBug\n          });\n\n          if (!intentState.renderTasks) {\n            intentState.renderTasks = [];\n          }\n\n          intentState.renderTasks.push(internalRenderTask);\n          const renderTask = internalRenderTask.task;\n          Promise.all([intentState.displayReadyCapability.promise, optionalContentConfigPromise]).then(_ref6 => {\n            let [transparency, optionalContentConfig] = _ref6;\n\n            if (this.pendingCleanup) {\n              complete();\n              return;\n            }\n\n            if (this._stats) {\n              this._stats.time(\"Rendering\");\n            }\n\n            internalRenderTask.initializeGraphics({\n              transparency,\n              optionalContentConfig\n            });\n            internalRenderTask.operatorListChanged();\n          }).catch(complete);\n          return renderTask;\n        }\n\n        getOperatorList() {\n          function operatorListChanged() {\n            if (intentState.operatorList.lastChunk) {\n              intentState.opListReadCapability.resolve(intentState.operatorList);\n              const i = intentState.renderTasks.indexOf(opListTask);\n\n              if (i >= 0) {\n                intentState.renderTasks.splice(i, 1);\n              }\n            }\n          }\n\n          const renderingIntent = \"oplist\";\n\n          let intentState = this._intentStates.get(renderingIntent);\n\n          if (!intentState) {\n            intentState = Object.create(null);\n\n            this._intentStates.set(renderingIntent, intentState);\n          }\n\n          let opListTask;\n\n          if (!intentState.opListReadCapability) {\n            opListTask = Object.create(null);\n            opListTask.operatorListChanged = operatorListChanged;\n            intentState.opListReadCapability = (0, _util.createPromiseCapability)();\n            intentState.renderTasks = [];\n            intentState.renderTasks.push(opListTask);\n            intentState.operatorList = {\n              fnArray: [],\n              argsArray: [],\n              lastChunk: false\n            };\n\n            if (this._stats) {\n              this._stats.time(\"Page Request\");\n            }\n\n            this._pumpOperatorList({\n              pageIndex: this._pageIndex,\n              intent: renderingIntent\n            });\n          }\n\n          return intentState.opListReadCapability.promise;\n        }\n\n        streamTextContent() {\n          let {\n            normalizeWhitespace = false,\n            disableCombineTextItems = false\n          } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          const TEXT_CONTENT_CHUNK_SIZE = 100;\n          return this._transport.messageHandler.sendWithStream(\"GetTextContent\", {\n            pageIndex: this._pageIndex,\n            normalizeWhitespace: normalizeWhitespace === true,\n            combineTextItems: disableCombineTextItems !== true\n          }, {\n            highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n\n            size(textContent) {\n              return textContent.items.length;\n            }\n\n          });\n        }\n\n        getTextContent() {\n          let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          const readableStream = this.streamTextContent(params);\n          return new Promise(function (resolve, reject) {\n            function pump() {\n              reader.read().then(function (_ref7) {\n                let {\n                  value,\n                  done\n                } = _ref7;\n\n                if (done) {\n                  resolve(textContent);\n                  return;\n                }\n\n                Object.assign(textContent.styles, value.styles);\n                textContent.items.push(...value.items);\n                pump();\n              }, reject);\n            }\n\n            const reader = readableStream.getReader();\n            const textContent = {\n              items: [],\n              styles: Object.create(null)\n            };\n            pump();\n          });\n        }\n\n        _destroy() {\n          this.destroyed = true;\n          this._transport.pageCache[this._pageIndex] = null;\n          const waitOn = [];\n\n          for (const [intent, intentState] of this._intentStates) {\n            this._abortOperatorList({\n              intentState,\n              reason: new Error(\"Page was destroyed.\"),\n              force: true\n            });\n\n            if (intent === \"oplist\") {\n              continue;\n            }\n\n            for (const internalRenderTask of intentState.renderTasks) {\n              waitOn.push(internalRenderTask.completed);\n              internalRenderTask.cancel();\n            }\n          }\n\n          this.objs.clear();\n          this.annotationsPromise = null;\n          this.pendingCleanup = false;\n          return Promise.all(waitOn);\n        }\n\n        cleanup() {\n          let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          this.pendingCleanup = true;\n          return this._tryCleanup(resetStats);\n        }\n\n        _tryCleanup() {\n          let resetStats = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n          if (!this.pendingCleanup) {\n            return false;\n          }\n\n          for (const {\n            renderTasks,\n            operatorList\n          } of this._intentStates.values()) {\n            if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n              return false;\n            }\n          }\n\n          this._intentStates.clear();\n\n          this.objs.clear();\n          this.annotationsPromise = null;\n\n          if (resetStats && this._stats) {\n            this._stats = new _display_utils.StatTimer();\n          }\n\n          this.pendingCleanup = false;\n          return true;\n        }\n\n        _startRenderPage(transparency, intent) {\n          const intentState = this._intentStates.get(intent);\n\n          if (!intentState) {\n            return;\n          }\n\n          if (this._stats) {\n            this._stats.timeEnd(\"Page Request\");\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.resolve(transparency);\n          }\n        }\n\n        _renderPageChunk(operatorListChunk, intentState) {\n          for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n            intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n            intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n          }\n\n          intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n          for (let i = 0; i < intentState.renderTasks.length; i++) {\n            intentState.renderTasks[i].operatorListChanged();\n          }\n\n          if (operatorListChunk.lastChunk) {\n            this._tryCleanup();\n          }\n        }\n\n        _pumpOperatorList(args) {\n          (0, _util.assert)(args.intent, 'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.');\n\n          const readableStream = this._transport.messageHandler.sendWithStream(\"GetOperatorList\", args);\n\n          const reader = readableStream.getReader();\n\n          const intentState = this._intentStates.get(args.intent);\n\n          intentState.streamReader = reader;\n\n          const pump = () => {\n            reader.read().then(_ref8 => {\n              let {\n                value,\n                done\n              } = _ref8;\n\n              if (done) {\n                intentState.streamReader = null;\n                return;\n              }\n\n              if (this._transport.destroyed) {\n                return;\n              }\n\n              this._renderPageChunk(value, intentState);\n\n              pump();\n            }, reason => {\n              intentState.streamReader = null;\n\n              if (this._transport.destroyed) {\n                return;\n              }\n\n              if (intentState.operatorList) {\n                intentState.operatorList.lastChunk = true;\n\n                for (let i = 0; i < intentState.renderTasks.length; i++) {\n                  intentState.renderTasks[i].operatorListChanged();\n                }\n\n                this._tryCleanup();\n              }\n\n              if (intentState.displayReadyCapability) {\n                intentState.displayReadyCapability.reject(reason);\n              } else if (intentState.opListReadCapability) {\n                intentState.opListReadCapability.reject(reason);\n              } else {\n                throw reason;\n              }\n            });\n          };\n\n          pump();\n        }\n\n        _abortOperatorList(_ref9) {\n          let {\n            intentState,\n            reason,\n            force = false\n          } = _ref9;\n          (0, _util.assert)(reason instanceof Error || typeof reason === \"object\" && reason !== null, 'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.');\n\n          if (!intentState.streamReader) {\n            return;\n          }\n\n          if (!force) {\n            if (intentState.renderTasks.length !== 0) {\n              return;\n            }\n\n            if (reason instanceof _display_utils.RenderingCancelledException) {\n              intentState.streamReaderCancelTimeout = setTimeout(() => {\n                this._abortOperatorList({\n                  intentState,\n                  reason,\n                  force: true\n                });\n\n                intentState.streamReaderCancelTimeout = null;\n              }, RENDERING_CANCELLED_TIMEOUT);\n              return;\n            }\n          }\n\n          intentState.streamReader.cancel(new _util.AbortException(reason && reason.message));\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return;\n          }\n\n          for (const [intent, curIntentState] of this._intentStates) {\n            if (curIntentState === intentState) {\n              this._intentStates.delete(intent);\n\n              break;\n            }\n          }\n\n          this.cleanup();\n        }\n\n        get stats() {\n          return this._stats;\n        }\n\n      }\n\n      exports.PDFPageProxy = PDFPageProxy;\n\n      class LoopbackPort {\n        constructor() {\n          let defer = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n          this._listeners = [];\n          this._defer = defer;\n          this._deferred = Promise.resolve(undefined);\n        }\n\n        postMessage(obj, transfers) {\n          function cloneValue(value) {\n            if (typeof value !== \"object\" || value === null) {\n              return value;\n            }\n\n            if (cloned.has(value)) {\n              return cloned.get(value);\n            }\n\n            let buffer, result;\n\n            if ((buffer = value.buffer) && (0, _util.isArrayBuffer)(buffer)) {\n              const transferable = transfers && transfers.includes(buffer);\n\n              if (transferable) {\n                result = new value.constructor(buffer, value.byteOffset, value.byteLength);\n              } else {\n                result = new value.constructor(value);\n              }\n\n              cloned.set(value, result);\n              return result;\n            }\n\n            result = Array.isArray(value) ? [] : {};\n            cloned.set(value, result);\n\n            for (const i in value) {\n              let desc,\n                  p = value;\n\n              while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n                p = Object.getPrototypeOf(p);\n              }\n\n              if (typeof desc.value === \"undefined\") {\n                continue;\n              }\n\n              if (typeof desc.value === \"function\") {\n                if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n                  throw new Error(`LoopbackPort.postMessage - cannot clone: ${value[i]}`);\n                }\n\n                continue;\n              }\n\n              result[i] = cloneValue(desc.value);\n            }\n\n            return result;\n          }\n\n          if (!this._defer) {\n            this._listeners.forEach(listener => {\n              listener.call(this, {\n                data: obj\n              });\n            });\n\n            return;\n          }\n\n          const cloned = new WeakMap();\n          const e = {\n            data: cloneValue(obj)\n          };\n\n          this._deferred.then(() => {\n            this._listeners.forEach(listener => {\n              listener.call(this, e);\n            });\n          });\n        }\n\n        addEventListener(name, listener) {\n          this._listeners.push(listener);\n        }\n\n        removeEventListener(name, listener) {\n          const i = this._listeners.indexOf(listener);\n\n          this._listeners.splice(i, 1);\n        }\n\n        terminate() {\n          this._listeners.length = 0;\n        }\n\n      }\n\n      exports.LoopbackPort = LoopbackPort;\n\n      const PDFWorker = function PDFWorkerClosure() {\n        const pdfWorkerPorts = new WeakMap();\n        let isWorkerDisabled = false;\n        let fallbackWorkerSrc;\n        let nextFakeWorkerId = 0;\n        let fakeWorkerCapability;\n\n        if (_is_node.isNodeJS && typeof require === \"function\") {\n          isWorkerDisabled = true;\n          fallbackWorkerSrc = \"./pdf.worker.js\";\n        } else if (typeof document === \"object\" && \"currentScript\" in document) {\n          const pdfjsFilePath = document.currentScript && document.currentScript.src;\n\n          if (pdfjsFilePath) {\n            fallbackWorkerSrc = pdfjsFilePath.replace(/(\\.(?:min\\.)?js)(\\?.*)?$/i, \".worker$1$2\");\n          }\n        }\n\n        function getWorkerSrc() {\n          if (_worker_options.GlobalWorkerOptions.workerSrc) {\n            return _worker_options.GlobalWorkerOptions.workerSrc;\n          }\n\n          if (typeof fallbackWorkerSrc !== \"undefined\") {\n            if (!_is_node.isNodeJS) {\n              (0, _display_utils.deprecated)('No \"GlobalWorkerOptions.workerSrc\" specified.');\n            }\n\n            return fallbackWorkerSrc;\n          }\n\n          throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n        }\n\n        function getMainThreadWorkerMessageHandler() {\n          let mainWorkerMessageHandler;\n\n          try {\n            mainWorkerMessageHandler = globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n          } catch (ex) {}\n\n          return mainWorkerMessageHandler || null;\n        }\n\n        function setupFakeWorkerGlobal() {\n          if (fakeWorkerCapability) {\n            return fakeWorkerCapability.promise;\n          }\n\n          fakeWorkerCapability = (0, _util.createPromiseCapability)();\n\n          const loader = async function () {\n            const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n            if (mainWorkerMessageHandler) {\n              return mainWorkerMessageHandler;\n            }\n\n            if (_is_node.isNodeJS && typeof require === \"function\") {\n              const worker = eval(\"require\")(getWorkerSrc());\n              return worker.WorkerMessageHandler;\n            }\n\n            await (0, _display_utils.loadScript)(getWorkerSrc());\n            return window.pdfjsWorker.WorkerMessageHandler;\n          };\n\n          loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n          return fakeWorkerCapability.promise;\n        }\n\n        function createCDNWrapper(url) {\n          const wrapper = \"importScripts('\" + url + \"');\";\n          return URL.createObjectURL(new Blob([wrapper]));\n        }\n\n        class PDFWorker {\n          constructor() {\n            let {\n              name = null,\n              port = null,\n              verbosity = (0, _util.getVerbosityLevel)()\n            } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n            if (port && pdfWorkerPorts.has(port)) {\n              throw new Error(\"Cannot use more than one PDFWorker per port\");\n            }\n\n            this.name = name;\n            this.destroyed = false;\n            this.postMessageTransfers = true;\n            this.verbosity = verbosity;\n            this._readyCapability = (0, _util.createPromiseCapability)();\n            this._port = null;\n            this._webWorker = null;\n            this._messageHandler = null;\n\n            if (port) {\n              pdfWorkerPorts.set(port, this);\n\n              this._initializeFromPort(port);\n\n              return;\n            }\n\n            this._initialize();\n          }\n\n          get promise() {\n            return this._readyCapability.promise;\n          }\n\n          get port() {\n            return this._port;\n          }\n\n          get messageHandler() {\n            return this._messageHandler;\n          }\n\n          _initializeFromPort(port) {\n            this._port = port;\n            this._messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", port);\n\n            this._messageHandler.on(\"ready\", function () {});\n\n            this._readyCapability.resolve();\n          }\n\n          _initialize() {\n            if (typeof Worker !== \"undefined\" && !isWorkerDisabled && !getMainThreadWorkerMessageHandler()) {\n              let workerSrc = getWorkerSrc();\n\n              try {\n                if (!(0, _util.isSameOrigin)(window.location.href, workerSrc)) {\n                  workerSrc = createCDNWrapper(new URL(workerSrc, window.location).href);\n                }\n\n                const worker = new Worker(workerSrc);\n                const messageHandler = new _message_handler.MessageHandler(\"main\", \"worker\", worker);\n\n                const terminateEarly = () => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n                  messageHandler.destroy();\n                  worker.terminate();\n\n                  if (this.destroyed) {\n                    this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n                  } else {\n                    this._setupFakeWorker();\n                  }\n                };\n\n                const onWorkerError = () => {\n                  if (!this._webWorker) {\n                    terminateEarly();\n                  }\n                };\n\n                worker.addEventListener(\"error\", onWorkerError);\n                messageHandler.on(\"test\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  if (data) {\n                    this._messageHandler = messageHandler;\n                    this._port = worker;\n                    this._webWorker = worker;\n\n                    if (!data.supportTransfers) {\n                      this.postMessageTransfers = false;\n                    }\n\n                    this._readyCapability.resolve();\n\n                    messageHandler.send(\"configure\", {\n                      verbosity: this.verbosity\n                    });\n                  } else {\n                    this._setupFakeWorker();\n\n                    messageHandler.destroy();\n                    worker.terminate();\n                  }\n                });\n                messageHandler.on(\"ready\", data => {\n                  worker.removeEventListener(\"error\", onWorkerError);\n\n                  if (this.destroyed) {\n                    terminateEarly();\n                    return;\n                  }\n\n                  try {\n                    sendTest();\n                  } catch (e) {\n                    this._setupFakeWorker();\n                  }\n                });\n\n                const sendTest = () => {\n                  const testObj = new Uint8Array([this.postMessageTransfers ? 255 : 0]);\n\n                  try {\n                    messageHandler.send(\"test\", testObj, [testObj.buffer]);\n                  } catch (ex) {\n                    (0, _util.warn)(\"Cannot use postMessage transfers.\");\n                    testObj[0] = 0;\n                    messageHandler.send(\"test\", testObj);\n                  }\n                };\n\n                sendTest();\n                return;\n              } catch (e) {\n                (0, _util.info)(\"The worker has been disabled.\");\n              }\n            }\n\n            this._setupFakeWorker();\n          }\n\n          _setupFakeWorker() {\n            if (!isWorkerDisabled) {\n              (0, _util.warn)(\"Setting up fake worker.\");\n              isWorkerDisabled = true;\n            }\n\n            setupFakeWorkerGlobal().then(WorkerMessageHandler => {\n              if (this.destroyed) {\n                this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n\n                return;\n              }\n\n              const port = new LoopbackPort();\n              this._port = port;\n              const id = \"fake\" + nextFakeWorkerId++;\n              const workerHandler = new _message_handler.MessageHandler(id + \"_worker\", id, port);\n              WorkerMessageHandler.setup(workerHandler, port);\n              const messageHandler = new _message_handler.MessageHandler(id, id + \"_worker\", port);\n              this._messageHandler = messageHandler;\n\n              this._readyCapability.resolve();\n\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity\n              });\n            }).catch(reason => {\n              this._readyCapability.reject(new Error(`Setting up fake worker failed: \"${reason.message}\".`));\n            });\n          }\n\n          destroy() {\n            this.destroyed = true;\n\n            if (this._webWorker) {\n              this._webWorker.terminate();\n\n              this._webWorker = null;\n            }\n\n            pdfWorkerPorts.delete(this._port);\n            this._port = null;\n\n            if (this._messageHandler) {\n              this._messageHandler.destroy();\n\n              this._messageHandler = null;\n            }\n          }\n\n          static fromPort(params) {\n            if (!params || !params.port) {\n              throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n            }\n\n            if (pdfWorkerPorts.has(params.port)) {\n              return pdfWorkerPorts.get(params.port);\n            }\n\n            return new PDFWorker(params);\n          }\n\n          static getWorkerSrc() {\n            return getWorkerSrc();\n          }\n\n        }\n\n        return PDFWorker;\n      }();\n\n      exports.PDFWorker = PDFWorker;\n\n      class WorkerTransport {\n        constructor(messageHandler, loadingTask, networkStream, params) {\n          this.messageHandler = messageHandler;\n          this.loadingTask = loadingTask;\n          this.commonObjs = new PDFObjects();\n          this.fontLoader = new _font_loader.FontLoader({\n            docId: loadingTask.docId,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            ownerDocument: params.ownerDocument\n          });\n          this._params = params;\n          this.CMapReaderFactory = new params.CMapReaderFactory({\n            baseUrl: params.cMapUrl,\n            isCompressed: params.cMapPacked\n          });\n          this.destroyed = false;\n          this.destroyCapability = null;\n          this._passwordCapability = null;\n          this._networkStream = networkStream;\n          this._fullReader = null;\n          this._lastProgress = null;\n          this.pageCache = [];\n          this.pagePromises = [];\n          this.downloadInfoCapability = (0, _util.createPromiseCapability)();\n          this.setupMessageHandler();\n        }\n\n        destroy() {\n          if (this.destroyCapability) {\n            return this.destroyCapability.promise;\n          }\n\n          this.destroyed = true;\n          this.destroyCapability = (0, _util.createPromiseCapability)();\n\n          if (this._passwordCapability) {\n            this._passwordCapability.reject(new Error(\"Worker was destroyed during onPassword callback\"));\n          }\n\n          const waitOn = [];\n          this.pageCache.forEach(function (page) {\n            if (page) {\n              waitOn.push(page._destroy());\n            }\n          });\n          this.pageCache.length = 0;\n          this.pagePromises.length = 0;\n          const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n          waitOn.push(terminated);\n          Promise.all(waitOn).then(() => {\n            this.fontLoader.clear();\n\n            if (this._networkStream) {\n              this._networkStream.cancelAllRequests(new _util.AbortException(\"Worker was terminated.\"));\n            }\n\n            if (this.messageHandler) {\n              this.messageHandler.destroy();\n              this.messageHandler = null;\n            }\n\n            this.destroyCapability.resolve();\n          }, this.destroyCapability.reject);\n          return this.destroyCapability.promise;\n        }\n\n        setupMessageHandler() {\n          const {\n            messageHandler,\n            loadingTask\n          } = this;\n          messageHandler.on(\"GetReader\", (data, sink) => {\n            (0, _util.assert)(this._networkStream, \"GetReader - no `IPDFStream` instance available.\");\n            this._fullReader = this._networkStream.getFullReader();\n\n            this._fullReader.onProgress = evt => {\n              this._lastProgress = {\n                loaded: evt.loaded,\n                total: evt.total\n              };\n            };\n\n            sink.onPull = () => {\n              this._fullReader.read().then(function (_ref10) {\n                let {\n                  value,\n                  done\n                } = _ref10;\n\n                if (done) {\n                  sink.close();\n                  return;\n                }\n\n                (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetReader - expected an ArrayBuffer.\");\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(reason => {\n                sink.error(reason);\n              });\n            };\n\n            sink.onCancel = reason => {\n              this._fullReader.cancel(reason);\n\n              sink.ready.catch(readyReason => {\n                if (this.destroyed) {\n                  return;\n                }\n\n                throw readyReason;\n              });\n            };\n          });\n          messageHandler.on(\"ReaderHeadersReady\", data => {\n            const headersCapability = (0, _util.createPromiseCapability)();\n            const fullReader = this._fullReader;\n            fullReader.headersReady.then(() => {\n              if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n                if (this._lastProgress && loadingTask.onProgress) {\n                  loadingTask.onProgress(this._lastProgress);\n                }\n\n                fullReader.onProgress = evt => {\n                  if (loadingTask.onProgress) {\n                    loadingTask.onProgress({\n                      loaded: evt.loaded,\n                      total: evt.total\n                    });\n                  }\n                };\n              }\n\n              headersCapability.resolve({\n                isStreamingSupported: fullReader.isStreamingSupported,\n                isRangeSupported: fullReader.isRangeSupported,\n                contentLength: fullReader.contentLength\n              });\n            }, headersCapability.reject);\n            return headersCapability.promise;\n          });\n          messageHandler.on(\"GetRangeReader\", (data, sink) => {\n            (0, _util.assert)(this._networkStream, \"GetRangeReader - no `IPDFStream` instance available.\");\n\n            const rangeReader = this._networkStream.getRangeReader(data.begin, data.end);\n\n            if (!rangeReader) {\n              sink.close();\n              return;\n            }\n\n            sink.onPull = () => {\n              rangeReader.read().then(function (_ref11) {\n                let {\n                  value,\n                  done\n                } = _ref11;\n\n                if (done) {\n                  sink.close();\n                  return;\n                }\n\n                (0, _util.assert)((0, _util.isArrayBuffer)(value), \"GetRangeReader - expected an ArrayBuffer.\");\n                sink.enqueue(new Uint8Array(value), 1, [value]);\n              }).catch(reason => {\n                sink.error(reason);\n              });\n            };\n\n            sink.onCancel = reason => {\n              rangeReader.cancel(reason);\n              sink.ready.catch(readyReason => {\n                if (this.destroyed) {\n                  return;\n                }\n\n                throw readyReason;\n              });\n            };\n          });\n          messageHandler.on(\"GetDoc\", _ref12 => {\n            let {\n              pdfInfo\n            } = _ref12;\n            this._numPages = pdfInfo.numPages;\n\n            loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n          });\n          messageHandler.on(\"DocException\", function (ex) {\n            let reason;\n\n            switch (ex.name) {\n              case \"PasswordException\":\n                reason = new _util.PasswordException(ex.message, ex.code);\n                break;\n\n              case \"InvalidPDFException\":\n                reason = new _util.InvalidPDFException(ex.message);\n                break;\n\n              case \"MissingPDFException\":\n                reason = new _util.MissingPDFException(ex.message);\n                break;\n\n              case \"UnexpectedResponseException\":\n                reason = new _util.UnexpectedResponseException(ex.message, ex.status);\n                break;\n\n              case \"UnknownErrorException\":\n                reason = new _util.UnknownErrorException(ex.message, ex.details);\n                break;\n            }\n\n            if (!(reason instanceof Error)) {\n              const msg = \"DocException - expected a valid Error.\";\n              (0, _util.warn)(msg);\n            }\n\n            loadingTask._capability.reject(reason);\n          });\n          messageHandler.on(\"PasswordRequest\", exception => {\n            this._passwordCapability = (0, _util.createPromiseCapability)();\n\n            if (loadingTask.onPassword) {\n              const updatePassword = password => {\n                this._passwordCapability.resolve({\n                  password\n                });\n              };\n\n              try {\n                loadingTask.onPassword(updatePassword, exception.code);\n              } catch (ex) {\n                this._passwordCapability.reject(ex);\n              }\n            } else {\n              this._passwordCapability.reject(new _util.PasswordException(exception.message, exception.code));\n            }\n\n            return this._passwordCapability.promise;\n          });\n          messageHandler.on(\"DataLoaded\", data => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: data.length,\n                total: data.length\n              });\n            }\n\n            this.downloadInfoCapability.resolve(data);\n          });\n          messageHandler.on(\"StartRenderPage\", data => {\n            if (this.destroyed) {\n              return;\n            }\n\n            const page = this.pageCache[data.pageIndex];\n\n            page._startRenderPage(data.transparency, data.intent);\n          });\n          messageHandler.on(\"commonobj\", data => {\n            if (this.destroyed) {\n              return;\n            }\n\n            const [id, type, exportedData] = data;\n\n            if (this.commonObjs.has(id)) {\n              return;\n            }\n\n            switch (type) {\n              case \"Font\":\n                const params = this._params;\n\n                if (\"error\" in exportedData) {\n                  const exportedError = exportedData.error;\n                  (0, _util.warn)(`Error during font loading: ${exportedError}`);\n                  this.commonObjs.resolve(id, exportedError);\n                  break;\n                }\n\n                let fontRegistry = null;\n\n                if (params.pdfBug && globalThis.FontInspector && globalThis.FontInspector.enabled) {\n                  fontRegistry = {\n                    registerFont(font, url) {\n                      globalThis.FontInspector.fontAdded(font, url);\n                    }\n\n                  };\n                }\n\n                const font = new _font_loader.FontFaceObject(exportedData, {\n                  isEvalSupported: params.isEvalSupported,\n                  disableFontFace: params.disableFontFace,\n                  ignoreErrors: params.ignoreErrors,\n                  onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n                  fontRegistry\n                });\n                this.fontLoader.bind(font).catch(reason => {\n                  return messageHandler.sendWithPromise(\"FontFallback\", {\n                    id\n                  });\n                }).finally(() => {\n                  if (!params.fontExtraProperties && font.data) {\n                    font.data = null;\n                  }\n\n                  this.commonObjs.resolve(id, font);\n                });\n                break;\n\n              case \"FontPath\":\n              case \"Image\":\n                this.commonObjs.resolve(id, exportedData);\n                break;\n\n              default:\n                throw new Error(`Got unknown common object type ${type}`);\n            }\n          });\n          messageHandler.on(\"obj\", data => {\n            if (this.destroyed) {\n              return undefined;\n            }\n\n            const [id, pageIndex, type, imageData] = data;\n            const pageProxy = this.pageCache[pageIndex];\n\n            if (pageProxy.objs.has(id)) {\n              return undefined;\n            }\n\n            switch (type) {\n              case \"Image\":\n                pageProxy.objs.resolve(id, imageData);\n                const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n\n                if (imageData && \"data\" in imageData && imageData.data.length > MAX_IMAGE_SIZE_TO_STORE) {\n                  pageProxy.cleanupAfterRender = true;\n                }\n\n                break;\n\n              default:\n                throw new Error(`Got unknown object type ${type}`);\n            }\n\n            return undefined;\n          });\n          messageHandler.on(\"DocProgress\", data => {\n            if (this.destroyed) {\n              return;\n            }\n\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: data.loaded,\n                total: data.total\n              });\n            }\n          });\n          messageHandler.on(\"UnsupportedFeature\", this._onUnsupportedFeature.bind(this));\n          messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n            if (this.destroyed) {\n              sink.error(new Error(\"Worker was destroyed\"));\n              return;\n            }\n\n            let fetched = false;\n\n            sink.onPull = () => {\n              if (fetched) {\n                sink.close();\n                return;\n              }\n\n              fetched = true;\n              this.CMapReaderFactory.fetch(data).then(function (builtInCMap) {\n                sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n              }).catch(function (reason) {\n                sink.error(reason);\n              });\n            };\n          });\n        }\n\n        _onUnsupportedFeature(_ref13) {\n          let {\n            featureId\n          } = _ref13;\n\n          if (this.destroyed) {\n            return;\n          }\n\n          if (this.loadingTask.onUnsupportedFeature) {\n            this.loadingTask.onUnsupportedFeature(featureId);\n          }\n        }\n\n        getData() {\n          return this.messageHandler.sendWithPromise(\"GetData\", null);\n        }\n\n        getPage(pageNumber) {\n          if (!Number.isInteger(pageNumber) || pageNumber <= 0 || pageNumber > this._numPages) {\n            return Promise.reject(new Error(\"Invalid page request\"));\n          }\n\n          const pageIndex = pageNumber - 1;\n\n          if (pageIndex in this.pagePromises) {\n            return this.pagePromises[pageIndex];\n          }\n\n          const promise = this.messageHandler.sendWithPromise(\"GetPage\", {\n            pageIndex\n          }).then(pageInfo => {\n            if (this.destroyed) {\n              throw new Error(\"Transport destroyed\");\n            }\n\n            const page = new PDFPageProxy(pageIndex, pageInfo, this, this._params.ownerDocument, this._params.pdfBug);\n            this.pageCache[pageIndex] = page;\n            return page;\n          });\n          this.pagePromises[pageIndex] = promise;\n          return promise;\n        }\n\n        getPageIndex(ref) {\n          return this.messageHandler.sendWithPromise(\"GetPageIndex\", {\n            ref\n          }).catch(function (reason) {\n            return Promise.reject(new Error(reason));\n          });\n        }\n\n        getAnnotations(pageIndex, intent) {\n          return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n            pageIndex,\n            intent\n          });\n        }\n\n        saveDocument(annotationStorage) {\n          return this.messageHandler.sendWithPromise(\"SaveDocument\", {\n            numPages: this._numPages,\n            annotationStorage: annotationStorage && annotationStorage.getAll() || null,\n            filename: this._fullReader ? this._fullReader.filename : null\n          }).finally(() => {\n            if (annotationStorage) {\n              annotationStorage.resetModified();\n            }\n          });\n        }\n\n        getDestinations() {\n          return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n        }\n\n        getDestination(id) {\n          if (typeof id !== \"string\") {\n            return Promise.reject(new Error(\"Invalid destination request.\"));\n          }\n\n          return this.messageHandler.sendWithPromise(\"GetDestination\", {\n            id\n          });\n        }\n\n        getPageLabels() {\n          return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n        }\n\n        getPageLayout() {\n          return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n        }\n\n        getPageMode() {\n          return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n        }\n\n        getViewerPreferences() {\n          return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n        }\n\n        getOpenAction() {\n          return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n        }\n\n        getAttachments() {\n          return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n        }\n\n        getJavaScript() {\n          return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n        }\n\n        getOutline() {\n          return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n        }\n\n        getOptionalContentConfig() {\n          return this.messageHandler.sendWithPromise(\"GetOptionalContentConfig\", null).then(results => {\n            return new _optional_content_config.OptionalContentConfig(results);\n          });\n        }\n\n        getPermissions() {\n          return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n        }\n\n        getMetadata() {\n          return this.messageHandler.sendWithPromise(\"GetMetadata\", null).then(results => {\n            return {\n              info: results[0],\n              metadata: results[1] ? new _metadata.Metadata(results[1]) : null,\n              contentDispositionFilename: this._fullReader ? this._fullReader.filename : null\n            };\n          });\n        }\n\n        getStats() {\n          return this.messageHandler.sendWithPromise(\"GetStats\", null);\n        }\n\n        startCleanup() {\n          return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n            for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n              const page = this.pageCache[i];\n\n              if (page) {\n                const cleanupSuccessful = page.cleanup();\n\n                if (!cleanupSuccessful) {\n                  throw new Error(`startCleanup: Page ${i + 1} is currently rendering.`);\n                }\n              }\n            }\n\n            this.commonObjs.clear();\n            this.fontLoader.clear();\n          });\n        }\n\n        get loadingParams() {\n          const params = this._params;\n          return (0, _util.shadow)(this, \"loadingParams\", {\n            disableAutoFetch: params.disableAutoFetch,\n            disableFontFace: params.disableFontFace\n          });\n        }\n\n      }\n\n      class PDFObjects {\n        constructor() {\n          this._objs = Object.create(null);\n        }\n\n        _ensureObj(objId) {\n          if (this._objs[objId]) {\n            return this._objs[objId];\n          }\n\n          return this._objs[objId] = {\n            capability: (0, _util.createPromiseCapability)(),\n            data: null,\n            resolved: false\n          };\n        }\n\n        get(objId) {\n          let callback = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n          if (callback) {\n            this._ensureObj(objId).capability.promise.then(callback);\n\n            return null;\n          }\n\n          const obj = this._objs[objId];\n\n          if (!obj || !obj.resolved) {\n            throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n          }\n\n          return obj.data;\n        }\n\n        has(objId) {\n          const obj = this._objs[objId];\n          return obj ? obj.resolved : false;\n        }\n\n        resolve(objId, data) {\n          const obj = this._ensureObj(objId);\n\n          obj.resolved = true;\n          obj.data = data;\n          obj.capability.resolve(data);\n        }\n\n        clear() {\n          this._objs = Object.create(null);\n        }\n\n      }\n\n      class RenderTask {\n        constructor(internalRenderTask) {\n          this._internalRenderTask = internalRenderTask;\n          this.onContinue = null;\n        }\n\n        get promise() {\n          return this._internalRenderTask.capability.promise;\n        }\n\n        cancel() {\n          this._internalRenderTask.cancel();\n        }\n\n      }\n\n      const InternalRenderTask = function InternalRenderTaskClosure() {\n        const canvasInRendering = new WeakSet();\n\n        class InternalRenderTask {\n          constructor(_ref14) {\n            let {\n              callback,\n              params,\n              objs,\n              commonObjs,\n              operatorList,\n              pageIndex,\n              canvasFactory,\n              webGLContext,\n              useRequestAnimationFrame = false,\n              pdfBug = false\n            } = _ref14;\n            this.callback = callback;\n            this.params = params;\n            this.objs = objs;\n            this.commonObjs = commonObjs;\n            this.operatorListIdx = null;\n            this.operatorList = operatorList;\n            this._pageIndex = pageIndex;\n            this.canvasFactory = canvasFactory;\n            this.webGLContext = webGLContext;\n            this._pdfBug = pdfBug;\n            this.running = false;\n            this.graphicsReadyCallback = null;\n            this.graphicsReady = false;\n            this._useRequestAnimationFrame = useRequestAnimationFrame === true && typeof window !== \"undefined\";\n            this.cancelled = false;\n            this.capability = (0, _util.createPromiseCapability)();\n            this.task = new RenderTask(this);\n            this._continueBound = this._continue.bind(this);\n            this._scheduleNextBound = this._scheduleNext.bind(this);\n            this._nextBound = this._next.bind(this);\n            this._canvas = params.canvasContext.canvas;\n          }\n\n          get completed() {\n            return this.capability.promise.catch(function () {});\n          }\n\n          initializeGraphics(_ref15) {\n            let {\n              transparency = false,\n              optionalContentConfig\n            } = _ref15;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this._canvas) {\n              if (canvasInRendering.has(this._canvas)) {\n                throw new Error(\"Cannot use the same canvas during multiple render() operations. \" + \"Use different canvas or ensure previous operations were \" + \"cancelled or completed.\");\n              }\n\n              canvasInRendering.add(this._canvas);\n            }\n\n            if (this._pdfBug && globalThis.StepperManager && globalThis.StepperManager.enabled) {\n              this.stepper = globalThis.StepperManager.create(this._pageIndex);\n              this.stepper.init(this.operatorList);\n              this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n            }\n\n            const {\n              canvasContext,\n              viewport,\n              transform,\n              imageLayer,\n              background\n            } = this.params;\n            this.gfx = new _canvas.CanvasGraphics(canvasContext, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext, imageLayer, optionalContentConfig);\n            this.gfx.beginDrawing({\n              transform,\n              viewport,\n              transparency,\n              background\n            });\n            this.operatorListIdx = 0;\n            this.graphicsReady = true;\n\n            if (this.graphicsReadyCallback) {\n              this.graphicsReadyCallback();\n            }\n          }\n\n          cancel() {\n            let error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n            this.running = false;\n            this.cancelled = true;\n\n            if (this.gfx) {\n              this.gfx.endDrawing();\n            }\n\n            if (this._canvas) {\n              canvasInRendering.delete(this._canvas);\n            }\n\n            this.callback(error || new _display_utils.RenderingCancelledException(`Rendering cancelled, page ${this._pageIndex + 1}`, \"canvas\"));\n          }\n\n          operatorListChanged() {\n            if (!this.graphicsReady) {\n              if (!this.graphicsReadyCallback) {\n                this.graphicsReadyCallback = this._continueBound;\n              }\n\n              return;\n            }\n\n            if (this.stepper) {\n              this.stepper.updateOperatorList(this.operatorList);\n            }\n\n            if (this.running) {\n              return;\n            }\n\n            this._continue();\n          }\n\n          _continue() {\n            this.running = true;\n\n            if (this.cancelled) {\n              return;\n            }\n\n            if (this.task.onContinue) {\n              this.task.onContinue(this._scheduleNextBound);\n            } else {\n              this._scheduleNext();\n            }\n          }\n\n          _scheduleNext() {\n            if (this._useRequestAnimationFrame) {\n              window.requestAnimationFrame(() => {\n                this._nextBound().catch(this.cancel.bind(this));\n              });\n            } else {\n              Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n            }\n          }\n\n          async _next() {\n            if (this.cancelled) {\n              return;\n            }\n\n            this.operatorListIdx = this.gfx.executeOperatorList(this.operatorList, this.operatorListIdx, this._continueBound, this.stepper);\n\n            if (this.operatorListIdx === this.operatorList.argsArray.length) {\n              this.running = false;\n\n              if (this.operatorList.lastChunk) {\n                this.gfx.endDrawing();\n\n                if (this._canvas) {\n                  canvasInRendering.delete(this._canvas);\n                }\n\n                this.callback();\n              }\n            }\n          }\n\n        }\n\n        return InternalRenderTask;\n      }();\n\n      const version = '2.6.347';\n      exports.version = version;\n      const build = '3be9c65f';\n      exports.build = build;\n      /***/\n    },\n    /* 6 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.FontLoader = exports.FontFaceObject = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      class BaseFontLoader {\n        constructor(_ref16) {\n          let {\n            docId,\n            onUnsupportedFeature,\n            ownerDocument = globalThis.document\n          } = _ref16;\n\n          if (this.constructor === BaseFontLoader) {\n            (0, _util.unreachable)(\"Cannot initialize BaseFontLoader.\");\n          }\n\n          this.docId = docId;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this._document = ownerDocument;\n          this.nativeFontFaces = [];\n          this.styleElement = null;\n        }\n\n        addNativeFontFace(nativeFontFace) {\n          this.nativeFontFaces.push(nativeFontFace);\n\n          this._document.fonts.add(nativeFontFace);\n        }\n\n        insertRule(rule) {\n          let styleElement = this.styleElement;\n\n          if (!styleElement) {\n            styleElement = this.styleElement = this._document.createElement(\"style\");\n            styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n\n            this._document.documentElement.getElementsByTagName(\"head\")[0].appendChild(styleElement);\n          }\n\n          const styleSheet = styleElement.sheet;\n          styleSheet.insertRule(rule, styleSheet.cssRules.length);\n        }\n\n        clear() {\n          this.nativeFontFaces.forEach(nativeFontFace => {\n            this._document.fonts.delete(nativeFontFace);\n          });\n          this.nativeFontFaces.length = 0;\n\n          if (this.styleElement) {\n            this.styleElement.remove();\n            this.styleElement = null;\n          }\n        }\n\n        async bind(font) {\n          if (font.attached || font.missingFile) {\n            return;\n          }\n\n          font.attached = true;\n\n          if (this.isFontLoadingAPISupported) {\n            const nativeFontFace = font.createNativeFontFace();\n\n            if (nativeFontFace) {\n              this.addNativeFontFace(nativeFontFace);\n\n              try {\n                await nativeFontFace.loaded;\n              } catch (ex) {\n                this._onUnsupportedFeature({\n                  featureId: _util.UNSUPPORTED_FEATURES.errorFontLoadNative\n                });\n\n                (0, _util.warn)(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n                font.disableFontFace = true;\n                throw ex;\n              }\n            }\n\n            return;\n          }\n\n          const rule = font.createFontFaceRule();\n\n          if (rule) {\n            this.insertRule(rule);\n\n            if (this.isSyncFontLoadingSupported) {\n              return;\n            }\n\n            await new Promise(resolve => {\n              const request = this._queueLoadingCallback(resolve);\n\n              this._prepareFontLoadEvent([rule], [font], request);\n            });\n          }\n        }\n\n        _queueLoadingCallback(callback) {\n          (0, _util.unreachable)(\"Abstract method `_queueLoadingCallback`.\");\n        }\n\n        get isFontLoadingAPISupported() {\n          const supported = typeof this._document !== \"undefined\" && !!this._document.fonts;\n          return (0, _util.shadow)(this, \"isFontLoadingAPISupported\", supported);\n        }\n\n        get isSyncFontLoadingSupported() {\n          (0, _util.unreachable)(\"Abstract method `isSyncFontLoadingSupported`.\");\n        }\n\n        get _loadTestFont() {\n          (0, _util.unreachable)(\"Abstract method `_loadTestFont`.\");\n        }\n\n        _prepareFontLoadEvent(rules, fontsToLoad, request) {\n          (0, _util.unreachable)(\"Abstract method `_prepareFontLoadEvent`.\");\n        }\n\n      }\n\n      let FontLoader;\n      exports.FontLoader = FontLoader;\n      {\n        exports.FontLoader = FontLoader = class GenericFontLoader extends BaseFontLoader {\n          constructor(params) {\n            super(params);\n            this.loadingContext = {\n              requests: [],\n              nextRequestId: 0\n            };\n            this.loadTestFontId = 0;\n          }\n\n          get isSyncFontLoadingSupported() {\n            let supported = false;\n\n            if (typeof navigator === \"undefined\") {\n              supported = true;\n            } else {\n              const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(navigator.userAgent);\n\n              if (m && m[1] >= 14) {\n                supported = true;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isSyncFontLoadingSupported\", supported);\n          }\n\n          _queueLoadingCallback(callback) {\n            function completeRequest() {\n              (0, _util.assert)(!request.done, \"completeRequest() cannot be called twice.\");\n              request.done = true;\n\n              while (context.requests.length > 0 && context.requests[0].done) {\n                const otherRequest = context.requests.shift();\n                setTimeout(otherRequest.callback, 0);\n              }\n            }\n\n            const context = this.loadingContext;\n            const request = {\n              id: `pdfjs-font-loading-${context.nextRequestId++}`,\n              done: false,\n              complete: completeRequest,\n              callback\n            };\n            context.requests.push(request);\n            return request;\n          }\n\n          get _loadTestFont() {\n            const getLoadTestFont = function () {\n              return atob(\"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" + \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" + \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" + \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" + \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" + \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" + \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" + \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" + \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" + \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" + \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" + \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" + \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" + \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" + \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" + \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" + \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" + \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\");\n            };\n\n            return (0, _util.shadow)(this, \"_loadTestFont\", getLoadTestFont());\n          }\n\n          _prepareFontLoadEvent(rules, fonts, request) {\n            function int32(data, offset) {\n              return data.charCodeAt(offset) << 24 | data.charCodeAt(offset + 1) << 16 | data.charCodeAt(offset + 2) << 8 | data.charCodeAt(offset + 3) & 0xff;\n            }\n\n            function spliceString(s, offset, remove, insert) {\n              const chunk1 = s.substring(0, offset);\n              const chunk2 = s.substring(offset + remove);\n              return chunk1 + insert + chunk2;\n            }\n\n            let i, ii;\n\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.width = 1;\n            canvas.height = 1;\n            const ctx = canvas.getContext(\"2d\");\n            let called = 0;\n\n            function isFontReady(name, callback) {\n              called++;\n\n              if (called > 30) {\n                (0, _util.warn)(\"Load test font never loaded.\");\n                callback();\n                return;\n              }\n\n              ctx.font = \"30px \" + name;\n              ctx.fillText(\".\", 0, 20);\n              const imageData = ctx.getImageData(0, 0, 1, 1);\n\n              if (imageData.data[3] > 0) {\n                callback();\n                return;\n              }\n\n              setTimeout(isFontReady.bind(null, name, callback));\n            }\n\n            const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n            let data = this._loadTestFont;\n            const COMMENT_OFFSET = 976;\n            data = spliceString(data, COMMENT_OFFSET, loadTestFontId.length, loadTestFontId);\n            const CFF_CHECKSUM_OFFSET = 16;\n            const XXXX_VALUE = 0x58585858;\n            let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n\n            for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId, i) | 0;\n            }\n\n            if (i < loadTestFontId.length) {\n              checksum = checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i) | 0;\n            }\n\n            data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, (0, _util.string32)(checksum));\n            const url = `url(data:font/opentype;base64,${btoa(data)});`;\n            const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n            this.insertRule(rule);\n            const names = [];\n\n            for (i = 0, ii = fonts.length; i < ii; i++) {\n              names.push(fonts[i].loadedName);\n            }\n\n            names.push(loadTestFontId);\n\n            const div = this._document.createElement(\"div\");\n\n            div.style.visibility = \"hidden\";\n            div.style.width = div.style.height = \"10px\";\n            div.style.position = \"absolute\";\n            div.style.top = div.style.left = \"0px\";\n\n            for (i = 0, ii = names.length; i < ii; ++i) {\n              const span = this._document.createElement(\"span\");\n\n              span.textContent = \"Hi\";\n              span.style.fontFamily = names[i];\n              div.appendChild(span);\n            }\n\n            this._document.body.appendChild(div);\n\n            isFontReady(loadTestFontId, () => {\n              this._document.body.removeChild(div);\n\n              request.complete();\n            });\n          }\n\n        };\n      }\n\n      class FontFaceObject {\n        constructor(translatedData, _ref17) {\n          let {\n            isEvalSupported = true,\n            disableFontFace = false,\n            ignoreErrors = false,\n            onUnsupportedFeature = null,\n            fontRegistry = null\n          } = _ref17;\n          this.compiledGlyphs = Object.create(null);\n\n          for (const i in translatedData) {\n            this[i] = translatedData[i];\n          }\n\n          this.isEvalSupported = isEvalSupported !== false;\n          this.disableFontFace = disableFontFace === true;\n          this.ignoreErrors = ignoreErrors === true;\n          this._onUnsupportedFeature = onUnsupportedFeature;\n          this.fontRegistry = fontRegistry;\n        }\n\n        createNativeFontFace() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n\n          const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this);\n          }\n\n          return nativeFontFace;\n        }\n\n        createFontFaceRule() {\n          if (!this.data || this.disableFontFace) {\n            return null;\n          }\n\n          const data = (0, _util.bytesToString)(new Uint8Array(this.data));\n          const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n          const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n          if (this.fontRegistry) {\n            this.fontRegistry.registerFont(this, url);\n          }\n\n          return rule;\n        }\n\n        getPathGenerator(objs, character) {\n          if (this.compiledGlyphs[character] !== undefined) {\n            return this.compiledGlyphs[character];\n          }\n\n          let cmds, current;\n\n          try {\n            cmds = objs.get(this.loadedName + \"_path_\" + character);\n          } catch (ex) {\n            if (!this.ignoreErrors) {\n              throw ex;\n            }\n\n            if (this._onUnsupportedFeature) {\n              this._onUnsupportedFeature({\n                featureId: _util.UNSUPPORTED_FEATURES.errorFontGetPath\n              });\n            }\n\n            (0, _util.warn)(`getPathGenerator - ignoring character: \"${ex}\".`);\n            return this.compiledGlyphs[character] = function (c, size) {};\n          }\n\n          if (this.isEvalSupported && _util.IsEvalSupportedCached.value) {\n            let args,\n                js = \"\";\n\n            for (let i = 0, ii = cmds.length; i < ii; i++) {\n              current = cmds[i];\n\n              if (current.args !== undefined) {\n                args = current.args.join(\",\");\n              } else {\n                args = \"\";\n              }\n\n              js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n            }\n\n            return this.compiledGlyphs[character] = new Function(\"c\", \"size\", js);\n          }\n\n          return this.compiledGlyphs[character] = function (c, size) {\n            for (let i = 0, ii = cmds.length; i < ii; i++) {\n              current = cmds[i];\n\n              if (current.cmd === \"scale\") {\n                current.args = [size, -size];\n              }\n\n              c[current.cmd].apply(c, current.args);\n            }\n          };\n        }\n\n      }\n\n      exports.FontFaceObject = FontFaceObject;\n      /***/\n    },\n    /* 7 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.NodeCMapReaderFactory = exports.NodeCanvasFactory = void 0;\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      var _util = __w_pdfjs_require__(2);\n\n      let NodeCanvasFactory = class {\n        constructor() {\n          (0, _util.unreachable)(\"Not implemented: NodeCanvasFactory\");\n        }\n\n      };\n      exports.NodeCanvasFactory = NodeCanvasFactory;\n      let NodeCMapReaderFactory = class {\n        constructor() {\n          (0, _util.unreachable)(\"Not implemented: NodeCMapReaderFactory\");\n        }\n\n      };\n      exports.NodeCMapReaderFactory = NodeCMapReaderFactory;\n\n      if (_is_node.isNodeJS) {\n        exports.NodeCanvasFactory = NodeCanvasFactory = class extends _display_utils.BaseCanvasFactory {\n          create(width, height) {\n            if (width <= 0 || height <= 0) {\n              throw new Error(\"Invalid canvas size\");\n            }\n\n            const Canvas = require(\"canvas\");\n\n            const canvas = Canvas.createCanvas(width, height);\n            return {\n              canvas,\n              context: canvas.getContext(\"2d\")\n            };\n          }\n\n        };\n        exports.NodeCMapReaderFactory = NodeCMapReaderFactory = class extends _display_utils.BaseCMapReaderFactory {\n          _fetchData(url, compressionType) {\n            return new Promise((resolve, reject) => {\n              const fs = require(\"fs\");\n\n              fs.readFile(url, (error, data) => {\n                if (error || !data) {\n                  reject(new Error(error));\n                  return;\n                }\n\n                resolve({\n                  cMapData: new Uint8Array(data),\n                  compressionType\n                });\n              });\n            });\n          }\n\n        };\n      }\n      /***/\n\n    },\n    /* 8 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationStorage = void 0;\n\n      class AnnotationStorage {\n        constructor() {\n          this._storage = new Map();\n          this._modified = false;\n          this.onSetModified = null;\n          this.onResetModified = null;\n        }\n\n        getOrCreateValue(key, defaultValue) {\n          if (this._storage.has(key)) {\n            return this._storage.get(key);\n          }\n\n          this._storage.set(key, defaultValue);\n\n          return defaultValue;\n        }\n\n        setValue(key, value) {\n          if (this._storage.get(key) !== value) {\n            this._setModified();\n          }\n\n          this._storage.set(key, value);\n        }\n\n        getAll() {\n          if (this._storage.size === 0) {\n            return null;\n          }\n\n          return Object.fromEntries(this._storage);\n        }\n\n        get size() {\n          return this._storage.size;\n        }\n\n        _setModified() {\n          if (!this._modified) {\n            this._modified = true;\n\n            if (typeof this.onSetModified === \"function\") {\n              this.onSetModified();\n            }\n          }\n        }\n\n        resetModified() {\n          if (this._modified) {\n            this._modified = false;\n\n            if (typeof this.onResetModified === \"function\") {\n              this.onResetModified();\n            }\n          }\n        }\n\n      }\n\n      exports.AnnotationStorage = AnnotationStorage;\n      /***/\n    },\n    /* 9 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.apiCompatibilityParams = void 0;\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      const compatibilityParams = Object.create(null);\n      {\n        (function checkFontFace() {\n          if (_is_node.isNodeJS) {\n            compatibilityParams.disableFontFace = true;\n          }\n        })();\n      }\n      const apiCompatibilityParams = Object.freeze(compatibilityParams);\n      exports.apiCompatibilityParams = apiCompatibilityParams;\n      /***/\n    },\n    /* 10 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.CanvasGraphics = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _pattern_helper = __w_pdfjs_require__(11);\n\n      var MIN_FONT_SIZE = 16;\n      var MAX_FONT_SIZE = 100;\n      var MAX_GROUP_SIZE = 4096;\n      var MIN_WIDTH_FACTOR = 0.65;\n      var COMPILE_TYPE3_GLYPHS = true;\n      var MAX_SIZE_TO_COMPILE = 1000;\n      var FULL_CHUNK_HEIGHT = 16;\n\n      function addContextCurrentTransform(ctx) {\n        if (!ctx.mozCurrentTransform) {\n          ctx._originalSave = ctx.save;\n          ctx._originalRestore = ctx.restore;\n          ctx._originalRotate = ctx.rotate;\n          ctx._originalScale = ctx.scale;\n          ctx._originalTranslate = ctx.translate;\n          ctx._originalTransform = ctx.transform;\n          ctx._originalSetTransform = ctx.setTransform;\n          ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n          ctx._transformStack = [];\n          Object.defineProperty(ctx, \"mozCurrentTransform\", {\n            get: function getCurrentTransform() {\n              return this._transformMatrix;\n            }\n          });\n          Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n            get: function getCurrentTransformInverse() {\n              var m = this._transformMatrix;\n              var a = m[0],\n                  b = m[1],\n                  c = m[2],\n                  d = m[3],\n                  e = m[4],\n                  f = m[5];\n              var ad_bc = a * d - b * c;\n              var bc_ad = b * c - a * d;\n              return [d / ad_bc, b / bc_ad, c / bc_ad, a / ad_bc, (d * e - c * f) / bc_ad, (b * e - a * f) / ad_bc];\n            }\n          });\n\n          ctx.save = function ctxSave() {\n            var old = this._transformMatrix;\n\n            this._transformStack.push(old);\n\n            this._transformMatrix = old.slice(0, 6);\n\n            this._originalSave();\n          };\n\n          ctx.restore = function ctxRestore() {\n            var prev = this._transformStack.pop();\n\n            if (prev) {\n              this._transformMatrix = prev;\n\n              this._originalRestore();\n            }\n          };\n\n          ctx.translate = function ctxTranslate(x, y) {\n            var m = this._transformMatrix;\n            m[4] = m[0] * x + m[2] * y + m[4];\n            m[5] = m[1] * x + m[3] * y + m[5];\n\n            this._originalTranslate(x, y);\n          };\n\n          ctx.scale = function ctxScale(x, y) {\n            var m = this._transformMatrix;\n            m[0] = m[0] * x;\n            m[1] = m[1] * x;\n            m[2] = m[2] * y;\n            m[3] = m[3] * y;\n\n            this._originalScale(x, y);\n          };\n\n          ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * a + m[2] * b, m[1] * a + m[3] * b, m[0] * c + m[2] * d, m[1] * c + m[3] * d, m[0] * e + m[2] * f + m[4], m[1] * e + m[3] * f + m[5]];\n\n            ctx._originalTransform(a, b, c, d, e, f);\n          };\n\n          ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n            this._transformMatrix = [a, b, c, d, e, f];\n\n            ctx._originalSetTransform(a, b, c, d, e, f);\n          };\n\n          ctx.rotate = function ctxRotate(angle) {\n            var cosValue = Math.cos(angle);\n            var sinValue = Math.sin(angle);\n            var m = this._transformMatrix;\n            this._transformMatrix = [m[0] * cosValue + m[2] * sinValue, m[1] * cosValue + m[3] * sinValue, m[0] * -sinValue + m[2] * cosValue, m[1] * -sinValue + m[3] * cosValue, m[4], m[5]];\n\n            this._originalRotate(angle);\n          };\n        }\n      }\n\n      var CachedCanvases = function CachedCanvasesClosure() {\n        function CachedCanvases(canvasFactory) {\n          this.canvasFactory = canvasFactory;\n          this.cache = Object.create(null);\n        }\n\n        CachedCanvases.prototype = {\n          getCanvas: function CachedCanvases_getCanvas(id, width, height, trackTransform) {\n            var canvasEntry;\n\n            if (this.cache[id] !== undefined) {\n              canvasEntry = this.cache[id];\n              this.canvasFactory.reset(canvasEntry, width, height);\n              canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n            } else {\n              canvasEntry = this.canvasFactory.create(width, height);\n              this.cache[id] = canvasEntry;\n            }\n\n            if (trackTransform) {\n              addContextCurrentTransform(canvasEntry.context);\n            }\n\n            return canvasEntry;\n          },\n\n          clear() {\n            for (var id in this.cache) {\n              var canvasEntry = this.cache[id];\n              this.canvasFactory.destroy(canvasEntry);\n              delete this.cache[id];\n            }\n          }\n\n        };\n        return CachedCanvases;\n      }();\n\n      function compileType3Glyph(imgData) {\n        var POINT_TO_PROCESS_LIMIT = 1000;\n        var width = imgData.width,\n            height = imgData.height;\n        var i,\n            j,\n            j0,\n            width1 = width + 1;\n        var points = new Uint8Array(width1 * (height + 1));\n        var POINT_TYPES = new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n        var lineSize = width + 7 & ~7,\n            data0 = imgData.data;\n        var data = new Uint8Array(lineSize * height),\n            pos = 0,\n            ii;\n\n        for (i = 0, ii = data0.length; i < ii; i++) {\n          var mask = 128,\n              elem = data0[i];\n\n          while (mask > 0) {\n            data[pos++] = elem & mask ? 0 : 255;\n            mask >>= 1;\n          }\n        }\n\n        var count = 0;\n        pos = 0;\n\n        if (data[pos] !== 0) {\n          points[0] = 1;\n          ++count;\n        }\n\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j] = data[pos] ? 2 : 1;\n            ++count;\n          }\n\n          pos++;\n        }\n\n        if (data[pos] !== 0) {\n          points[j] = 2;\n          ++count;\n        }\n\n        for (i = 1; i < height; i++) {\n          pos = i * lineSize;\n          j0 = i * width1;\n\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0] = data[pos] ? 1 : 8;\n            ++count;\n          }\n\n          var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n\n          for (j = 1; j < width; j++) {\n            sum = (sum >> 2) + (data[pos + 1] ? 4 : 0) + (data[pos - lineSize + 1] ? 8 : 0);\n\n            if (POINT_TYPES[sum]) {\n              points[j0 + j] = POINT_TYPES[sum];\n              ++count;\n            }\n\n            pos++;\n          }\n\n          if (data[pos - lineSize] !== data[pos]) {\n            points[j0 + j] = data[pos] ? 2 : 4;\n            ++count;\n          }\n\n          if (count > POINT_TO_PROCESS_LIMIT) {\n            return null;\n          }\n        }\n\n        pos = lineSize * (height - 1);\n        j0 = i * width1;\n\n        if (data[pos] !== 0) {\n          points[j0] = 8;\n          ++count;\n        }\n\n        for (j = 1; j < width; j++) {\n          if (data[pos] !== data[pos + 1]) {\n            points[j0 + j] = data[pos] ? 4 : 8;\n            ++count;\n          }\n\n          pos++;\n        }\n\n        if (data[pos] !== 0) {\n          points[j0 + j] = 4;\n          ++count;\n        }\n\n        if (count > POINT_TO_PROCESS_LIMIT) {\n          return null;\n        }\n\n        var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n        var outlines = [];\n\n        for (i = 0; count && i <= height; i++) {\n          var p = i * width1;\n          var end = p + width;\n\n          while (p < end && !points[p]) {\n            p++;\n          }\n\n          if (p === end) {\n            continue;\n          }\n\n          var coords = [p % width1, i];\n          var type = points[p],\n              p0 = p,\n              pp;\n\n          do {\n            var step = steps[type];\n\n            do {\n              p += step;\n            } while (!points[p]);\n\n            pp = points[p];\n\n            if (pp !== 5 && pp !== 10) {\n              type = pp;\n              points[p] = 0;\n            } else {\n              type = pp & 0x33 * type >> 4;\n              points[p] &= type >> 2 | type << 2;\n            }\n\n            coords.push(p % width1);\n            coords.push(p / width1 | 0);\n\n            if (!points[p]) {\n              --count;\n            }\n          } while (p0 !== p);\n\n          outlines.push(coords);\n          --i;\n        }\n\n        var drawOutline = function (c) {\n          c.save();\n          c.scale(1 / width, -1 / height);\n          c.translate(0, -height);\n          c.beginPath();\n\n          for (let k = 0, kk = outlines.length; k < kk; k++) {\n            var o = outlines[k];\n            c.moveTo(o[0], o[1]);\n\n            for (let l = 2, ll = o.length; l < ll; l += 2) {\n              c.lineTo(o[l], o[l + 1]);\n            }\n          }\n\n          c.fill();\n          c.beginPath();\n          c.restore();\n        };\n\n        return drawOutline;\n      }\n\n      var CanvasExtraState = function CanvasExtraStateClosure() {\n        function CanvasExtraState() {\n          this.alphaIsShape = false;\n          this.fontSize = 0;\n          this.fontSizeScale = 1;\n          this.textMatrix = _util.IDENTITY_MATRIX;\n          this.textMatrixScale = 1;\n          this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n          this.leading = 0;\n          this.x = 0;\n          this.y = 0;\n          this.lineX = 0;\n          this.lineY = 0;\n          this.charSpacing = 0;\n          this.wordSpacing = 0;\n          this.textHScale = 1;\n          this.textRenderingMode = _util.TextRenderingMode.FILL;\n          this.textRise = 0;\n          this.fillColor = \"#000000\";\n          this.strokeColor = \"#000000\";\n          this.patternFill = false;\n          this.fillAlpha = 1;\n          this.strokeAlpha = 1;\n          this.lineWidth = 1;\n          this.activeSMask = null;\n          this.resumeSMaskCtx = null;\n          this.transferMaps = null;\n        }\n\n        CanvasExtraState.prototype = {\n          clone: function CanvasExtraState_clone() {\n            return Object.create(this);\n          },\n          setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n        };\n        return CanvasExtraState;\n      }();\n\n      var CanvasGraphics = function CanvasGraphicsClosure() {\n        var EXECUTION_TIME = 15;\n        var EXECUTION_STEPS = 10;\n\n        function CanvasGraphics(canvasCtx, commonObjs, objs, canvasFactory, webGLContext, imageLayer, optionalContentConfig) {\n          this.ctx = canvasCtx;\n          this.current = new CanvasExtraState();\n          this.stateStack = [];\n          this.pendingClip = null;\n          this.pendingEOFill = false;\n          this.res = null;\n          this.xobjs = null;\n          this.commonObjs = commonObjs;\n          this.objs = objs;\n          this.canvasFactory = canvasFactory;\n          this.webGLContext = webGLContext;\n          this.imageLayer = imageLayer;\n          this.groupStack = [];\n          this.processingType3 = null;\n          this.baseTransform = null;\n          this.baseTransformStack = [];\n          this.groupLevel = 0;\n          this.smaskStack = [];\n          this.smaskCounter = 0;\n          this.tempSMask = null;\n          this.contentVisible = true;\n          this.markedContentStack = [];\n          this.optionalContentConfig = optionalContentConfig;\n          this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n\n          if (canvasCtx) {\n            addContextCurrentTransform(canvasCtx);\n          }\n\n          this._cachedGetSinglePixelWidth = null;\n        }\n\n        function putBinaryImageData(ctx, imgData) {\n          let transferMaps = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n          if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n            ctx.putImageData(imgData, 0, 0);\n            return;\n          }\n\n          var height = imgData.height,\n              width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0,\n              destPos;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n          var i, j, thisChunkHeight, elemsInThisChunk;\n          let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n\n          if (transferMaps) {\n            switch (transferMaps.length) {\n              case 1:\n                transferMapRed = transferMaps[0];\n                transferMapGreen = transferMaps[0];\n                transferMapBlue = transferMaps[0];\n                transferMapGray = transferMaps[0];\n                break;\n\n              case 4:\n                transferMapRed = transferMaps[0];\n                transferMapGreen = transferMaps[1];\n                transferMapBlue = transferMaps[2];\n                transferMapGray = transferMaps[3];\n                break;\n            }\n          }\n\n          if (imgData.kind === _util.ImageKind.GRAYSCALE_1BPP) {\n            var srcLength = src.byteLength;\n            var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n            var dest32DataLength = dest32.length;\n            var fullSrcDiff = width + 7 >> 3;\n            var white = 0xffffffff;\n            var black = _util.IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n            if (transferMapGray) {\n              if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n                [white, black] = [black, white];\n              }\n            }\n\n            for (i = 0; i < totalChunks; i++) {\n              thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n              destPos = 0;\n\n              for (j = 0; j < thisChunkHeight; j++) {\n                var srcDiff = srcLength - srcPos;\n                let k = 0;\n                var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n                var kEndUnrolled = kEnd & ~7;\n                var mask = 0;\n                var srcByte = 0;\n\n                for (; k < kEndUnrolled; k += 8) {\n                  srcByte = src[srcPos++];\n                  dest32[destPos++] = srcByte & 128 ? white : black;\n                  dest32[destPos++] = srcByte & 64 ? white : black;\n                  dest32[destPos++] = srcByte & 32 ? white : black;\n                  dest32[destPos++] = srcByte & 16 ? white : black;\n                  dest32[destPos++] = srcByte & 8 ? white : black;\n                  dest32[destPos++] = srcByte & 4 ? white : black;\n                  dest32[destPos++] = srcByte & 2 ? white : black;\n                  dest32[destPos++] = srcByte & 1 ? white : black;\n                }\n\n                for (; k < kEnd; k++) {\n                  if (mask === 0) {\n                    srcByte = src[srcPos++];\n                    mask = 128;\n                  }\n\n                  dest32[destPos++] = srcByte & mask ? white : black;\n                  mask >>= 1;\n                }\n              }\n\n              while (destPos < dest32DataLength) {\n                dest32[destPos++] = 0;\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGBA_32BPP) {\n            const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n            j = 0;\n            elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n\n            for (i = 0; i < fullChunks; i++) {\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n              srcPos += elemsInThisChunk;\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < elemsInThisChunk; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, j);\n              j += FULL_CHUNK_HEIGHT;\n            }\n\n            if (i < totalChunks) {\n              elemsInThisChunk = width * partialChunkHeight * 4;\n              dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < elemsInThisChunk; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, j);\n            }\n          } else if (imgData.kind === _util.ImageKind.RGB_24BPP) {\n            const hasTransferMaps = !!(transferMapRed || transferMapGreen || transferMapBlue);\n            thisChunkHeight = FULL_CHUNK_HEIGHT;\n            elemsInThisChunk = width * thisChunkHeight;\n\n            for (i = 0; i < totalChunks; i++) {\n              if (i >= fullChunks) {\n                thisChunkHeight = partialChunkHeight;\n                elemsInThisChunk = width * thisChunkHeight;\n              }\n\n              destPos = 0;\n\n              for (j = elemsInThisChunk; j--;) {\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = src[srcPos++];\n                dest[destPos++] = 255;\n              }\n\n              if (hasTransferMaps) {\n                for (let k = 0; k < destPos; k += 4) {\n                  if (transferMapRed) {\n                    dest[k + 0] = transferMapRed[dest[k + 0]];\n                  }\n\n                  if (transferMapGreen) {\n                    dest[k + 1] = transferMapGreen[dest[k + 1]];\n                  }\n\n                  if (transferMapBlue) {\n                    dest[k + 2] = transferMapBlue[dest[k + 2]];\n                  }\n                }\n              }\n\n              ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n            }\n          } else {\n            throw new Error(`bad image kind: ${imgData.kind}`);\n          }\n        }\n\n        function putBinaryImageMask(ctx, imgData) {\n          var height = imgData.height,\n              width = imgData.width;\n          var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n          var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n          var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n          var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n          var srcPos = 0;\n          var src = imgData.data;\n          var dest = chunkImgData.data;\n\n          for (var i = 0; i < totalChunks; i++) {\n            var thisChunkHeight = i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n            var destPos = 3;\n\n            for (var j = 0; j < thisChunkHeight; j++) {\n              var mask = 0;\n\n              for (var k = 0; k < width; k++) {\n                if (!mask) {\n                  var elem = src[srcPos++];\n                  mask = 128;\n                }\n\n                dest[destPos] = elem & mask ? 0 : 255;\n                destPos += 4;\n                mask >>= 1;\n              }\n            }\n\n            ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n          }\n        }\n\n        function copyCtxState(sourceCtx, destCtx) {\n          var properties = [\"strokeStyle\", \"fillStyle\", \"fillRule\", \"globalAlpha\", \"lineWidth\", \"lineCap\", \"lineJoin\", \"miterLimit\", \"globalCompositeOperation\", \"font\"];\n\n          for (var i = 0, ii = properties.length; i < ii; i++) {\n            var property = properties[i];\n\n            if (sourceCtx[property] !== undefined) {\n              destCtx[property] = sourceCtx[property];\n            }\n          }\n\n          if (sourceCtx.setLineDash !== undefined) {\n            destCtx.setLineDash(sourceCtx.getLineDash());\n            destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n          }\n        }\n\n        function resetCtxToDefault(ctx) {\n          ctx.strokeStyle = \"#000000\";\n          ctx.fillStyle = \"#000000\";\n          ctx.fillRule = \"nonzero\";\n          ctx.globalAlpha = 1;\n          ctx.lineWidth = 1;\n          ctx.lineCap = \"butt\";\n          ctx.lineJoin = \"miter\";\n          ctx.miterLimit = 10;\n          ctx.globalCompositeOperation = \"source-over\";\n          ctx.font = \"10px sans-serif\";\n\n          if (ctx.setLineDash !== undefined) {\n            ctx.setLineDash([]);\n            ctx.lineDashOffset = 0;\n          }\n        }\n\n        function composeSMaskBackdrop(bytes, r0, g0, b0) {\n          var length = bytes.length;\n\n          for (var i = 3; i < length; i += 4) {\n            var alpha = bytes[i];\n\n            if (alpha === 0) {\n              bytes[i - 3] = r0;\n              bytes[i - 2] = g0;\n              bytes[i - 1] = b0;\n            } else if (alpha < 255) {\n              var alpha_ = 255 - alpha;\n              bytes[i - 3] = bytes[i - 3] * alpha + r0 * alpha_ >> 8;\n              bytes[i - 2] = bytes[i - 2] * alpha + g0 * alpha_ >> 8;\n              bytes[i - 1] = bytes[i - 1] * alpha + b0 * alpha_ >> 8;\n            }\n          }\n        }\n\n        function composeSMaskAlpha(maskData, layerData, transferMap) {\n          var length = maskData.length;\n          var scale = 1 / 255;\n\n          for (var i = 3; i < length; i += 4) {\n            var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n            layerData[i] = layerData[i] * alpha * scale | 0;\n          }\n        }\n\n        function composeSMaskLuminosity(maskData, layerData, transferMap) {\n          var length = maskData.length;\n\n          for (var i = 3; i < length; i += 4) {\n            var y = maskData[i - 3] * 77 + maskData[i - 2] * 152 + maskData[i - 1] * 28;\n            layerData[i] = transferMap ? layerData[i] * transferMap[y >> 8] >> 8 : layerData[i] * y >> 16;\n          }\n        }\n\n        function genericComposeSMask(maskCtx, layerCtx, width, height, subtype, backdrop, transferMap) {\n          var hasBackdrop = !!backdrop;\n          var r0 = hasBackdrop ? backdrop[0] : 0;\n          var g0 = hasBackdrop ? backdrop[1] : 0;\n          var b0 = hasBackdrop ? backdrop[2] : 0;\n          var composeFn;\n\n          if (subtype === \"Luminosity\") {\n            composeFn = composeSMaskLuminosity;\n          } else {\n            composeFn = composeSMaskAlpha;\n          }\n\n          var PIXELS_TO_PROCESS = 1048576;\n          var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n\n          for (var row = 0; row < height; row += chunkSize) {\n            var chunkHeight = Math.min(chunkSize, height - row);\n            var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n            var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n            if (hasBackdrop) {\n              composeSMaskBackdrop(maskData.data, r0, g0, b0);\n            }\n\n            composeFn(maskData.data, layerData.data, transferMap);\n            maskCtx.putImageData(layerData, 0, row);\n          }\n        }\n\n        function composeSMask(ctx, smask, layerCtx, webGLContext) {\n          var mask = smask.canvas;\n          var maskCtx = smask.context;\n          ctx.setTransform(smask.scaleX, 0, 0, smask.scaleY, smask.offsetX, smask.offsetY);\n          var backdrop = smask.backdrop || null;\n\n          if (!smask.transferMap && webGLContext.isEnabled) {\n            const composed = webGLContext.composeSMask({\n              layer: layerCtx.canvas,\n              mask,\n              properties: {\n                subtype: smask.subtype,\n                backdrop\n              }\n            });\n            ctx.setTransform(1, 0, 0, 1, 0, 0);\n            ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n            return;\n          }\n\n          genericComposeSMask(maskCtx, layerCtx, mask.width, mask.height, smask.subtype, backdrop, smask.transferMap);\n          ctx.drawImage(mask, 0, 0);\n        }\n\n        var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n        var NORMAL_CLIP = {};\n        var EO_CLIP = {};\n        CanvasGraphics.prototype = {\n          beginDrawing(_ref18) {\n            let {\n              transform,\n              viewport,\n              transparency = false,\n              background = null\n            } = _ref18;\n            var width = this.ctx.canvas.width;\n            var height = this.ctx.canvas.height;\n            this.ctx.save();\n            this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n            this.ctx.fillRect(0, 0, width, height);\n            this.ctx.restore();\n\n            if (transparency) {\n              var transparentCanvas = this.cachedCanvases.getCanvas(\"transparent\", width, height, true);\n              this.compositeCtx = this.ctx;\n              this.transparentCanvas = transparentCanvas.canvas;\n              this.ctx = transparentCanvas.context;\n              this.ctx.save();\n              this.ctx.transform.apply(this.ctx, this.compositeCtx.mozCurrentTransform);\n            }\n\n            this.ctx.save();\n            resetCtxToDefault(this.ctx);\n\n            if (transform) {\n              this.ctx.transform.apply(this.ctx, transform);\n            }\n\n            this.ctx.transform.apply(this.ctx, viewport.transform);\n            this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n            if (this.imageLayer) {\n              this.imageLayer.beginLayout();\n            }\n          },\n\n          executeOperatorList: function CanvasGraphics_executeOperatorList(operatorList, executionStartIdx, continueCallback, stepper) {\n            var argsArray = operatorList.argsArray;\n            var fnArray = operatorList.fnArray;\n            var i = executionStartIdx || 0;\n            var argsArrayLen = argsArray.length;\n\n            if (argsArrayLen === i) {\n              return i;\n            }\n\n            var chunkOperations = argsArrayLen - i > EXECUTION_STEPS && typeof continueCallback === \"function\";\n            var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n            var steps = 0;\n            var commonObjs = this.commonObjs;\n            var objs = this.objs;\n            var fnId;\n\n            while (true) {\n              if (stepper !== undefined && i === stepper.nextBreakPoint) {\n                stepper.breakIt(i, continueCallback);\n                return i;\n              }\n\n              fnId = fnArray[i];\n\n              if (fnId !== _util.OPS.dependency) {\n                this[fnId].apply(this, argsArray[i]);\n              } else {\n                for (const depObjId of argsArray[i]) {\n                  const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n                  if (!objsPool.has(depObjId)) {\n                    objsPool.get(depObjId, continueCallback);\n                    return i;\n                  }\n                }\n              }\n\n              i++;\n\n              if (i === argsArrayLen) {\n                return i;\n              }\n\n              if (chunkOperations && ++steps > EXECUTION_STEPS) {\n                if (Date.now() > endTime) {\n                  continueCallback();\n                  return i;\n                }\n\n                steps = 0;\n              }\n            }\n          },\n          endDrawing: function CanvasGraphics_endDrawing() {\n            if (this.current.activeSMask !== null) {\n              this.endSMaskGroup();\n            }\n\n            this.ctx.restore();\n\n            if (this.transparentCanvas) {\n              this.ctx = this.compositeCtx;\n              this.ctx.save();\n              this.ctx.setTransform(1, 0, 0, 1, 0, 0);\n              this.ctx.drawImage(this.transparentCanvas, 0, 0);\n              this.ctx.restore();\n              this.transparentCanvas = null;\n            }\n\n            this.cachedCanvases.clear();\n            this.webGLContext.clear();\n\n            if (this.imageLayer) {\n              this.imageLayer.endLayout();\n            }\n          },\n          setLineWidth: function CanvasGraphics_setLineWidth(width) {\n            this.current.lineWidth = width;\n            this.ctx.lineWidth = width;\n          },\n          setLineCap: function CanvasGraphics_setLineCap(style) {\n            this.ctx.lineCap = LINE_CAP_STYLES[style];\n          },\n          setLineJoin: function CanvasGraphics_setLineJoin(style) {\n            this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n          },\n          setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n            this.ctx.miterLimit = limit;\n          },\n          setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n            var ctx = this.ctx;\n\n            if (ctx.setLineDash !== undefined) {\n              ctx.setLineDash(dashArray);\n              ctx.lineDashOffset = dashPhase;\n            }\n          },\n\n          setRenderingIntent(intent) {},\n\n          setFlatness(flatness) {},\n\n          setGState: function CanvasGraphics_setGState(states) {\n            for (var i = 0, ii = states.length; i < ii; i++) {\n              var state = states[i];\n              var key = state[0];\n              var value = state[1];\n\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value[0], value[1]);\n                  break;\n\n                case \"CA\":\n                  this.current.strokeAlpha = state[1];\n                  break;\n\n                case \"ca\":\n                  this.current.fillAlpha = state[1];\n                  this.ctx.globalAlpha = state[1];\n                  break;\n\n                case \"BM\":\n                  this.ctx.globalCompositeOperation = value;\n                  break;\n\n                case \"SMask\":\n                  if (this.current.activeSMask) {\n                    if (this.stateStack.length > 0 && this.stateStack[this.stateStack.length - 1].activeSMask === this.current.activeSMask) {\n                      this.suspendSMaskGroup();\n                    } else {\n                      this.endSMaskGroup();\n                    }\n                  }\n\n                  this.current.activeSMask = value ? this.tempSMask : null;\n\n                  if (this.current.activeSMask) {\n                    this.beginSMaskGroup();\n                  }\n\n                  this.tempSMask = null;\n                  break;\n\n                case \"TR\":\n                  this.current.transferMaps = value;\n              }\n            }\n          },\n          beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n            var activeSMask = this.current.activeSMask;\n            var drawnWidth = activeSMask.canvas.width;\n            var drawnHeight = activeSMask.canvas.height;\n            var cacheId = \"smaskGroupAt\" + this.groupLevel;\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var currentCtx = this.ctx;\n            var currentTransform = currentCtx.mozCurrentTransform;\n            this.ctx.save();\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n            groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n            activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            this.ctx.save();\n            copyCtxState(groupCtx, this.ctx);\n            this.current.resumeSMaskCtx = groupCtx;\n\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n            groupCtx.save();\n            groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n            groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n            groupCtx.restore();\n          },\n          resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.current.resumeSMaskCtx;\n            var currentCtx = this.ctx;\n            this.ctx = groupCtx;\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n          },\n          endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n            var groupCtx = this.ctx;\n            this.groupLevel--;\n            this.ctx = this.groupStack.pop();\n            composeSMask(this.ctx, this.current.activeSMask, groupCtx, this.webGLContext);\n            this.ctx.restore();\n            copyCtxState(groupCtx, this.ctx);\n\n            var deltaTransform = _util.Util.transform(this.current.activeSMask.startTransformInverse, groupCtx.mozCurrentTransform);\n\n            this.ctx.transform.apply(this.ctx, deltaTransform);\n          },\n          save: function CanvasGraphics_save() {\n            this.ctx.save();\n            var old = this.current;\n            this.stateStack.push(old);\n            this.current = old.clone();\n            this.current.resumeSMaskCtx = null;\n          },\n          restore: function CanvasGraphics_restore() {\n            if (this.current.resumeSMaskCtx) {\n              this.resumeSMaskGroup();\n            }\n\n            if (this.current.activeSMask !== null && (this.stateStack.length === 0 || this.stateStack[this.stateStack.length - 1].activeSMask !== this.current.activeSMask)) {\n              this.endSMaskGroup();\n            }\n\n            if (this.stateStack.length !== 0) {\n              this.current = this.stateStack.pop();\n              this.ctx.restore();\n              this.pendingClip = null;\n              this._cachedGetSinglePixelWidth = null;\n            }\n          },\n          transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n            this.ctx.transform(a, b, c, d, e, f);\n            this._cachedGetSinglePixelWidth = null;\n          },\n          constructPath: function CanvasGraphics_constructPath(ops, args) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var x = current.x,\n                y = current.y;\n\n            for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n              switch (ops[i] | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  var width = args[j++];\n                  var height = args[j++];\n\n                  if (width === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n                    width = this.getSinglePixelWidth();\n                  }\n\n                  if (height === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n                    height = this.getSinglePixelWidth();\n                  }\n\n                  var xw = x + width;\n                  var yh = y + height;\n                  ctx.moveTo(x, y);\n                  ctx.lineTo(xw, y);\n                  ctx.lineTo(xw, yh);\n                  ctx.lineTo(x, yh);\n                  ctx.lineTo(x, y);\n                  ctx.closePath();\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.moveTo(x, y);\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  ctx.lineTo(x, y);\n                  break;\n\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  ctx.bezierCurveTo(args[j], args[j + 1], args[j + 2], args[j + 3], x, y);\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  ctx.bezierCurveTo(x, y, args[j], args[j + 1], args[j + 2], args[j + 3]);\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  ctx.closePath();\n                  break;\n              }\n            }\n\n            current.setCurrentPoint(x, y);\n          },\n          closePath: function CanvasGraphics_closePath() {\n            this.ctx.closePath();\n          },\n          stroke: function CanvasGraphics_stroke(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var strokeColor = this.current.strokeColor;\n            ctx.globalAlpha = this.current.strokeAlpha;\n\n            if (this.contentVisible) {\n              if (strokeColor && strokeColor.hasOwnProperty(\"type\") && strokeColor.type === \"Pattern\") {\n                ctx.save();\n                const transform = ctx.mozCurrentTransform;\n\n                const scale = _util.Util.singularValueDecompose2dScale(transform)[0];\n\n                ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n                ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth * scale);\n                ctx.stroke();\n                ctx.restore();\n              } else {\n                ctx.lineWidth = Math.max(this.getSinglePixelWidth() * MIN_WIDTH_FACTOR, this.current.lineWidth);\n                ctx.stroke();\n              }\n            }\n\n            if (consumePath) {\n              this.consumePath();\n            }\n\n            ctx.globalAlpha = this.current.fillAlpha;\n          },\n          closeStroke: function CanvasGraphics_closeStroke() {\n            this.closePath();\n            this.stroke();\n          },\n          fill: function CanvasGraphics_fill(consumePath) {\n            consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var needRestore = false;\n\n            if (isPatternFill) {\n              ctx.save();\n\n              if (this.baseTransform) {\n                ctx.setTransform.apply(ctx, this.baseTransform);\n              }\n\n              ctx.fillStyle = fillColor.getPattern(ctx, this);\n              needRestore = true;\n            }\n\n            if (this.contentVisible) {\n              if (this.pendingEOFill) {\n                ctx.fill(\"evenodd\");\n                this.pendingEOFill = false;\n              } else {\n                ctx.fill();\n              }\n            }\n\n            if (needRestore) {\n              ctx.restore();\n            }\n\n            if (consumePath) {\n              this.consumePath();\n            }\n          },\n          eoFill: function CanvasGraphics_eoFill() {\n            this.pendingEOFill = true;\n            this.fill();\n          },\n          fillStroke: function CanvasGraphics_fillStroke() {\n            this.fill(false);\n            this.stroke(false);\n            this.consumePath();\n          },\n          eoFillStroke: function CanvasGraphics_eoFillStroke() {\n            this.pendingEOFill = true;\n            this.fillStroke();\n          },\n          closeFillStroke: function CanvasGraphics_closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          },\n          closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n            this.pendingEOFill = true;\n            this.closePath();\n            this.fillStroke();\n          },\n          endPath: function CanvasGraphics_endPath() {\n            this.consumePath();\n          },\n          clip: function CanvasGraphics_clip() {\n            this.pendingClip = NORMAL_CLIP;\n          },\n          eoClip: function CanvasGraphics_eoClip() {\n            this.pendingClip = EO_CLIP;\n          },\n          beginText: function CanvasGraphics_beginText() {\n            this.current.textMatrix = _util.IDENTITY_MATRIX;\n            this.current.textMatrixScale = 1;\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          endText: function CanvasGraphics_endText() {\n            var paths = this.pendingTextPaths;\n            var ctx = this.ctx;\n\n            if (paths === undefined) {\n              ctx.beginPath();\n              return;\n            }\n\n            ctx.save();\n            ctx.beginPath();\n\n            for (var i = 0; i < paths.length; i++) {\n              var path = paths[i];\n              ctx.setTransform.apply(ctx, path.transform);\n              ctx.translate(path.x, path.y);\n              path.addToPath(ctx, path.fontSize);\n            }\n\n            ctx.restore();\n            ctx.clip();\n            ctx.beginPath();\n            delete this.pendingTextPaths;\n          },\n          setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n            this.current.charSpacing = spacing;\n          },\n          setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n            this.current.wordSpacing = spacing;\n          },\n          setHScale: function CanvasGraphics_setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          },\n          setLeading: function CanvasGraphics_setLeading(leading) {\n            this.current.leading = -leading;\n          },\n          setFont: function CanvasGraphics_setFont(fontRefName, size) {\n            var fontObj = this.commonObjs.get(fontRefName);\n            var current = this.current;\n\n            if (!fontObj) {\n              throw new Error(`Can't find font for ${fontRefName}`);\n            }\n\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n\n            if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n              (0, _util.warn)(\"Invalid font matrix for font \" + fontRefName);\n            }\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            this.current.font = fontObj;\n            this.current.fontSize = size;\n\n            if (fontObj.isType3Font) {\n              return;\n            }\n\n            var name = fontObj.loadedName || \"sans-serif\";\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            var italic = fontObj.italic ? \"italic\" : \"normal\";\n            var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n            let browserFontSize = size;\n\n            if (size < MIN_FONT_SIZE) {\n              browserFontSize = MIN_FONT_SIZE;\n            } else if (size > MAX_FONT_SIZE) {\n              browserFontSize = MAX_FONT_SIZE;\n            }\n\n            this.current.fontSizeScale = size / browserFontSize;\n            this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n          },\n          setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n            this.current.textRenderingMode = mode;\n          },\n          setTextRise: function CanvasGraphics_setTextRise(rise) {\n            this.current.textRise = rise;\n          },\n          moveText: function CanvasGraphics_moveText(x, y) {\n            this.current.x = this.current.lineX += x;\n            this.current.y = this.current.lineY += y;\n          },\n          setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          },\n          setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n            this.current.textMatrix = [a, b, c, d, e, f];\n            this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n            this.current.x = this.current.lineX = 0;\n            this.current.y = this.current.lineY = 0;\n          },\n          nextLine: function CanvasGraphics_nextLine() {\n            this.moveText(0, this.current.leading);\n          },\n\n          paintChar(character, x, y, patternTransform) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var textRenderingMode = current.textRenderingMode;\n            var fontSize = current.fontSize / current.fontSizeScale;\n            var fillStrokeMode = textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n            var isAddToPathSet = !!(textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG);\n            const patternFill = current.patternFill && !font.missingFile;\n            var addToPath;\n\n            if (font.disableFontFace || isAddToPathSet || patternFill) {\n              addToPath = font.getPathGenerator(this.commonObjs, character);\n            }\n\n            if (font.disableFontFace || patternFill) {\n              ctx.save();\n              ctx.translate(x, y);\n              ctx.beginPath();\n              addToPath(ctx, fontSize);\n\n              if (patternTransform) {\n                ctx.setTransform.apply(ctx, patternTransform);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fill();\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.stroke();\n              }\n\n              ctx.restore();\n            } else {\n              if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.fillText(character, x, y);\n              }\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                ctx.strokeText(character, x, y);\n              }\n            }\n\n            if (isAddToPathSet) {\n              var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n              paths.push({\n                transform: ctx.mozCurrentTransform,\n                x,\n                y,\n                fontSize,\n                addToPath\n              });\n            }\n          },\n\n          get isFontSubpixelAAEnabled() {\n            const {\n              context: ctx\n            } = this.cachedCanvases.getCanvas(\"isFontSubpixelAAEnabled\", 10, 10);\n            ctx.scale(1.5, 1);\n            ctx.fillText(\"I\", 0, 10);\n            var data = ctx.getImageData(0, 0, 10, 10).data;\n            var enabled = false;\n\n            for (var i = 3; i < data.length; i += 4) {\n              if (data[i] > 0 && data[i] < 255) {\n                enabled = true;\n                break;\n              }\n            }\n\n            return (0, _util.shadow)(this, \"isFontSubpixelAAEnabled\", enabled);\n          },\n\n          showText: function CanvasGraphics_showText(glyphs) {\n            var current = this.current;\n            var font = current.font;\n\n            if (font.isType3Font) {\n              return this.showType3Text(glyphs);\n            }\n\n            var fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return undefined;\n            }\n\n            var ctx = this.ctx;\n            var fontSizeScale = current.fontSizeScale;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var fontDirection = current.fontDirection;\n            var textHScale = current.textHScale * fontDirection;\n            var glyphsLength = glyphs.length;\n            var vertical = font.vertical;\n            var spacingDir = vertical ? 1 : -1;\n            var defaultVMetrics = font.defaultVMetrics;\n            var widthAdvanceScale = fontSize * current.fontMatrix[0];\n            var simpleFillText = current.textRenderingMode === _util.TextRenderingMode.FILL && !font.disableFontFace && !current.patternFill;\n            ctx.save();\n            let patternTransform;\n\n            if (current.patternFill) {\n              ctx.save();\n              const pattern = current.fillColor.getPattern(ctx, this);\n              patternTransform = ctx.mozCurrentTransform;\n              ctx.restore();\n              ctx.fillStyle = pattern;\n            }\n\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y + current.textRise);\n\n            if (fontDirection > 0) {\n              ctx.scale(textHScale, -1);\n            } else {\n              ctx.scale(textHScale, 1);\n            }\n\n            var lineWidth = current.lineWidth;\n            var scale = current.textMatrixScale;\n\n            if (scale === 0 || lineWidth === 0) {\n              var fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n              if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n                this._cachedGetSinglePixelWidth = null;\n                lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n              }\n            } else {\n              lineWidth /= scale;\n            }\n\n            if (fontSizeScale !== 1.0) {\n              ctx.scale(fontSizeScale, fontSizeScale);\n              lineWidth /= fontSizeScale;\n            }\n\n            ctx.lineWidth = lineWidth;\n            var x = 0,\n                i;\n\n            for (i = 0; i < glyphsLength; ++i) {\n              var glyph = glyphs[i];\n\n              if ((0, _util.isNum)(glyph)) {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              var restoreNeeded = false;\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var character = glyph.fontChar;\n              var accent = glyph.accent;\n              var scaledX, scaledY, scaledAccentX, scaledAccentY;\n              var width = glyph.width;\n\n              if (vertical) {\n                var vmetric, vx, vy;\n                vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (font.remeasure && width > 0) {\n                var measuredWidth = ctx.measureText(character).width * 1000 / fontSize * fontSizeScale;\n\n                if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n                  var characterScaleX = width / measuredWidth;\n                  restoreNeeded = true;\n                  ctx.save();\n                  ctx.scale(characterScaleX, 1);\n                  scaledX /= characterScaleX;\n                } else if (width !== measuredWidth) {\n                  scaledX += (width - measuredWidth) / 2000 * fontSize / fontSizeScale;\n                }\n              }\n\n              if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n                if (simpleFillText && !accent) {\n                  ctx.fillText(character, scaledX, scaledY);\n                } else {\n                  this.paintChar(character, scaledX, scaledY, patternTransform);\n\n                  if (accent) {\n                    scaledAccentX = scaledX + fontSize * accent.offset.x / fontSizeScale;\n                    scaledAccentY = scaledY - fontSize * accent.offset.y / fontSizeScale;\n                    this.paintChar(accent.fontChar, scaledAccentX, scaledAccentY, patternTransform);\n                  }\n                }\n              }\n\n              var charWidth;\n\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n\n              x += charWidth;\n\n              if (restoreNeeded) {\n                ctx.restore();\n              }\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            ctx.restore();\n          },\n          showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n            var ctx = this.ctx;\n            var current = this.current;\n            var font = current.font;\n            var fontSize = current.fontSize;\n            var fontDirection = current.fontDirection;\n            var spacingDir = font.vertical ? 1 : -1;\n            var charSpacing = current.charSpacing;\n            var wordSpacing = current.wordSpacing;\n            var textHScale = current.textHScale * fontDirection;\n            var fontMatrix = current.fontMatrix || _util.FONT_IDENTITY_MATRIX;\n            var glyphsLength = glyphs.length;\n            var isTextInvisible = current.textRenderingMode === _util.TextRenderingMode.INVISIBLE;\n            var i, glyph, width, spacingLength;\n\n            if (isTextInvisible || fontSize === 0) {\n              return;\n            }\n\n            this._cachedGetSinglePixelWidth = null;\n            ctx.save();\n            ctx.transform.apply(ctx, current.textMatrix);\n            ctx.translate(current.x, current.y);\n            ctx.scale(textHScale, fontDirection);\n\n            for (i = 0; i < glyphsLength; ++i) {\n              glyph = glyphs[i];\n\n              if ((0, _util.isNum)(glyph)) {\n                spacingLength = spacingDir * glyph * fontSize / 1000;\n                this.ctx.translate(spacingLength, 0);\n                current.x += spacingLength * textHScale;\n                continue;\n              }\n\n              var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              var operatorList = font.charProcOperatorList[glyph.operatorListId];\n\n              if (!operatorList) {\n                (0, _util.warn)(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n                continue;\n              }\n\n              if (this.contentVisible) {\n                this.processingType3 = glyph;\n                this.save();\n                ctx.scale(fontSize, fontSize);\n                ctx.transform.apply(ctx, fontMatrix);\n                this.executeOperatorList(operatorList);\n                this.restore();\n              }\n\n              var transformed = _util.Util.applyTransform([glyph.width, 0], fontMatrix);\n\n              width = transformed[0] * fontSize + spacing;\n              ctx.translate(width, 0);\n              current.x += width * textHScale;\n            }\n\n            ctx.restore();\n            this.processingType3 = null;\n          },\n          setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {},\n          setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(xWidth, yWidth, llx, lly, urx, ury) {\n            this.ctx.rect(llx, lly, urx - llx, ury - lly);\n            this.clip();\n            this.endPath();\n          },\n          getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n            var pattern;\n\n            if (IR[0] === \"TilingPattern\") {\n              var color = IR[1];\n              var baseTransform = this.baseTransform || this.ctx.mozCurrentTransform.slice();\n              var canvasGraphicsFactory = {\n                createCanvasGraphics: ctx => {\n                  return new CanvasGraphics(ctx, this.commonObjs, this.objs, this.canvasFactory, this.webGLContext);\n                }\n              };\n              pattern = new _pattern_helper.TilingPattern(IR, color, this.ctx, canvasGraphicsFactory, baseTransform);\n            } else {\n              pattern = (0, _pattern_helper.getShadingPatternFromIR)(IR);\n            }\n\n            return pattern;\n          },\n          setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n            this.current.strokeColor = this.getColorN_Pattern(arguments);\n          },\n          setFillColorN: function CanvasGraphics_setFillColorN() {\n            this.current.fillColor = this.getColorN_Pattern(arguments);\n            this.current.patternFill = true;\n          },\n          setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n\n            this.ctx.strokeStyle = color;\n            this.current.strokeColor = color;\n          },\n          setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n            var color = _util.Util.makeCssRgb(r, g, b);\n\n            this.ctx.fillStyle = color;\n            this.current.fillColor = color;\n            this.current.patternFill = false;\n          },\n          shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            var ctx = this.ctx;\n            this.save();\n            var pattern = (0, _pattern_helper.getShadingPatternFromIR)(patternIR);\n            ctx.fillStyle = pattern.getPattern(ctx, this, true);\n            var inv = ctx.mozCurrentTransformInverse;\n\n            if (inv) {\n              var canvas = ctx.canvas;\n              var width = canvas.width;\n              var height = canvas.height;\n\n              var bl = _util.Util.applyTransform([0, 0], inv);\n\n              var br = _util.Util.applyTransform([0, height], inv);\n\n              var ul = _util.Util.applyTransform([width, 0], inv);\n\n              var ur = _util.Util.applyTransform([width, height], inv);\n\n              var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n              var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n              var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n              var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n              this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n            } else {\n              this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n            }\n\n            this.restore();\n          },\n          beginInlineImage: function CanvasGraphics_beginInlineImage() {\n            (0, _util.unreachable)(\"Should not call beginInlineImage\");\n          },\n          beginImageData: function CanvasGraphics_beginImageData() {\n            (0, _util.unreachable)(\"Should not call beginImageData\");\n          },\n          paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(matrix, bbox) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n            this.baseTransformStack.push(this.baseTransform);\n\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform.apply(this, matrix);\n            }\n\n            this.baseTransform = this.ctx.mozCurrentTransform;\n\n            if (bbox) {\n              var width = bbox[2] - bbox[0];\n              var height = bbox[3] - bbox[1];\n              this.ctx.rect(bbox[0], bbox[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n          },\n          paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.restore();\n            this.baseTransform = this.baseTransformStack.pop();\n          },\n          beginGroup: function CanvasGraphics_beginGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.save();\n            var currentCtx = this.ctx;\n\n            if (!group.isolated) {\n              (0, _util.info)(\"TODO: Support non-isolated groups.\");\n            }\n\n            if (group.knockout) {\n              (0, _util.warn)(\"Knockout groups not supported.\");\n            }\n\n            var currentTransform = currentCtx.mozCurrentTransform;\n\n            if (group.matrix) {\n              currentCtx.transform.apply(currentCtx, group.matrix);\n            }\n\n            if (!group.bbox) {\n              throw new Error(\"Bounding box is required.\");\n            }\n\n            var bounds = _util.Util.getAxialAlignedBoundingBox(group.bbox, currentCtx.mozCurrentTransform);\n\n            var canvasBounds = [0, 0, currentCtx.canvas.width, currentCtx.canvas.height];\n            bounds = _util.Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n            var offsetX = Math.floor(bounds[0]);\n            var offsetY = Math.floor(bounds[1]);\n            var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n            var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n            var scaleX = 1,\n                scaleY = 1;\n\n            if (drawnWidth > MAX_GROUP_SIZE) {\n              scaleX = drawnWidth / MAX_GROUP_SIZE;\n              drawnWidth = MAX_GROUP_SIZE;\n            }\n\n            if (drawnHeight > MAX_GROUP_SIZE) {\n              scaleY = drawnHeight / MAX_GROUP_SIZE;\n              drawnHeight = MAX_GROUP_SIZE;\n            }\n\n            var cacheId = \"groupAt\" + this.groupLevel;\n\n            if (group.smask) {\n              cacheId += \"_smask_\" + this.smaskCounter++ % 2;\n            }\n\n            var scratchCanvas = this.cachedCanvases.getCanvas(cacheId, drawnWidth, drawnHeight, true);\n            var groupCtx = scratchCanvas.context;\n            groupCtx.scale(1 / scaleX, 1 / scaleY);\n            groupCtx.translate(-offsetX, -offsetY);\n            groupCtx.transform.apply(groupCtx, currentTransform);\n\n            if (group.smask) {\n              this.smaskStack.push({\n                canvas: scratchCanvas.canvas,\n                context: groupCtx,\n                offsetX,\n                offsetY,\n                scaleX,\n                scaleY,\n                subtype: group.smask.subtype,\n                backdrop: group.smask.backdrop,\n                transferMap: group.smask.transferMap || null,\n                startTransformInverse: null\n              });\n            } else {\n              currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n              currentCtx.translate(offsetX, offsetY);\n              currentCtx.scale(scaleX, scaleY);\n            }\n\n            copyCtxState(currentCtx, groupCtx);\n            this.ctx = groupCtx;\n            this.setGState([[\"BM\", \"source-over\"], [\"ca\", 1], [\"CA\", 1]]);\n            this.groupStack.push(currentCtx);\n            this.groupLevel++;\n            this.current.activeSMask = null;\n          },\n          endGroup: function CanvasGraphics_endGroup(group) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.groupLevel--;\n            var groupCtx = this.ctx;\n            this.ctx = this.groupStack.pop();\n\n            if (this.ctx.imageSmoothingEnabled !== undefined) {\n              this.ctx.imageSmoothingEnabled = false;\n            } else {\n              this.ctx.mozImageSmoothingEnabled = false;\n            }\n\n            if (group.smask) {\n              this.tempSMask = this.smaskStack.pop();\n            } else {\n              this.ctx.drawImage(groupCtx.canvas, 0, 0);\n            }\n\n            this.restore();\n          },\n          beginAnnotations: function CanvasGraphics_beginAnnotations() {\n            this.save();\n\n            if (this.baseTransform) {\n              this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n            }\n          },\n          endAnnotations: function CanvasGraphics_endAnnotations() {\n            this.restore();\n          },\n          beginAnnotation: function CanvasGraphics_beginAnnotation(rect, transform, matrix) {\n            this.save();\n            resetCtxToDefault(this.ctx);\n            this.current = new CanvasExtraState();\n\n            if (Array.isArray(rect) && rect.length === 4) {\n              var width = rect[2] - rect[0];\n              var height = rect[3] - rect[1];\n              this.ctx.rect(rect[0], rect[1], width, height);\n              this.clip();\n              this.endPath();\n            }\n\n            this.transform.apply(this, transform);\n            this.transform.apply(this, matrix);\n          },\n          endAnnotation: function CanvasGraphics_endAnnotation() {\n            this.restore();\n          },\n          paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            var ctx = this.ctx;\n            var width = img.width,\n                height = img.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var glyph = this.processingType3;\n\n            if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n              if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n                glyph.compiled = compileType3Glyph({\n                  data: img.data,\n                  width,\n                  height\n                });\n              } else {\n                glyph.compiled = null;\n              }\n            }\n\n            if (glyph && glyph.compiled) {\n              glyph.compiled(ctx);\n              return;\n            }\n\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, img);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            this.paintInlineImageXObject(maskCanvas.canvas);\n          },\n\n          paintImageMaskXObjectRepeat(imgData, scaleX) {\n            let skewX = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n            let skewY = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n            let scaleY = arguments.length > 4 ? arguments[4] : undefined;\n            let positions = arguments.length > 5 ? arguments[5] : undefined;\n\n            if (!this.contentVisible) {\n              return;\n            }\n\n            var width = imgData.width;\n            var height = imgData.height;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n            var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n            var maskCtx = maskCanvas.context;\n            maskCtx.save();\n            putBinaryImageMask(maskCtx, imgData);\n            maskCtx.globalCompositeOperation = \"source-in\";\n            maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n            maskCtx.fillRect(0, 0, width, height);\n            maskCtx.restore();\n            var ctx = this.ctx;\n\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              ctx.save();\n              ctx.transform(scaleX, skewX, skewY, scaleY, positions[i], positions[i + 1]);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n\n          paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(images) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            var ctx = this.ctx;\n            var fillColor = this.current.fillColor;\n            var isPatternFill = this.current.patternFill;\n\n            for (var i = 0, ii = images.length; i < ii; i++) {\n              var image = images[i];\n              var width = image.width,\n                  height = image.height;\n              var maskCanvas = this.cachedCanvases.getCanvas(\"maskCanvas\", width, height);\n              var maskCtx = maskCanvas.context;\n              maskCtx.save();\n              putBinaryImageMask(maskCtx, image);\n              maskCtx.globalCompositeOperation = \"source-in\";\n              maskCtx.fillStyle = isPatternFill ? fillColor.getPattern(maskCtx, this) : fillColor;\n              maskCtx.fillRect(0, 0, width, height);\n              maskCtx.restore();\n              ctx.save();\n              ctx.transform.apply(ctx, image.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n              ctx.restore();\n            }\n          },\n          paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          },\n          paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(objId, scaleX, scaleY, positions) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(\"Dependent image isn't ready yet\");\n              return;\n            }\n\n            var width = imgData.width;\n            var height = imgData.height;\n            var map = [];\n\n            for (var i = 0, ii = positions.length; i < ii; i += 2) {\n              map.push({\n                transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n                x: 0,\n                y: 0,\n                w: width,\n                h: height\n              });\n            }\n\n            this.paintInlineImageXObjectGroup(imgData, map);\n          },\n          paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(imgData) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            var width = imgData.width;\n            var height = imgData.height;\n            var ctx = this.ctx;\n            this.save();\n            ctx.scale(1 / width, -1 / height);\n            var currentTransform = ctx.mozCurrentTransformInverse;\n            var a = currentTransform[0],\n                b = currentTransform[1];\n            var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n            var c = currentTransform[2],\n                d = currentTransform[3];\n            var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n            var imgToPaint, tmpCanvas;\n\n            if (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement || !imgData.data) {\n              imgToPaint = imgData;\n            } else {\n              tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n              var tmpCtx = tmpCanvas.context;\n              putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n              imgToPaint = tmpCanvas.canvas;\n            }\n\n            var paintWidth = width,\n                paintHeight = height;\n            var tmpCanvasId = \"prescale1\";\n\n            while (widthScale > 2 && paintWidth > 1 || heightScale > 2 && paintHeight > 1) {\n              var newWidth = paintWidth,\n                  newHeight = paintHeight;\n\n              if (widthScale > 2 && paintWidth > 1) {\n                newWidth = Math.ceil(paintWidth / 2);\n                widthScale /= paintWidth / newWidth;\n              }\n\n              if (heightScale > 2 && paintHeight > 1) {\n                newHeight = Math.ceil(paintHeight / 2);\n                heightScale /= paintHeight / newHeight;\n              }\n\n              tmpCanvas = this.cachedCanvases.getCanvas(tmpCanvasId, newWidth, newHeight);\n              tmpCtx = tmpCanvas.context;\n              tmpCtx.clearRect(0, 0, newWidth, newHeight);\n              tmpCtx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, 0, newWidth, newHeight);\n              imgToPaint = tmpCanvas.canvas;\n              paintWidth = newWidth;\n              paintHeight = newHeight;\n              tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n            }\n\n            ctx.drawImage(imgToPaint, 0, 0, paintWidth, paintHeight, 0, -height, width, height);\n\n            if (this.imageLayer) {\n              var position = this.getCanvasPosition(0, -height);\n              this.imageLayer.appendImage({\n                imgData,\n                left: position[0],\n                top: position[1],\n                width: width / currentTransform[0],\n                height: height / currentTransform[3]\n              });\n            }\n\n            this.restore();\n          },\n          paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(imgData, map) {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            var ctx = this.ctx;\n            var w = imgData.width;\n            var h = imgData.height;\n            var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n            var tmpCtx = tmpCanvas.context;\n            putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n            for (var i = 0, ii = map.length; i < ii; i++) {\n              var entry = map[i];\n              ctx.save();\n              ctx.transform.apply(ctx, entry.transform);\n              ctx.scale(1, -1);\n              ctx.drawImage(tmpCanvas.canvas, entry.x, entry.y, entry.w, entry.h, 0, -1, 1, 1);\n\n              if (this.imageLayer) {\n                var position = this.getCanvasPosition(entry.x, entry.y);\n                this.imageLayer.appendImage({\n                  imgData,\n                  left: position[0],\n                  top: position[1],\n                  width: w,\n                  height: h\n                });\n              }\n\n              ctx.restore();\n            }\n          },\n          paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n            if (!this.contentVisible) {\n              return;\n            }\n\n            this.ctx.fillRect(0, 0, 1, 1);\n          },\n          markPoint: function CanvasGraphics_markPoint(tag) {},\n          markPointProps: function CanvasGraphics_markPointProps(tag, properties) {},\n          beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n            this.markedContentStack.push({\n              visible: true\n            });\n          },\n          beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(tag, properties) {\n            if (tag === \"OC\") {\n              this.markedContentStack.push({\n                visible: this.optionalContentConfig.isVisible(properties)\n              });\n            } else {\n              this.markedContentStack.push({\n                visible: true\n              });\n            }\n\n            this.contentVisible = this.isContentVisible();\n          },\n          endMarkedContent: function CanvasGraphics_endMarkedContent() {\n            this.markedContentStack.pop();\n            this.contentVisible = this.isContentVisible();\n          },\n          beginCompat: function CanvasGraphics_beginCompat() {},\n          endCompat: function CanvasGraphics_endCompat() {},\n          consumePath: function CanvasGraphics_consumePath() {\n            var ctx = this.ctx;\n\n            if (this.pendingClip) {\n              if (this.pendingClip === EO_CLIP) {\n                ctx.clip(\"evenodd\");\n              } else {\n                ctx.clip();\n              }\n\n              this.pendingClip = null;\n            }\n\n            ctx.beginPath();\n          },\n\n          getSinglePixelWidth(scale) {\n            if (this._cachedGetSinglePixelWidth === null) {\n              const inverse = this.ctx.mozCurrentTransformInverse;\n              this._cachedGetSinglePixelWidth = Math.sqrt(Math.max(inverse[0] * inverse[0] + inverse[1] * inverse[1], inverse[2] * inverse[2] + inverse[3] * inverse[3]));\n            }\n\n            return this._cachedGetSinglePixelWidth;\n          },\n\n          getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n            var transform = this.ctx.mozCurrentTransform;\n            return [transform[0] * x + transform[2] * y + transform[4], transform[1] * x + transform[3] * y + transform[5]];\n          },\n          isContentVisible: function CanvasGraphics_isContentVisible() {\n            for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n              if (!this.markedContentStack[i].visible) {\n                return false;\n              }\n            }\n\n            return true;\n          }\n        };\n\n        for (var op in _util.OPS) {\n          CanvasGraphics.prototype[_util.OPS[op]] = CanvasGraphics.prototype[op];\n        }\n\n        return CanvasGraphics;\n      }();\n\n      exports.CanvasGraphics = CanvasGraphics;\n      /***/\n    },\n    /* 11 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getShadingPatternFromIR = getShadingPatternFromIR;\n      exports.TilingPattern = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var ShadingIRs = {};\n\n      function applyBoundingBox(ctx, bbox) {\n        if (!bbox || typeof Path2D === \"undefined\") {\n          return;\n        }\n\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n        const region = new Path2D();\n        region.rect(bbox[0], bbox[1], width, height);\n        ctx.clip(region);\n      }\n\n      ShadingIRs.RadialAxial = {\n        fromIR: function RadialAxial_fromIR(raw) {\n          var type = raw[1];\n          var bbox = raw[2];\n          var colorStops = raw[3];\n          var p0 = raw[4];\n          var p1 = raw[5];\n          var r0 = raw[6];\n          var r1 = raw[7];\n          return {\n            type: \"Pattern\",\n            getPattern: function RadialAxial_getPattern(ctx) {\n              applyBoundingBox(ctx, bbox);\n              var grad;\n\n              if (type === \"axial\") {\n                grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n              } else if (type === \"radial\") {\n                grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n              }\n\n              for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n                var c = colorStops[i];\n                grad.addColorStop(c[0], c[1]);\n              }\n\n              return grad;\n            }\n          };\n        }\n      };\n\n      var createMeshCanvas = function createMeshCanvasClosure() {\n        function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n          var coords = context.coords,\n              colors = context.colors;\n          var bytes = data.data,\n              rowSize = data.width * 4;\n          var tmp;\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          if (coords[p2 + 1] > coords[p3 + 1]) {\n            tmp = p2;\n            p2 = p3;\n            p3 = tmp;\n            tmp = c2;\n            c2 = c3;\n            c3 = tmp;\n          }\n\n          if (coords[p1 + 1] > coords[p2 + 1]) {\n            tmp = p1;\n            p1 = p2;\n            p2 = tmp;\n            tmp = c1;\n            c1 = c2;\n            c2 = tmp;\n          }\n\n          var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n          var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n          var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n          var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n          var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n          var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n\n          if (y1 >= y3) {\n            return;\n          }\n\n          var c1r = colors[c1],\n              c1g = colors[c1 + 1],\n              c1b = colors[c1 + 2];\n          var c2r = colors[c2],\n              c2g = colors[c2 + 1],\n              c2b = colors[c2 + 2];\n          var c3r = colors[c3],\n              c3g = colors[c3 + 1],\n              c3b = colors[c3 + 2];\n          var minY = Math.round(y1),\n              maxY = Math.round(y3);\n          var xa, car, cag, cab;\n          var xb, cbr, cbg, cbb;\n\n          for (var y = minY; y <= maxY; y++) {\n            if (y < y2) {\n              let k;\n\n              if (y < y1) {\n                k = 0;\n              } else if (y1 === y2) {\n                k = 1;\n              } else {\n                k = (y1 - y) / (y1 - y2);\n              }\n\n              xa = x1 - (x1 - x2) * k;\n              car = c1r - (c1r - c2r) * k;\n              cag = c1g - (c1g - c2g) * k;\n              cab = c1b - (c1b - c2b) * k;\n            } else {\n              let k;\n\n              if (y > y3) {\n                k = 1;\n              } else if (y2 === y3) {\n                k = 0;\n              } else {\n                k = (y2 - y) / (y2 - y3);\n              }\n\n              xa = x2 - (x2 - x3) * k;\n              car = c2r - (c2r - c3r) * k;\n              cag = c2g - (c2g - c3g) * k;\n              cab = c2b - (c2b - c3b) * k;\n            }\n\n            let k;\n\n            if (y < y1) {\n              k = 0;\n            } else if (y > y3) {\n              k = 1;\n            } else {\n              k = (y1 - y) / (y1 - y3);\n            }\n\n            xb = x1 - (x1 - x3) * k;\n            cbr = c1r - (c1r - c3r) * k;\n            cbg = c1g - (c1g - c3g) * k;\n            cbb = c1b - (c1b - c3b) * k;\n            var x1_ = Math.round(Math.min(xa, xb));\n            var x2_ = Math.round(Math.max(xa, xb));\n            var j = rowSize * y + x1_ * 4;\n\n            for (var x = x1_; x <= x2_; x++) {\n              k = (xa - x) / (xa - xb);\n\n              if (k < 0) {\n                k = 0;\n              } else if (k > 1) {\n                k = 1;\n              }\n\n              bytes[j++] = car - (car - cbr) * k | 0;\n              bytes[j++] = cag - (cag - cbg) * k | 0;\n              bytes[j++] = cab - (cab - cbb) * k | 0;\n              bytes[j++] = 255;\n            }\n          }\n        }\n\n        function drawFigure(data, figure, context) {\n          var ps = figure.coords;\n          var cs = figure.colors;\n          var i, ii;\n\n          switch (figure.type) {\n            case \"lattice\":\n              var verticesPerRow = figure.verticesPerRow;\n              var rows = Math.floor(ps.length / verticesPerRow) - 1;\n              var cols = verticesPerRow - 1;\n\n              for (i = 0; i < rows; i++) {\n                var q = i * verticesPerRow;\n\n                for (var j = 0; j < cols; j++, q++) {\n                  drawTriangle(data, context, ps[q], ps[q + 1], ps[q + verticesPerRow], cs[q], cs[q + 1], cs[q + verticesPerRow]);\n                  drawTriangle(data, context, ps[q + verticesPerRow + 1], ps[q + 1], ps[q + verticesPerRow], cs[q + verticesPerRow + 1], cs[q + 1], cs[q + verticesPerRow]);\n                }\n              }\n\n              break;\n\n            case \"triangles\":\n              for (i = 0, ii = ps.length; i < ii; i += 3) {\n                drawTriangle(data, context, ps[i], ps[i + 1], ps[i + 2], cs[i], cs[i + 1], cs[i + 2]);\n              }\n\n              break;\n\n            default:\n              throw new Error(\"illegal figure\");\n          }\n        }\n\n        function createMeshCanvas(bounds, combinesScale, coords, colors, figures, backgroundColor, cachedCanvases, webGLContext) {\n          var EXPECTED_SCALE = 1.1;\n          var MAX_PATTERN_SIZE = 3000;\n          var BORDER_SIZE = 2;\n          var offsetX = Math.floor(bounds[0]);\n          var offsetY = Math.floor(bounds[1]);\n          var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n          var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n          var width = Math.min(Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var height = Math.min(Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)), MAX_PATTERN_SIZE);\n          var scaleX = boundsWidth / width;\n          var scaleY = boundsHeight / height;\n          var context = {\n            coords,\n            colors,\n            offsetX: -offsetX,\n            offsetY: -offsetY,\n            scaleX: 1 / scaleX,\n            scaleY: 1 / scaleY\n          };\n          var paddedWidth = width + BORDER_SIZE * 2;\n          var paddedHeight = height + BORDER_SIZE * 2;\n          var canvas, tmpCanvas, i, ii;\n\n          if (webGLContext.isEnabled) {\n            canvas = webGLContext.drawFigures({\n              width,\n              height,\n              backgroundColor,\n              figures,\n              context\n            });\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          } else {\n            tmpCanvas = cachedCanvases.getCanvas(\"mesh\", paddedWidth, paddedHeight, false);\n            var tmpCtx = tmpCanvas.context;\n            var data = tmpCtx.createImageData(width, height);\n\n            if (backgroundColor) {\n              var bytes = data.data;\n\n              for (i = 0, ii = bytes.length; i < ii; i += 4) {\n                bytes[i] = backgroundColor[0];\n                bytes[i + 1] = backgroundColor[1];\n                bytes[i + 2] = backgroundColor[2];\n                bytes[i + 3] = 255;\n              }\n            }\n\n            for (i = 0; i < figures.length; i++) {\n              drawFigure(data, figures[i], context);\n            }\n\n            tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n            canvas = tmpCanvas.canvas;\n          }\n\n          return {\n            canvas,\n            offsetX: offsetX - BORDER_SIZE * scaleX,\n            offsetY: offsetY - BORDER_SIZE * scaleY,\n            scaleX,\n            scaleY\n          };\n        }\n\n        return createMeshCanvas;\n      }();\n\n      ShadingIRs.Mesh = {\n        fromIR: function Mesh_fromIR(raw) {\n          var coords = raw[2];\n          var colors = raw[3];\n          var figures = raw[4];\n          var bounds = raw[5];\n          var matrix = raw[6];\n          var bbox = raw[7];\n          var background = raw[8];\n          return {\n            type: \"Pattern\",\n            getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n              applyBoundingBox(ctx, bbox);\n              var scale;\n\n              if (shadingFill) {\n                scale = _util.Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n              } else {\n                scale = _util.Util.singularValueDecompose2dScale(owner.baseTransform);\n\n                if (matrix) {\n                  var matrixScale = _util.Util.singularValueDecompose2dScale(matrix);\n\n                  scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n                }\n              }\n\n              var temporaryPatternCanvas = createMeshCanvas(bounds, scale, coords, colors, figures, shadingFill ? null : background, owner.cachedCanvases, owner.webGLContext);\n\n              if (!shadingFill) {\n                ctx.setTransform.apply(ctx, owner.baseTransform);\n\n                if (matrix) {\n                  ctx.transform.apply(ctx, matrix);\n                }\n              }\n\n              ctx.translate(temporaryPatternCanvas.offsetX, temporaryPatternCanvas.offsetY);\n              ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n              return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n            }\n          };\n        }\n      };\n      ShadingIRs.Dummy = {\n        fromIR: function Dummy_fromIR() {\n          return {\n            type: \"Pattern\",\n            getPattern: function Dummy_fromIR_getPattern() {\n              return \"hotpink\";\n            }\n          };\n        }\n      };\n\n      function getShadingPatternFromIR(raw) {\n        var shadingIR = ShadingIRs[raw[0]];\n\n        if (!shadingIR) {\n          throw new Error(`Unknown IR type: ${raw[0]}`);\n        }\n\n        return shadingIR.fromIR(raw);\n      }\n\n      var TilingPattern = function TilingPatternClosure() {\n        var PaintType = {\n          COLORED: 1,\n          UNCOLORED: 2\n        };\n        var MAX_PATTERN_SIZE = 3000;\n\n        function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n          this.operatorList = IR[2];\n          this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n          this.bbox = IR[4];\n          this.xstep = IR[5];\n          this.ystep = IR[6];\n          this.paintType = IR[7];\n          this.tilingType = IR[8];\n          this.color = color;\n          this.canvasGraphicsFactory = canvasGraphicsFactory;\n          this.baseTransform = baseTransform;\n          this.type = \"Pattern\";\n          this.ctx = ctx;\n        }\n\n        TilingPattern.prototype = {\n          createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n            var operatorList = this.operatorList;\n            var bbox = this.bbox;\n            var xstep = this.xstep;\n            var ystep = this.ystep;\n            var paintType = this.paintType;\n            var tilingType = this.tilingType;\n            var color = this.color;\n            var canvasGraphicsFactory = this.canvasGraphicsFactory;\n            (0, _util.info)(\"TilingType: \" + tilingType);\n            var x0 = bbox[0],\n                y0 = bbox[1],\n                x1 = bbox[2],\n                y1 = bbox[3];\n\n            var matrixScale = _util.Util.singularValueDecompose2dScale(this.matrix);\n\n            var curMatrixScale = _util.Util.singularValueDecompose2dScale(this.baseTransform);\n\n            var combinedScale = [matrixScale[0] * curMatrixScale[0], matrixScale[1] * curMatrixScale[1]];\n            var dimx = this.getSizeAndScale(xstep, this.ctx.canvas.width, combinedScale[0]);\n            var dimy = this.getSizeAndScale(ystep, this.ctx.canvas.height, combinedScale[1]);\n            var tmpCanvas = owner.cachedCanvases.getCanvas(\"pattern\", dimx.size, dimy.size, true);\n            var tmpCtx = tmpCanvas.context;\n            var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n            graphics.groupLevel = owner.groupLevel;\n            this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n            graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n            graphics.transform(1, 0, 0, 1, -x0, -y0);\n            this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n            graphics.executeOperatorList(operatorList);\n            this.ctx.transform(1, 0, 0, 1, x0, y0);\n            this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n            return tmpCanvas.canvas;\n          },\n          getSizeAndScale: function TilingPattern_getSizeAndScale(step, realOutputSize, scale) {\n            step = Math.abs(step);\n            var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n            var size = Math.ceil(step * scale);\n\n            if (size >= maxSize) {\n              size = maxSize;\n            } else {\n              scale = size / step;\n            }\n\n            return {\n              scale,\n              size\n            };\n          },\n          clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n            if (Array.isArray(bbox) && bbox.length === 4) {\n              var bboxWidth = x1 - x0;\n              var bboxHeight = y1 - y0;\n              graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n              graphics.clip();\n              graphics.endPath();\n            }\n          },\n          setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(graphics, paintType, color) {\n            const context = graphics.ctx,\n                  current = graphics.current;\n\n            switch (paintType) {\n              case PaintType.COLORED:\n                var ctx = this.ctx;\n                context.fillStyle = ctx.fillStyle;\n                context.strokeStyle = ctx.strokeStyle;\n                current.fillColor = ctx.fillStyle;\n                current.strokeColor = ctx.strokeStyle;\n                break;\n\n              case PaintType.UNCOLORED:\n                var cssColor = _util.Util.makeCssRgb(color[0], color[1], color[2]);\n\n                context.fillStyle = cssColor;\n                context.strokeStyle = cssColor;\n                current.fillColor = cssColor;\n                current.strokeColor = cssColor;\n                break;\n\n              default:\n                throw new _util.FormatError(`Unsupported paint type: ${paintType}`);\n            }\n          },\n          getPattern: function TilingPattern_getPattern(ctx, owner) {\n            ctx = this.ctx;\n            ctx.setTransform.apply(ctx, this.baseTransform);\n            ctx.transform.apply(ctx, this.matrix);\n            var temporaryPatternCanvas = this.createPatternCanvas(owner);\n            return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n          }\n        };\n        return TilingPattern;\n      }();\n\n      exports.TilingPattern = TilingPattern;\n      /***/\n    },\n    /* 12 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.GlobalWorkerOptions = void 0;\n      const GlobalWorkerOptions = Object.create(null);\n      exports.GlobalWorkerOptions = GlobalWorkerOptions;\n      GlobalWorkerOptions.workerPort = GlobalWorkerOptions.workerPort === undefined ? null : GlobalWorkerOptions.workerPort;\n      GlobalWorkerOptions.workerSrc = GlobalWorkerOptions.workerSrc === undefined ? \"\" : GlobalWorkerOptions.workerSrc;\n      /***/\n    },\n    /* 13 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.MessageHandler = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      const CallbackKind = {\n        UNKNOWN: 0,\n        DATA: 1,\n        ERROR: 2\n      };\n      const StreamKind = {\n        UNKNOWN: 0,\n        CANCEL: 1,\n        CANCEL_COMPLETE: 2,\n        CLOSE: 3,\n        ENQUEUE: 4,\n        ERROR: 5,\n        PULL: 6,\n        PULL_COMPLETE: 7,\n        START_COMPLETE: 8\n      };\n\n      function wrapReason(reason) {\n        if (typeof reason !== \"object\" || reason === null) {\n          return reason;\n        }\n\n        switch (reason.name) {\n          case \"AbortException\":\n            return new _util.AbortException(reason.message);\n\n          case \"MissingPDFException\":\n            return new _util.MissingPDFException(reason.message);\n\n          case \"UnexpectedResponseException\":\n            return new _util.UnexpectedResponseException(reason.message, reason.status);\n\n          case \"UnknownErrorException\":\n            return new _util.UnknownErrorException(reason.message, reason.details);\n\n          default:\n            return new _util.UnknownErrorException(reason.message, reason.toString());\n        }\n      }\n\n      class MessageHandler {\n        constructor(sourceName, targetName, comObj) {\n          this.sourceName = sourceName;\n          this.targetName = targetName;\n          this.comObj = comObj;\n          this.callbackId = 1;\n          this.streamId = 1;\n          this.postMessageTransfers = true;\n          this.streamSinks = Object.create(null);\n          this.streamControllers = Object.create(null);\n          this.callbackCapabilities = Object.create(null);\n          this.actionHandler = Object.create(null);\n\n          this._onComObjOnMessage = event => {\n            const data = event.data;\n\n            if (data.targetName !== this.sourceName) {\n              return;\n            }\n\n            if (data.stream) {\n              this._processStreamMessage(data);\n\n              return;\n            }\n\n            if (data.callback) {\n              const callbackId = data.callbackId;\n              const capability = this.callbackCapabilities[callbackId];\n\n              if (!capability) {\n                throw new Error(`Cannot resolve callback ${callbackId}`);\n              }\n\n              delete this.callbackCapabilities[callbackId];\n\n              if (data.callback === CallbackKind.DATA) {\n                capability.resolve(data.data);\n              } else if (data.callback === CallbackKind.ERROR) {\n                capability.reject(wrapReason(data.reason));\n              } else {\n                throw new Error(\"Unexpected callback case\");\n              }\n\n              return;\n            }\n\n            const action = this.actionHandler[data.action];\n\n            if (!action) {\n              throw new Error(`Unknown action from worker: ${data.action}`);\n            }\n\n            if (data.callbackId) {\n              const cbSourceName = this.sourceName;\n              const cbTargetName = data.sourceName;\n              new Promise(function (resolve) {\n                resolve(action(data.data));\n              }).then(function (result) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.DATA,\n                  callbackId: data.callbackId,\n                  data: result\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName: cbSourceName,\n                  targetName: cbTargetName,\n                  callback: CallbackKind.ERROR,\n                  callbackId: data.callbackId,\n                  reason: wrapReason(reason)\n                });\n              });\n              return;\n            }\n\n            if (data.streamId) {\n              this._createStreamSink(data);\n\n              return;\n            }\n\n            action(data.data);\n          };\n\n          comObj.addEventListener(\"message\", this._onComObjOnMessage);\n        }\n\n        on(actionName, handler) {\n          const ah = this.actionHandler;\n\n          if (ah[actionName]) {\n            throw new Error(`There is already an actionName called \"${actionName}\"`);\n          }\n\n          ah[actionName] = handler;\n        }\n\n        send(actionName, data, transfers) {\n          this._postMessage({\n            sourceName: this.sourceName,\n            targetName: this.targetName,\n            action: actionName,\n            data\n          }, transfers);\n        }\n\n        sendWithPromise(actionName, data, transfers) {\n          const callbackId = this.callbackId++;\n          const capability = (0, _util.createPromiseCapability)();\n          this.callbackCapabilities[callbackId] = capability;\n\n          try {\n            this._postMessage({\n              sourceName: this.sourceName,\n              targetName: this.targetName,\n              action: actionName,\n              callbackId,\n              data\n            }, transfers);\n          } catch (ex) {\n            capability.reject(ex);\n          }\n\n          return capability.promise;\n        }\n\n        sendWithStream(actionName, data, queueingStrategy, transfers) {\n          const streamId = this.streamId++;\n          const sourceName = this.sourceName;\n          const targetName = this.targetName;\n          const comObj = this.comObj;\n          return new ReadableStream({\n            start: controller => {\n              const startCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId] = {\n                controller,\n                startCall: startCapability,\n                pullCall: null,\n                cancelCall: null,\n                isClosed: false\n              };\n\n              this._postMessage({\n                sourceName,\n                targetName,\n                action: actionName,\n                streamId,\n                data,\n                desiredSize: controller.desiredSize\n              }, transfers);\n\n              return startCapability.promise;\n            },\n            pull: controller => {\n              const pullCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId].pullCall = pullCapability;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.PULL,\n                streamId,\n                desiredSize: controller.desiredSize\n              });\n              return pullCapability.promise;\n            },\n            cancel: reason => {\n              (0, _util.assert)(reason instanceof Error, \"cancel must have a valid reason\");\n              const cancelCapability = (0, _util.createPromiseCapability)();\n              this.streamControllers[streamId].cancelCall = cancelCapability;\n              this.streamControllers[streamId].isClosed = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CANCEL,\n                streamId,\n                reason: wrapReason(reason)\n              });\n              return cancelCapability.promise;\n            }\n          }, queueingStrategy);\n        }\n\n        _createStreamSink(data) {\n          const self = this;\n          const action = this.actionHandler[data.action];\n          const streamId = data.streamId;\n          const sourceName = this.sourceName;\n          const targetName = data.sourceName;\n          const comObj = this.comObj;\n          const streamSink = {\n            enqueue(chunk) {\n              let size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n              let transfers = arguments.length > 2 ? arguments[2] : undefined;\n\n              if (this.isCancelled) {\n                return;\n              }\n\n              const lastDesiredSize = this.desiredSize;\n              this.desiredSize -= size;\n\n              if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n                this.sinkCapability = (0, _util.createPromiseCapability)();\n                this.ready = this.sinkCapability.promise;\n              }\n\n              self._postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.ENQUEUE,\n                streamId,\n                chunk\n              }, transfers);\n            },\n\n            close() {\n              if (this.isCancelled) {\n                return;\n              }\n\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.CLOSE,\n                streamId\n              });\n              delete self.streamSinks[streamId];\n            },\n\n            error(reason) {\n              (0, _util.assert)(reason instanceof Error, \"error must have a valid reason\");\n\n              if (this.isCancelled) {\n                return;\n              }\n\n              this.isCancelled = true;\n              comObj.postMessage({\n                sourceName,\n                targetName,\n                stream: StreamKind.ERROR,\n                streamId,\n                reason: wrapReason(reason)\n              });\n            },\n\n            sinkCapability: (0, _util.createPromiseCapability)(),\n            onPull: null,\n            onCancel: null,\n            isCancelled: false,\n            desiredSize: data.desiredSize,\n            ready: null\n          };\n          streamSink.sinkCapability.resolve();\n          streamSink.ready = streamSink.sinkCapability.promise;\n          this.streamSinks[streamId] = streamSink;\n          new Promise(function (resolve) {\n            resolve(action(data.data, streamSink));\n          }).then(function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId,\n              success: true\n            });\n          }, function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.START_COMPLETE,\n              streamId,\n              reason: wrapReason(reason)\n            });\n          });\n        }\n\n        _processStreamMessage(data) {\n          const streamId = data.streamId;\n          const sourceName = this.sourceName;\n          const targetName = data.sourceName;\n          const comObj = this.comObj;\n\n          switch (data.stream) {\n            case StreamKind.START_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].startCall.resolve();\n              } else {\n                this.streamControllers[streamId].startCall.reject(wrapReason(data.reason));\n              }\n\n              break;\n\n            case StreamKind.PULL_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].pullCall.resolve();\n              } else {\n                this.streamControllers[streamId].pullCall.reject(wrapReason(data.reason));\n              }\n\n              break;\n\n            case StreamKind.PULL:\n              if (!this.streamSinks[streamId]) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n                break;\n              }\n\n              if (this.streamSinks[streamId].desiredSize <= 0 && data.desiredSize > 0) {\n                this.streamSinks[streamId].sinkCapability.resolve();\n              }\n\n              this.streamSinks[streamId].desiredSize = data.desiredSize;\n              const {\n                onPull\n              } = this.streamSinks[data.streamId];\n              new Promise(function (resolve) {\n                resolve(onPull && onPull());\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.PULL_COMPLETE,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              break;\n\n            case StreamKind.ENQUEUE:\n              (0, _util.assert)(this.streamControllers[streamId], \"enqueue should have stream controller\");\n\n              if (this.streamControllers[streamId].isClosed) {\n                break;\n              }\n\n              this.streamControllers[streamId].controller.enqueue(data.chunk);\n              break;\n\n            case StreamKind.CLOSE:\n              (0, _util.assert)(this.streamControllers[streamId], \"close should have stream controller\");\n\n              if (this.streamControllers[streamId].isClosed) {\n                break;\n              }\n\n              this.streamControllers[streamId].isClosed = true;\n              this.streamControllers[streamId].controller.close();\n\n              this._deleteStreamController(streamId);\n\n              break;\n\n            case StreamKind.ERROR:\n              (0, _util.assert)(this.streamControllers[streamId], \"error should have stream controller\");\n              this.streamControllers[streamId].controller.error(wrapReason(data.reason));\n\n              this._deleteStreamController(streamId);\n\n              break;\n\n            case StreamKind.CANCEL_COMPLETE:\n              if (data.success) {\n                this.streamControllers[streamId].cancelCall.resolve();\n              } else {\n                this.streamControllers[streamId].cancelCall.reject(wrapReason(data.reason));\n              }\n\n              this._deleteStreamController(streamId);\n\n              break;\n\n            case StreamKind.CANCEL:\n              if (!this.streamSinks[streamId]) {\n                break;\n              }\n\n              const {\n                onCancel\n              } = this.streamSinks[data.streamId];\n              new Promise(function (resolve) {\n                resolve(onCancel && onCancel(wrapReason(data.reason)));\n              }).then(function () {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId,\n                  success: true\n                });\n              }, function (reason) {\n                comObj.postMessage({\n                  sourceName,\n                  targetName,\n                  stream: StreamKind.CANCEL_COMPLETE,\n                  streamId,\n                  reason: wrapReason(reason)\n                });\n              });\n              this.streamSinks[streamId].sinkCapability.reject(wrapReason(data.reason));\n              this.streamSinks[streamId].isCancelled = true;\n              delete this.streamSinks[streamId];\n              break;\n\n            default:\n              throw new Error(\"Unexpected stream case\");\n          }\n        }\n\n        async _deleteStreamController(streamId) {\n          await Promise.allSettled([this.streamControllers[streamId].startCall, this.streamControllers[streamId].pullCall, this.streamControllers[streamId].cancelCall].map(function (capability) {\n            return capability && capability.promise;\n          }));\n          delete this.streamControllers[streamId];\n        }\n\n        _postMessage(message, transfers) {\n          if (transfers && this.postMessageTransfers) {\n            this.comObj.postMessage(message, transfers);\n          } else {\n            this.comObj.postMessage(message);\n          }\n        }\n\n        destroy() {\n          this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n        }\n\n      }\n\n      exports.MessageHandler = MessageHandler;\n      /***/\n    },\n    /* 14 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.Metadata = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _xml_parser = __w_pdfjs_require__(15);\n\n      class Metadata {\n        constructor(data) {\n          (0, _util.assert)(typeof data === \"string\", \"Metadata: input is not a string\");\n          data = this._repair(data);\n          const parser = new _xml_parser.SimpleXMLParser();\n          const xmlDocument = parser.parseFromString(data);\n          this._metadataMap = new Map();\n\n          if (xmlDocument) {\n            this._parse(xmlDocument);\n          }\n        }\n\n        _repair(data) {\n          return data.replace(/^[^<]+/, \"\").replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n            const bytes = codes.replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n              return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n            }).replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n              switch (name) {\n                case \"amp\":\n                  return \"&\";\n\n                case \"apos\":\n                  return \"'\";\n\n                case \"gt\":\n                  return \">\";\n\n                case \"lt\":\n                  return \"<\";\n\n                case \"quot\":\n                  return '\"';\n              }\n\n              throw new Error(`_repair: ${name} isn't defined.`);\n            });\n            let chars = \"\";\n\n            for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n              const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n\n              if (code >= 32 && code < 127 && code !== 60 && code !== 62 && code !== 38) {\n                chars += String.fromCharCode(code);\n              } else {\n                chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n              }\n            }\n\n            return \">\" + chars;\n          });\n        }\n\n        _parse(xmlDocument) {\n          let rdf = xmlDocument.documentElement;\n\n          if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n            rdf = rdf.firstChild;\n\n            while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n              rdf = rdf.nextSibling;\n            }\n          }\n\n          const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n\n          if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n            return;\n          }\n\n          const children = rdf.childNodes;\n\n          for (let i = 0, ii = children.length; i < ii; i++) {\n            const desc = children[i];\n\n            if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n              continue;\n            }\n\n            for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n              if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n                const entry = desc.childNodes[j];\n                const name = entry.nodeName.toLowerCase();\n\n                this._metadataMap.set(name, entry.textContent.trim());\n              }\n            }\n          }\n        }\n\n        get(name) {\n          return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n        }\n\n        getAll() {\n          return Object.fromEntries(this._metadataMap);\n        }\n\n        has(name) {\n          return this._metadataMap.has(name);\n        }\n\n      }\n\n      exports.Metadata = Metadata;\n      /***/\n    },\n    /* 15 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SimpleXMLParser = void 0;\n      const XMLParserErrorCode = {\n        NoError: 0,\n        EndOfDocument: -1,\n        UnterminatedCdat: -2,\n        UnterminatedXmlDeclaration: -3,\n        UnterminatedDoctypeDeclaration: -4,\n        UnterminatedComment: -5,\n        MalformedElement: -6,\n        OutOfMemory: -7,\n        UnterminatedAttributeValue: -8,\n        UnterminatedElement: -9,\n        ElementNeverBegun: -10\n      };\n\n      function isWhitespace(s, index) {\n        const ch = s[index];\n        return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n      }\n\n      function isWhitespaceString(s) {\n        for (let i = 0, ii = s.length; i < ii; i++) {\n          if (!isWhitespace(s, i)) {\n            return false;\n          }\n        }\n\n        return true;\n      }\n\n      class XMLParserBase {\n        _resolveEntities(s) {\n          return s.replace(/&([^;]+);/g, (all, entity) => {\n            if (entity.substring(0, 2) === \"#x\") {\n              return String.fromCharCode(parseInt(entity.substring(2), 16));\n            } else if (entity.substring(0, 1) === \"#\") {\n              return String.fromCharCode(parseInt(entity.substring(1), 10));\n            }\n\n            switch (entity) {\n              case \"lt\":\n                return \"<\";\n\n              case \"gt\":\n                return \">\";\n\n              case \"amp\":\n                return \"&\";\n\n              case \"quot\":\n                return '\"';\n            }\n\n            return this.onResolveEntity(entity);\n          });\n        }\n\n        _parseContent(s, start) {\n          const attributes = [];\n          let pos = start;\n\n          function skipWs() {\n            while (pos < s.length && isWhitespace(s, pos)) {\n              ++pos;\n            }\n          }\n\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n            ++pos;\n          }\n\n          const name = s.substring(start, pos);\n          skipWs();\n\n          while (pos < s.length && s[pos] !== \">\" && s[pos] !== \"/\" && s[pos] !== \"?\") {\n            skipWs();\n            let attrName = \"\",\n                attrValue = \"\";\n\n            while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n              attrName += s[pos];\n              ++pos;\n            }\n\n            skipWs();\n\n            if (s[pos] !== \"=\") {\n              return null;\n            }\n\n            ++pos;\n            skipWs();\n            const attrEndChar = s[pos];\n\n            if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n              return null;\n            }\n\n            const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n\n            if (attrEndIndex < 0) {\n              return null;\n            }\n\n            attrValue = s.substring(pos, attrEndIndex);\n            attributes.push({\n              name: attrName,\n              value: this._resolveEntities(attrValue)\n            });\n            pos = attrEndIndex + 1;\n            skipWs();\n          }\n\n          return {\n            name,\n            attributes,\n            parsed: pos - start\n          };\n        }\n\n        _parseProcessingInstruction(s, start) {\n          let pos = start;\n\n          function skipWs() {\n            while (pos < s.length && isWhitespace(s, pos)) {\n              ++pos;\n            }\n          }\n\n          while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \">\" && s[pos] !== \"/\") {\n            ++pos;\n          }\n\n          const name = s.substring(start, pos);\n          skipWs();\n          const attrStart = pos;\n\n          while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n            ++pos;\n          }\n\n          const value = s.substring(attrStart, pos);\n          return {\n            name,\n            value,\n            parsed: pos - start\n          };\n        }\n\n        parseXml(s) {\n          let i = 0;\n\n          while (i < s.length) {\n            const ch = s[i];\n            let j = i;\n\n            if (ch === \"<\") {\n              ++j;\n              const ch2 = s[j];\n              let q;\n\n              switch (ch2) {\n                case \"/\":\n                  ++j;\n                  q = s.indexOf(\">\", j);\n\n                  if (q < 0) {\n                    this.onError(XMLParserErrorCode.UnterminatedElement);\n                    return;\n                  }\n\n                  this.onEndElement(s.substring(j, q));\n                  j = q + 1;\n                  break;\n\n                case \"?\":\n                  ++j;\n\n                  const pi = this._parseProcessingInstruction(s, j);\n\n                  if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n                    this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n                    return;\n                  }\n\n                  this.onPi(pi.name, pi.value);\n                  j += pi.parsed + 2;\n                  break;\n\n                case \"!\":\n                  if (s.substring(j + 1, j + 3) === \"--\") {\n                    q = s.indexOf(\"-->\", j + 3);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedComment);\n                      return;\n                    }\n\n                    this.onComment(s.substring(j + 3, q));\n                    j = q + 3;\n                  } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n                    q = s.indexOf(\"]]>\", j + 8);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedCdat);\n                      return;\n                    }\n\n                    this.onCdata(s.substring(j + 8, q));\n                    j = q + 3;\n                  } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n                    const q2 = s.indexOf(\"[\", j + 8);\n                    let complexDoctype = false;\n                    q = s.indexOf(\">\", j + 8);\n\n                    if (q < 0) {\n                      this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                      return;\n                    }\n\n                    if (q2 > 0 && q > q2) {\n                      q = s.indexOf(\"]>\", j + 8);\n\n                      if (q < 0) {\n                        this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                        return;\n                      }\n\n                      complexDoctype = true;\n                    }\n\n                    const doctypeContent = s.substring(j + 8, q + (complexDoctype ? 1 : 0));\n                    this.onDoctype(doctypeContent);\n                    j = q + (complexDoctype ? 2 : 1);\n                  } else {\n                    this.onError(XMLParserErrorCode.MalformedElement);\n                    return;\n                  }\n\n                  break;\n\n                default:\n                  const content = this._parseContent(s, j);\n\n                  if (content === null) {\n                    this.onError(XMLParserErrorCode.MalformedElement);\n                    return;\n                  }\n\n                  let isClosed = false;\n\n                  if (s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\") {\n                    isClosed = true;\n                  } else if (s.substring(j + content.parsed, j + content.parsed + 1) !== \">\") {\n                    this.onError(XMLParserErrorCode.UnterminatedElement);\n                    return;\n                  }\n\n                  this.onBeginElement(content.name, content.attributes, isClosed);\n                  j += content.parsed + (isClosed ? 2 : 1);\n                  break;\n              }\n            } else {\n              while (j < s.length && s[j] !== \"<\") {\n                j++;\n              }\n\n              const text = s.substring(i, j);\n              this.onText(this._resolveEntities(text));\n            }\n\n            i = j;\n          }\n        }\n\n        onResolveEntity(name) {\n          return `&${name};`;\n        }\n\n        onPi(name, value) {}\n\n        onComment(text) {}\n\n        onCdata(text) {}\n\n        onDoctype(doctypeContent) {}\n\n        onText(text) {}\n\n        onBeginElement(name, attributes, isEmpty) {}\n\n        onEndElement(name) {}\n\n        onError(code) {}\n\n      }\n\n      class SimpleDOMNode {\n        constructor(nodeName, nodeValue) {\n          this.nodeName = nodeName;\n          this.nodeValue = nodeValue;\n          Object.defineProperty(this, \"parentNode\", {\n            value: null,\n            writable: true\n          });\n        }\n\n        get firstChild() {\n          return this.childNodes && this.childNodes[0];\n        }\n\n        get nextSibling() {\n          const childNodes = this.parentNode.childNodes;\n\n          if (!childNodes) {\n            return undefined;\n          }\n\n          const index = childNodes.indexOf(this);\n\n          if (index === -1) {\n            return undefined;\n          }\n\n          return childNodes[index + 1];\n        }\n\n        get textContent() {\n          if (!this.childNodes) {\n            return this.nodeValue || \"\";\n          }\n\n          return this.childNodes.map(function (child) {\n            return child.textContent;\n          }).join(\"\");\n        }\n\n        hasChildNodes() {\n          return this.childNodes && this.childNodes.length > 0;\n        }\n\n      }\n\n      class SimpleXMLParser extends XMLParserBase {\n        constructor() {\n          super();\n          this._currentFragment = null;\n          this._stack = null;\n          this._errorCode = XMLParserErrorCode.NoError;\n        }\n\n        parseFromString(data) {\n          this._currentFragment = [];\n          this._stack = [];\n          this._errorCode = XMLParserErrorCode.NoError;\n          this.parseXml(data);\n\n          if (this._errorCode !== XMLParserErrorCode.NoError) {\n            return undefined;\n          }\n\n          const [documentElement] = this._currentFragment;\n\n          if (!documentElement) {\n            return undefined;\n          }\n\n          return {\n            documentElement\n          };\n        }\n\n        onResolveEntity(name) {\n          switch (name) {\n            case \"apos\":\n              return \"'\";\n          }\n\n          return super.onResolveEntity(name);\n        }\n\n        onText(text) {\n          if (isWhitespaceString(text)) {\n            return;\n          }\n\n          const node = new SimpleDOMNode(\"#text\", text);\n\n          this._currentFragment.push(node);\n        }\n\n        onCdata(text) {\n          const node = new SimpleDOMNode(\"#text\", text);\n\n          this._currentFragment.push(node);\n        }\n\n        onBeginElement(name, attributes, isEmpty) {\n          const node = new SimpleDOMNode(name);\n          node.childNodes = [];\n\n          this._currentFragment.push(node);\n\n          if (isEmpty) {\n            return;\n          }\n\n          this._stack.push(this._currentFragment);\n\n          this._currentFragment = node.childNodes;\n        }\n\n        onEndElement(name) {\n          this._currentFragment = this._stack.pop() || [];\n          const lastElement = this._currentFragment[this._currentFragment.length - 1];\n\n          if (!lastElement) {\n            return;\n          }\n\n          for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n            lastElement.childNodes[i].parentNode = lastElement;\n          }\n        }\n\n        onError(code) {\n          this._errorCode = code;\n        }\n\n      }\n\n      exports.SimpleXMLParser = SimpleXMLParser;\n      /***/\n    },\n    /* 16 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.OptionalContentConfig = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      class OptionalContentGroup {\n        constructor(name, intent) {\n          this.visible = true;\n          this.name = name;\n          this.intent = intent;\n        }\n\n      }\n\n      class OptionalContentConfig {\n        constructor(data) {\n          this.name = null;\n          this.creator = null;\n          this._order = null;\n          this._groups = new Map();\n\n          if (data === null) {\n            return;\n          }\n\n          this.name = data.name;\n          this.creator = data.creator;\n          this._order = data.order;\n\n          for (const group of data.groups) {\n            this._groups.set(group.id, new OptionalContentGroup(group.name, group.intent));\n          }\n\n          if (data.baseState === \"OFF\") {\n            for (const group of this._groups) {\n              group.visible = false;\n            }\n          }\n\n          for (const on of data.on) {\n            this._groups.get(on).visible = true;\n          }\n\n          for (const off of data.off) {\n            this._groups.get(off).visible = false;\n          }\n        }\n\n        isVisible(group) {\n          if (group.type === \"OCG\") {\n            if (!this._groups.has(group.id)) {\n              (0, _util.warn)(`Optional content group not found: ${group.id}`);\n              return true;\n            }\n\n            return this._groups.get(group.id).visible;\n          } else if (group.type === \"OCMD\") {\n            if (group.expression) {\n              (0, _util.warn)(\"Visibility expression not supported yet.\");\n            }\n\n            if (!group.policy || group.policy === \"AnyOn\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n\n                if (this._groups.get(id).visible) {\n                  return true;\n                }\n              }\n\n              return false;\n            } else if (group.policy === \"AllOn\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n\n                if (!this._groups.get(id).visible) {\n                  return false;\n                }\n              }\n\n              return true;\n            } else if (group.policy === \"AnyOff\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n\n                if (!this._groups.get(id).visible) {\n                  return true;\n                }\n              }\n\n              return false;\n            } else if (group.policy === \"AllOff\") {\n              for (const id of group.ids) {\n                if (!this._groups.has(id)) {\n                  (0, _util.warn)(`Optional content group not found: ${id}`);\n                  return true;\n                }\n\n                if (this._groups.get(id).visible) {\n                  return false;\n                }\n              }\n\n              return true;\n            }\n\n            (0, _util.warn)(`Unknown optional content policy ${group.policy}.`);\n            return true;\n          }\n\n          (0, _util.warn)(`Unknown group type ${group.type}.`);\n          return true;\n        }\n\n        setVisibility(id) {\n          let visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n          if (!this._groups.has(id)) {\n            (0, _util.warn)(`Optional content group not found: ${id}`);\n            return;\n          }\n\n          this._groups.get(id).visible = !!visible;\n        }\n\n        getOrder() {\n          if (!this._groups.size) {\n            return null;\n          }\n\n          if (this._order) {\n            return this._order.slice();\n          }\n\n          return Array.from(this._groups.keys());\n        }\n\n        getGroups() {\n          if (!this._groups.size) {\n            return null;\n          }\n\n          return Object.fromEntries(this._groups);\n        }\n\n        getGroup(id) {\n          return this._groups.get(id) || null;\n        }\n\n      }\n\n      exports.OptionalContentConfig = OptionalContentConfig;\n      /***/\n    },\n    /* 17 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFDataTransportStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      class PDFDataTransportStream {\n        constructor(params, pdfDataRangeTransport) {\n          (0, _util.assert)(pdfDataRangeTransport, 'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.');\n          this._queuedChunks = [];\n          this._progressiveDone = params.progressiveDone || false;\n          const initialData = params.initialData;\n\n          if (initialData && initialData.length > 0) {\n            const buffer = new Uint8Array(initialData).buffer;\n\n            this._queuedChunks.push(buffer);\n          }\n\n          this._pdfDataRangeTransport = pdfDataRangeTransport;\n          this._isStreamingSupported = !params.disableStream;\n          this._isRangeSupported = !params.disableRange;\n          this._contentLength = params.length;\n          this._fullRequestReader = null;\n          this._rangeReaders = [];\n\n          this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n            this._onReceiveData({\n              begin,\n              chunk\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n            this._onProgress({\n              loaded,\n              total\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n            this._onReceiveData({\n              chunk\n            });\n          });\n\n          this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n            this._onProgressiveDone();\n          });\n\n          this._pdfDataRangeTransport.transportReady();\n        }\n\n        _onReceiveData(args) {\n          const buffer = new Uint8Array(args.chunk).buffer;\n\n          if (args.begin === undefined) {\n            if (this._fullRequestReader) {\n              this._fullRequestReader._enqueue(buffer);\n            } else {\n              this._queuedChunks.push(buffer);\n            }\n          } else {\n            const found = this._rangeReaders.some(function (rangeReader) {\n              if (rangeReader._begin !== args.begin) {\n                return false;\n              }\n\n              rangeReader._enqueue(buffer);\n\n              return true;\n            });\n\n            (0, _util.assert)(found, \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\");\n          }\n        }\n\n        get _progressiveDataLength() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n\n        _onProgress(evt) {\n          if (evt.total === undefined) {\n            const firstReader = this._rangeReaders[0];\n\n            if (firstReader && firstReader.onProgress) {\n              firstReader.onProgress({\n                loaded: evt.loaded\n              });\n            }\n          } else {\n            const fullReader = this._fullRequestReader;\n\n            if (fullReader && fullReader.onProgress) {\n              fullReader.onProgress({\n                loaded: evt.loaded,\n                total: evt.total\n              });\n            }\n          }\n        }\n\n        _onProgressiveDone() {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.progressiveDone();\n          }\n\n          this._progressiveDone = true;\n        }\n\n        _removeRangeReader(reader) {\n          const i = this._rangeReaders.indexOf(reader);\n\n          if (i >= 0) {\n            this._rangeReaders.splice(i, 1);\n          }\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFDataTransportStream.getFullReader can only be called once.\");\n          const queuedChunks = this._queuedChunks;\n          this._queuedChunks = null;\n          return new PDFDataTransportStreamReader(this, queuedChunks, this._progressiveDone);\n        }\n\n        getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n\n          const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n\n          this._pdfDataRangeTransport.requestDataRange(begin, end);\n\n          this._rangeReaders.push(reader);\n\n          return reader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeReaders.slice(0);\n\n          readers.forEach(function (rangeReader) {\n            rangeReader.cancel(reason);\n          });\n\n          this._pdfDataRangeTransport.abort();\n        }\n\n      }\n\n      exports.PDFDataTransportStream = PDFDataTransportStream;\n\n      class PDFDataTransportStreamReader {\n        constructor(stream, queuedChunks) {\n          let progressiveDone = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this._stream = stream;\n          this._done = progressiveDone || false;\n          this._filename = null;\n          this._queuedChunks = queuedChunks || [];\n          this._loaded = 0;\n\n          for (const chunk of this._queuedChunks) {\n            this._loaded += chunk.byteLength;\n          }\n\n          this._requests = [];\n          this._headersReady = Promise.resolve();\n          stream._fullRequestReader = this;\n          this.onProgress = null;\n        }\n\n        _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunks.push(chunk);\n          }\n\n          this._loaded += chunk.byteLength;\n        }\n\n        get headersReady() {\n          return this._headersReady;\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get isRangeSupported() {\n          return this._stream._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._stream._isStreamingSupported;\n        }\n\n        get contentLength() {\n          return this._stream._contentLength;\n        }\n\n        async read() {\n          if (this._queuedChunks.length > 0) {\n            const chunk = this._queuedChunks.shift();\n\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n        }\n\n        progressiveDone() {\n          if (this._done) {\n            return;\n          }\n\n          this._done = true;\n        }\n\n      }\n\n      class PDFDataTransportStreamRangeReader {\n        constructor(stream, begin, end) {\n          this._stream = stream;\n          this._begin = begin;\n          this._end = end;\n          this._queuedChunk = null;\n          this._requests = [];\n          this._done = false;\n          this.onProgress = null;\n        }\n\n        _enqueue(chunk) {\n          if (this._done) {\n            return;\n          }\n\n          if (this._requests.length === 0) {\n            this._queuedChunk = chunk;\n          } else {\n            const requestsCapability = this._requests.shift();\n\n            requestsCapability.resolve({\n              value: chunk,\n              done: false\n            });\n\n            this._requests.forEach(function (requestCapability) {\n              requestCapability.resolve({\n                value: undefined,\n                done: true\n              });\n            });\n\n            this._requests = [];\n          }\n\n          this._done = true;\n\n          this._stream._removeRangeReader(this);\n        }\n\n        get isStreamingSupported() {\n          return false;\n        }\n\n        async read() {\n          if (this._queuedChunk) {\n            const chunk = this._queuedChunk;\n            this._queuedChunk = null;\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          this._stream._removeRangeReader(this);\n        }\n\n      }\n      /***/\n\n    },\n    /* 18 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.WebGLContext = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      class WebGLContext {\n        constructor(_ref19) {\n          let {\n            enable = false\n          } = _ref19;\n          this._enabled = enable === true;\n        }\n\n        get isEnabled() {\n          let enabled = this._enabled;\n\n          if (enabled) {\n            enabled = WebGLUtils.tryInitGL();\n          }\n\n          return (0, _util.shadow)(this, \"isEnabled\", enabled);\n        }\n\n        composeSMask(_ref20) {\n          let {\n            layer,\n            mask,\n            properties\n          } = _ref20;\n          return WebGLUtils.composeSMask(layer, mask, properties);\n        }\n\n        drawFigures(_ref21) {\n          let {\n            width,\n            height,\n            backgroundColor,\n            figures,\n            context\n          } = _ref21;\n          return WebGLUtils.drawFigures(width, height, backgroundColor, figures, context);\n        }\n\n        clear() {\n          WebGLUtils.cleanup();\n        }\n\n      }\n\n      exports.WebGLContext = WebGLContext;\n\n      var WebGLUtils = function WebGLUtilsClosure() {\n        function loadShader(gl, code, shaderType) {\n          var shader = gl.createShader(shaderType);\n          gl.shaderSource(shader, code);\n          gl.compileShader(shader);\n          var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\n          if (!compiled) {\n            var errorMsg = gl.getShaderInfoLog(shader);\n            throw new Error(\"Error during shader compilation: \" + errorMsg);\n          }\n\n          return shader;\n        }\n\n        function createVertexShader(gl, code) {\n          return loadShader(gl, code, gl.VERTEX_SHADER);\n        }\n\n        function createFragmentShader(gl, code) {\n          return loadShader(gl, code, gl.FRAGMENT_SHADER);\n        }\n\n        function createProgram(gl, shaders) {\n          var program = gl.createProgram();\n\n          for (var i = 0, ii = shaders.length; i < ii; ++i) {\n            gl.attachShader(program, shaders[i]);\n          }\n\n          gl.linkProgram(program);\n          var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n\n          if (!linked) {\n            var errorMsg = gl.getProgramInfoLog(program);\n            throw new Error(\"Error during program linking: \" + errorMsg);\n          }\n\n          return program;\n        }\n\n        function createTexture(gl, image, textureId) {\n          gl.activeTexture(textureId);\n          var texture = gl.createTexture();\n          gl.bindTexture(gl.TEXTURE_2D, texture);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n          gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n          gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n          return texture;\n        }\n\n        var currentGL, currentCanvas;\n\n        function generateGL() {\n          if (currentGL) {\n            return;\n          }\n\n          currentCanvas = document.createElement(\"canvas\");\n          currentGL = currentCanvas.getContext(\"webgl\", {\n            premultipliedalpha: false\n          });\n        }\n\n        var smaskVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n        var smaskFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n        var smaskCache = null;\n\n        function initSmaskGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n          cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n          var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n          var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n          var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n          var texCoordBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0.0, 0.0, 1.0, 0.0, 0.0, 1.0, 0.0, 1.0, 1.0, 0.0, 1.0, 1.0]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(texCoordLocation);\n          gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.uniform1i(texLayerLocation, 0);\n          gl.uniform1i(texMaskLocation, 1);\n          smaskCache = cache;\n        }\n\n        function composeSMask(layer, mask, properties) {\n          var width = layer.width,\n              height = layer.height;\n\n          if (!smaskCache) {\n            initSmaskGL();\n          }\n\n          var cache = smaskCache,\n              canvas = cache.canvas,\n              gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n\n          if (properties.backdrop) {\n            gl.uniform4f(cache.resolutionLocation, properties.backdrop[0], properties.backdrop[1], properties.backdrop[2], 1);\n          } else {\n            gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n          }\n\n          gl.uniform1i(cache.subtypeLocation, properties.subtype === \"Luminosity\" ? 1 : 0);\n          var texture = createTexture(gl, layer, gl.TEXTURE0);\n          var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n          var buffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n          gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([0, 0, width, 0, 0, height, 0, height, width, 0, width, height]), gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          gl.clearColor(0, 0, 0, 0);\n          gl.enable(gl.BLEND);\n          gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          gl.drawArrays(gl.TRIANGLES, 0, 6);\n          gl.flush();\n          gl.deleteTexture(texture);\n          gl.deleteTexture(maskTexture);\n          gl.deleteBuffer(buffer);\n          return canvas;\n        }\n\n        var figuresVertexShaderCode = \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n        var figuresFragmentShaderCode = \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n        var figuresCache = null;\n\n        function initFiguresGL() {\n          var canvas, gl;\n          generateGL();\n          canvas = currentCanvas;\n          currentCanvas = null;\n          gl = currentGL;\n          currentGL = null;\n          var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n          var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n          var program = createProgram(gl, [vertexShader, fragmentShader]);\n          gl.useProgram(program);\n          var cache = {};\n          cache.gl = gl;\n          cache.canvas = canvas;\n          cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n          cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n          cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n          cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n          cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n          figuresCache = cache;\n        }\n\n        function drawFigures(width, height, backgroundColor, figures, context) {\n          if (!figuresCache) {\n            initFiguresGL();\n          }\n\n          var cache = figuresCache,\n              canvas = cache.canvas,\n              gl = cache.gl;\n          canvas.width = width;\n          canvas.height = height;\n          gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n          gl.uniform2f(cache.resolutionLocation, width, height);\n          var count = 0;\n          var i, ii, rows;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            switch (figures[i].type) {\n              case \"lattice\":\n                rows = figures[i].coords.length / figures[i].verticesPerRow | 0;\n                count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n                break;\n\n              case \"triangles\":\n                count += figures[i].coords.length;\n                break;\n            }\n          }\n\n          var coords = new Float32Array(count * 2);\n          var colors = new Uint8Array(count * 3);\n          var coordsMap = context.coords,\n              colorsMap = context.colors;\n          var pIndex = 0,\n              cIndex = 0;\n\n          for (i = 0, ii = figures.length; i < ii; i++) {\n            var figure = figures[i],\n                ps = figure.coords,\n                cs = figure.colors;\n\n            switch (figure.type) {\n              case \"lattice\":\n                var cols = figure.verticesPerRow;\n                rows = ps.length / cols | 0;\n\n                for (var row = 1; row < rows; row++) {\n                  var offset = row * cols + 1;\n\n                  for (var col = 1; col < cols; col++, offset++) {\n                    coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n                    coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n                    coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n                    coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n                    coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n                    coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n                    colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n                    colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n                    colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n                    colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n                    colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n                    colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n                    colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n                    colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n                    colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n                    coords[pIndex + 6] = coords[pIndex + 2];\n                    coords[pIndex + 7] = coords[pIndex + 3];\n                    coords[pIndex + 8] = coords[pIndex + 4];\n                    coords[pIndex + 9] = coords[pIndex + 5];\n                    coords[pIndex + 10] = coordsMap[ps[offset]];\n                    coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n                    colors[cIndex + 9] = colors[cIndex + 3];\n                    colors[cIndex + 10] = colors[cIndex + 4];\n                    colors[cIndex + 11] = colors[cIndex + 5];\n                    colors[cIndex + 12] = colors[cIndex + 6];\n                    colors[cIndex + 13] = colors[cIndex + 7];\n                    colors[cIndex + 14] = colors[cIndex + 8];\n                    colors[cIndex + 15] = colorsMap[cs[offset]];\n                    colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n                    colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n                    pIndex += 12;\n                    cIndex += 18;\n                  }\n                }\n\n                break;\n\n              case \"triangles\":\n                for (var j = 0, jj = ps.length; j < jj; j++) {\n                  coords[pIndex] = coordsMap[ps[j]];\n                  coords[pIndex + 1] = coordsMap[ps[j] + 1];\n                  colors[cIndex] = colorsMap[cs[j]];\n                  colors[cIndex + 1] = colorsMap[cs[j] + 1];\n                  colors[cIndex + 2] = colorsMap[cs[j] + 2];\n                  pIndex += 2;\n                  cIndex += 3;\n                }\n\n                break;\n            }\n          }\n\n          if (backgroundColor) {\n            gl.clearColor(backgroundColor[0] / 255, backgroundColor[1] / 255, backgroundColor[2] / 255, 1.0);\n          } else {\n            gl.clearColor(0, 0, 0, 0);\n          }\n\n          gl.clear(gl.COLOR_BUFFER_BIT);\n          var coordsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.positionLocation);\n          gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n          var colorsBuffer = gl.createBuffer();\n          gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n          gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n          gl.enableVertexAttribArray(cache.colorLocation);\n          gl.vertexAttribPointer(cache.colorLocation, 3, gl.UNSIGNED_BYTE, false, 0, 0);\n          gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n          gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n          gl.drawArrays(gl.TRIANGLES, 0, count);\n          gl.flush();\n          gl.deleteBuffer(coordsBuffer);\n          gl.deleteBuffer(colorsBuffer);\n          return canvas;\n        }\n\n        return {\n          tryInitGL() {\n            try {\n              generateGL();\n              return !!currentGL;\n            } catch (ex) {}\n\n            return false;\n          },\n\n          composeSMask,\n          drawFigures,\n\n          cleanup() {\n            if (smaskCache && smaskCache.canvas) {\n              smaskCache.canvas.width = 0;\n              smaskCache.canvas.height = 0;\n            }\n\n            if (figuresCache && figuresCache.canvas) {\n              figuresCache.canvas.width = 0;\n              figuresCache.canvas.height = 0;\n            }\n\n            smaskCache = null;\n            figuresCache = null;\n          }\n\n        };\n      }();\n      /***/\n\n    },\n    /* 19 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.AnnotationLayer = void 0;\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _annotation_storage = __w_pdfjs_require__(8);\n\n      class AnnotationElementFactory {\n        static create(parameters) {\n          const subtype = parameters.data.annotationType;\n\n          switch (subtype) {\n            case _util.AnnotationType.LINK:\n              return new LinkAnnotationElement(parameters);\n\n            case _util.AnnotationType.TEXT:\n              return new TextAnnotationElement(parameters);\n\n            case _util.AnnotationType.WIDGET:\n              const fieldType = parameters.data.fieldType;\n\n              switch (fieldType) {\n                case \"Tx\":\n                  return new TextWidgetAnnotationElement(parameters);\n\n                case \"Btn\":\n                  if (parameters.data.radioButton) {\n                    return new RadioButtonWidgetAnnotationElement(parameters);\n                  } else if (parameters.data.checkBox) {\n                    return new CheckboxWidgetAnnotationElement(parameters);\n                  }\n\n                  return new PushButtonWidgetAnnotationElement(parameters);\n\n                case \"Ch\":\n                  return new ChoiceWidgetAnnotationElement(parameters);\n              }\n\n              return new WidgetAnnotationElement(parameters);\n\n            case _util.AnnotationType.POPUP:\n              return new PopupAnnotationElement(parameters);\n\n            case _util.AnnotationType.FREETEXT:\n              return new FreeTextAnnotationElement(parameters);\n\n            case _util.AnnotationType.LINE:\n              return new LineAnnotationElement(parameters);\n\n            case _util.AnnotationType.SQUARE:\n              return new SquareAnnotationElement(parameters);\n\n            case _util.AnnotationType.CIRCLE:\n              return new CircleAnnotationElement(parameters);\n\n            case _util.AnnotationType.POLYLINE:\n              return new PolylineAnnotationElement(parameters);\n\n            case _util.AnnotationType.CARET:\n              return new CaretAnnotationElement(parameters);\n\n            case _util.AnnotationType.INK:\n              return new InkAnnotationElement(parameters);\n\n            case _util.AnnotationType.POLYGON:\n              return new PolygonAnnotationElement(parameters);\n\n            case _util.AnnotationType.HIGHLIGHT:\n              return new HighlightAnnotationElement(parameters);\n\n            case _util.AnnotationType.UNDERLINE:\n              return new UnderlineAnnotationElement(parameters);\n\n            case _util.AnnotationType.SQUIGGLY:\n              return new SquigglyAnnotationElement(parameters);\n\n            case _util.AnnotationType.STRIKEOUT:\n              return new StrikeOutAnnotationElement(parameters);\n\n            case _util.AnnotationType.STAMP:\n              return new StampAnnotationElement(parameters);\n\n            case _util.AnnotationType.FILEATTACHMENT:\n              return new FileAttachmentAnnotationElement(parameters);\n\n            default:\n              return new AnnotationElement(parameters);\n          }\n        }\n\n      }\n\n      class AnnotationElement {\n        constructor(parameters) {\n          let isRenderable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n          let ignoreBorder = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n          this.isRenderable = isRenderable;\n          this.data = parameters.data;\n          this.layer = parameters.layer;\n          this.page = parameters.page;\n          this.viewport = parameters.viewport;\n          this.linkService = parameters.linkService;\n          this.downloadManager = parameters.downloadManager;\n          this.imageResourcesPath = parameters.imageResourcesPath;\n          this.renderInteractiveForms = parameters.renderInteractiveForms;\n          this.svgFactory = parameters.svgFactory;\n          this.annotationStorage = parameters.annotationStorage;\n\n          if (isRenderable) {\n            this.container = this._createContainer(ignoreBorder);\n          }\n        }\n\n        _createContainer() {\n          let ignoreBorder = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n          const data = this.data,\n                page = this.page,\n                viewport = this.viewport;\n          const container = document.createElement(\"section\");\n          let width = data.rect[2] - data.rect[0];\n          let height = data.rect[3] - data.rect[1];\n          container.setAttribute(\"data-annotation-id\", data.id);\n\n          const rect = _util.Util.normalizeRect([data.rect[0], page.view[3] - data.rect[1] + page.view[1], data.rect[2], page.view[3] - data.rect[3] + page.view[1]]);\n\n          container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n          container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n          if (!ignoreBorder && data.borderStyle.width > 0) {\n            container.style.borderWidth = `${data.borderStyle.width}px`;\n\n            if (data.borderStyle.style !== _util.AnnotationBorderStyleType.UNDERLINE) {\n              width = width - 2 * data.borderStyle.width;\n              height = height - 2 * data.borderStyle.width;\n            }\n\n            const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n            const verticalRadius = data.borderStyle.verticalCornerRadius;\n\n            if (horizontalRadius > 0 || verticalRadius > 0) {\n              const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n              container.style.borderRadius = radius;\n            }\n\n            switch (data.borderStyle.style) {\n              case _util.AnnotationBorderStyleType.SOLID:\n                container.style.borderStyle = \"solid\";\n                break;\n\n              case _util.AnnotationBorderStyleType.DASHED:\n                container.style.borderStyle = \"dashed\";\n                break;\n\n              case _util.AnnotationBorderStyleType.BEVELED:\n                (0, _util.warn)(\"Unimplemented border style: beveled\");\n                break;\n\n              case _util.AnnotationBorderStyleType.INSET:\n                (0, _util.warn)(\"Unimplemented border style: inset\");\n                break;\n\n              case _util.AnnotationBorderStyleType.UNDERLINE:\n                container.style.borderBottomStyle = \"solid\";\n                break;\n\n              default:\n                break;\n            }\n\n            if (data.color) {\n              container.style.borderColor = _util.Util.makeCssRgb(data.color[0] | 0, data.color[1] | 0, data.color[2] | 0);\n            } else {\n              container.style.borderWidth = 0;\n            }\n          }\n\n          container.style.left = `${rect[0]}px`;\n          container.style.top = `${rect[1]}px`;\n          container.style.width = `${width}px`;\n          container.style.height = `${height}px`;\n          return container;\n        }\n\n        _createPopup(container, trigger, data) {\n          if (!trigger) {\n            trigger = document.createElement(\"div\");\n            trigger.style.height = container.style.height;\n            trigger.style.width = container.style.width;\n            container.appendChild(trigger);\n          }\n\n          const popupElement = new PopupElement({\n            container,\n            trigger,\n            color: data.color,\n            title: data.title,\n            modificationDate: data.modificationDate,\n            contents: data.contents,\n            hideWrapper: true\n          });\n          const popup = popupElement.render();\n          popup.style.left = container.style.width;\n          container.appendChild(popup);\n        }\n\n        render() {\n          (0, _util.unreachable)(\"Abstract method `AnnotationElement.render` called\");\n        }\n\n      }\n\n      class LinkAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.url || parameters.data.dest || parameters.data.action);\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          this.container.className = \"linkAnnotation\";\n          const {\n            data,\n            linkService\n          } = this;\n          const link = document.createElement(\"a\");\n\n          if (data.url) {\n            (0, _display_utils.addLinkAttributes)(link, {\n              url: data.url,\n              target: data.newWindow ? _display_utils.LinkTarget.BLANK : linkService.externalLinkTarget,\n              rel: linkService.externalLinkRel,\n              enabled: linkService.externalLinkEnabled\n            });\n          } else if (data.action) {\n            this._bindNamedAction(link, data.action);\n          } else {\n            this._bindLink(link, data.dest);\n          }\n\n          this.container.appendChild(link);\n          return this.container;\n        }\n\n        _bindLink(link, destination) {\n          link.href = this.linkService.getDestinationHash(destination);\n\n          link.onclick = () => {\n            if (destination) {\n              this.linkService.navigateTo(destination);\n            }\n\n            return false;\n          };\n\n          if (destination) {\n            link.className = \"internalLink\";\n          }\n        }\n\n        _bindNamedAction(link, action) {\n          link.href = this.linkService.getAnchorUrl(\"\");\n\n          link.onclick = () => {\n            this.linkService.executeNamedAction(action);\n            return false;\n          };\n\n          link.className = \"internalLink\";\n        }\n\n      }\n\n      class TextAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          this.container.className = \"textAnnotation\";\n          const image = document.createElement(\"img\");\n          image.style.height = this.container.style.height;\n          image.style.width = this.container.style.width;\n          image.src = this.imageResourcesPath + \"annotation-\" + this.data.name.toLowerCase() + \".svg\";\n          image.alt = \"[{{type}} Annotation]\";\n          image.dataset.l10nId = \"text_annotation_type\";\n          image.dataset.l10nArgs = JSON.stringify({\n            type: this.data.name\n          });\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, image, this.data);\n          }\n\n          this.container.appendChild(image);\n          return this.container;\n        }\n\n      }\n\n      class WidgetAnnotationElement extends AnnotationElement {\n        render() {\n          return this.container;\n        }\n\n      }\n\n      class TextWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          const isRenderable = parameters.renderInteractiveForms || !parameters.data.hasAppearance && !!parameters.data.fieldValue;\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n          const storage = this.annotationStorage;\n          const id = this.data.id;\n          this.container.className = \"textWidgetAnnotation\";\n          let element = null;\n\n          if (this.renderInteractiveForms) {\n            const textContent = storage.getOrCreateValue(id, this.data.fieldValue);\n\n            if (this.data.multiLine) {\n              element = document.createElement(\"textarea\");\n              element.textContent = textContent;\n            } else {\n              element = document.createElement(\"input\");\n              element.type = \"text\";\n              element.setAttribute(\"value\", textContent);\n            }\n\n            element.addEventListener(\"input\", function (event) {\n              storage.setValue(id, event.target.value);\n            });\n            element.disabled = this.data.readOnly;\n            element.name = this.data.fieldName;\n\n            if (this.data.maxLen !== null) {\n              element.maxLength = this.data.maxLen;\n            }\n\n            if (this.data.comb) {\n              const fieldWidth = this.data.rect[2] - this.data.rect[0];\n              const combWidth = fieldWidth / this.data.maxLen;\n              element.classList.add(\"comb\");\n              element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n            }\n          } else {\n            element = document.createElement(\"div\");\n            element.textContent = this.data.fieldValue;\n            element.style.verticalAlign = \"middle\";\n            element.style.display = \"table-cell\";\n            let font = null;\n\n            if (this.data.fontRefName && this.page.commonObjs.has(this.data.fontRefName)) {\n              font = this.page.commonObjs.get(this.data.fontRefName);\n            }\n\n            this._setTextStyle(element, font);\n          }\n\n          if (this.data.textAlignment !== null) {\n            element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n          }\n\n          this.container.appendChild(element);\n          return this.container;\n        }\n\n        _setTextStyle(element, font) {\n          const style = element.style;\n          style.fontSize = `${this.data.fontSize}px`;\n          style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n          if (!font) {\n            return;\n          }\n\n          let bold = \"normal\";\n\n          if (font.black) {\n            bold = \"900\";\n          } else if (font.bold) {\n            bold = \"bold\";\n          }\n\n          style.fontWeight = bold;\n          style.fontStyle = font.italic ? \"italic\" : \"normal\";\n          const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n          const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n          style.fontFamily = fontFamily + fallbackName;\n        }\n\n      }\n\n      class CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, parameters.renderInteractiveForms);\n        }\n\n        render() {\n          const storage = this.annotationStorage;\n          const data = this.data;\n          const id = data.id;\n          const value = storage.getOrCreateValue(id, data.fieldValue && data.fieldValue !== \"Off\");\n          this.container.className = \"buttonWidgetAnnotation checkBox\";\n          const element = document.createElement(\"input\");\n          element.disabled = data.readOnly;\n          element.type = \"checkbox\";\n          element.name = this.data.fieldName;\n\n          if (value) {\n            element.setAttribute(\"checked\", true);\n          }\n\n          element.addEventListener(\"change\", function (event) {\n            storage.setValue(id, event.target.checked);\n          });\n          this.container.appendChild(element);\n          return this.container;\n        }\n\n      }\n\n      class RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, parameters.renderInteractiveForms);\n        }\n\n        render() {\n          this.container.className = \"buttonWidgetAnnotation radioButton\";\n          const storage = this.annotationStorage;\n          const data = this.data;\n          const id = data.id;\n          const value = storage.getOrCreateValue(id, data.fieldValue === data.buttonValue);\n          const element = document.createElement(\"input\");\n          element.disabled = data.readOnly;\n          element.type = \"radio\";\n          element.name = data.fieldName;\n\n          if (value) {\n            element.setAttribute(\"checked\", true);\n          }\n\n          element.addEventListener(\"change\", function (event) {\n            const name = event.target.name;\n\n            for (const radio of document.getElementsByName(name)) {\n              if (radio !== event.target) {\n                storage.setValue(radio.parentNode.getAttribute(\"data-annotation-id\"), false);\n              }\n            }\n\n            storage.setValue(id, event.target.checked);\n          });\n          this.container.appendChild(element);\n          return this.container;\n        }\n\n      }\n\n      class PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n        render() {\n          const container = super.render();\n          container.className = \"buttonWidgetAnnotation pushButton\";\n          return container;\n        }\n\n      }\n\n      class ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n        constructor(parameters) {\n          super(parameters, parameters.renderInteractiveForms);\n        }\n\n        render() {\n          this.container.className = \"choiceWidgetAnnotation\";\n          const storage = this.annotationStorage;\n          const id = this.data.id;\n          storage.getOrCreateValue(id, this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null);\n          const selectElement = document.createElement(\"select\");\n          selectElement.disabled = this.data.readOnly;\n          selectElement.name = this.data.fieldName;\n\n          if (!this.data.combo) {\n            selectElement.size = this.data.options.length;\n\n            if (this.data.multiSelect) {\n              selectElement.multiple = true;\n            }\n          }\n\n          for (const option of this.data.options) {\n            const optionElement = document.createElement(\"option\");\n            optionElement.textContent = option.displayValue;\n            optionElement.value = option.exportValue;\n\n            if (this.data.fieldValue.includes(option.exportValue)) {\n              optionElement.setAttribute(\"selected\", true);\n            }\n\n            selectElement.appendChild(optionElement);\n          }\n\n          selectElement.addEventListener(\"input\", function (event) {\n            const options = event.target.options;\n            const value = options[options.selectedIndex].value;\n            storage.setValue(id, value);\n          });\n          this.container.appendChild(selectElement);\n          return this.container;\n        }\n\n      }\n\n      class PopupAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable);\n        }\n\n        render() {\n          const IGNORE_TYPES = [\"Line\", \"Square\", \"Circle\", \"PolyLine\", \"Polygon\", \"Ink\"];\n          this.container.className = \"popupAnnotation\";\n\n          if (IGNORE_TYPES.includes(this.data.parentType)) {\n            return this.container;\n          }\n\n          const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n          const parentElement = this.layer.querySelector(selector);\n\n          if (!parentElement) {\n            return this.container;\n          }\n\n          const popup = new PopupElement({\n            container: this.container,\n            trigger: parentElement,\n            color: this.data.color,\n            title: this.data.title,\n            modificationDate: this.data.modificationDate,\n            contents: this.data.contents\n          });\n          const parentLeft = parseFloat(parentElement.style.left);\n          const parentWidth = parseFloat(parentElement.style.width);\n          this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${parentElement.style.top}`;\n          this.container.style.left = `${parentLeft + parentWidth}px`;\n          this.container.appendChild(popup.render());\n          return this.container;\n        }\n\n      }\n\n      class PopupElement {\n        constructor(parameters) {\n          this.container = parameters.container;\n          this.trigger = parameters.trigger;\n          this.color = parameters.color;\n          this.title = parameters.title;\n          this.modificationDate = parameters.modificationDate;\n          this.contents = parameters.contents;\n          this.hideWrapper = parameters.hideWrapper || false;\n          this.pinned = false;\n        }\n\n        render() {\n          const BACKGROUND_ENLIGHT = 0.7;\n          const wrapper = document.createElement(\"div\");\n          wrapper.className = \"popupWrapper\";\n          this.hideElement = this.hideWrapper ? wrapper : this.container;\n          this.hideElement.setAttribute(\"hidden\", true);\n          const popup = document.createElement(\"div\");\n          popup.className = \"popup\";\n          const color = this.color;\n\n          if (color) {\n            const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n            const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n            const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n            popup.style.backgroundColor = _util.Util.makeCssRgb(r | 0, g | 0, b | 0);\n          }\n\n          const title = document.createElement(\"h1\");\n          title.textContent = this.title;\n          popup.appendChild(title);\n\n          const dateObject = _display_utils.PDFDateString.toDateObject(this.modificationDate);\n\n          if (dateObject) {\n            const modificationDate = document.createElement(\"span\");\n            modificationDate.textContent = \"{{date}}, {{time}}\";\n            modificationDate.dataset.l10nId = \"annotation_date_string\";\n            modificationDate.dataset.l10nArgs = JSON.stringify({\n              date: dateObject.toLocaleDateString(),\n              time: dateObject.toLocaleTimeString()\n            });\n            popup.appendChild(modificationDate);\n          }\n\n          const contents = this._formatContents(this.contents);\n\n          popup.appendChild(contents);\n          this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n          this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n          this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n          popup.addEventListener(\"click\", this._hide.bind(this, true));\n          wrapper.appendChild(popup);\n          return wrapper;\n        }\n\n        _formatContents(contents) {\n          const p = document.createElement(\"p\");\n          const lines = contents.split(/(?:\\r\\n?|\\n)/);\n\n          for (let i = 0, ii = lines.length; i < ii; ++i) {\n            const line = lines[i];\n            p.appendChild(document.createTextNode(line));\n\n            if (i < ii - 1) {\n              p.appendChild(document.createElement(\"br\"));\n            }\n          }\n\n          return p;\n        }\n\n        _toggle() {\n          if (this.pinned) {\n            this._hide(true);\n          } else {\n            this._show(true);\n          }\n        }\n\n        _show() {\n          let pin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n          if (pin) {\n            this.pinned = true;\n          }\n\n          if (this.hideElement.hasAttribute(\"hidden\")) {\n            this.hideElement.removeAttribute(\"hidden\");\n            this.container.style.zIndex += 1;\n          }\n        }\n\n        _hide() {\n          let unpin = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n\n          if (unpin) {\n            this.pinned = false;\n          }\n\n          if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n            this.hideElement.setAttribute(\"hidden\", true);\n            this.container.style.zIndex -= 1;\n          }\n        }\n\n      }\n\n      class FreeTextAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"freeTextAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class LineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"lineAnnotation\";\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          const line = this.svgFactory.createElement(\"svg:line\");\n          line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n          line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n          line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n          line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n          line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          line.setAttribute(\"stroke\", \"transparent\");\n          svg.appendChild(line);\n          this.container.append(svg);\n\n          this._createPopup(this.container, line, data);\n\n          return this.container;\n        }\n\n      }\n\n      class SquareAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"squareAnnotation\";\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          const borderWidth = data.borderStyle.width;\n          const square = this.svgFactory.createElement(\"svg:rect\");\n          square.setAttribute(\"x\", borderWidth / 2);\n          square.setAttribute(\"y\", borderWidth / 2);\n          square.setAttribute(\"width\", width - borderWidth);\n          square.setAttribute(\"height\", height - borderWidth);\n          square.setAttribute(\"stroke-width\", borderWidth || 1);\n          square.setAttribute(\"stroke\", \"transparent\");\n          square.setAttribute(\"fill\", \"none\");\n          svg.appendChild(square);\n          this.container.append(svg);\n\n          this._createPopup(this.container, square, data);\n\n          return this.container;\n        }\n\n      }\n\n      class CircleAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"circleAnnotation\";\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          const borderWidth = data.borderStyle.width;\n          const circle = this.svgFactory.createElement(\"svg:ellipse\");\n          circle.setAttribute(\"cx\", width / 2);\n          circle.setAttribute(\"cy\", height / 2);\n          circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n          circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n          circle.setAttribute(\"stroke-width\", borderWidth || 1);\n          circle.setAttribute(\"stroke\", \"transparent\");\n          circle.setAttribute(\"fill\", \"none\");\n          svg.appendChild(circle);\n          this.container.append(svg);\n\n          this._createPopup(this.container, circle, data);\n\n          return this.container;\n        }\n\n      }\n\n      class PolylineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n          this.containerClassName = \"polylineAnnotation\";\n          this.svgElementName = \"svg:polyline\";\n        }\n\n        render() {\n          this.container.className = this.containerClassName;\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n          let points = [];\n\n          for (const coordinate of data.vertices) {\n            const x = coordinate.x - data.rect[0];\n            const y = data.rect[3] - coordinate.y;\n            points.push(x + \",\" + y);\n          }\n\n          points = points.join(\" \");\n          const polyline = this.svgFactory.createElement(this.svgElementName);\n          polyline.setAttribute(\"points\", points);\n          polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n          polyline.setAttribute(\"stroke\", \"transparent\");\n          polyline.setAttribute(\"fill\", \"none\");\n          svg.appendChild(polyline);\n          this.container.append(svg);\n\n          this._createPopup(this.container, polyline, data);\n\n          return this.container;\n        }\n\n      }\n\n      class PolygonAnnotationElement extends PolylineAnnotationElement {\n        constructor(parameters) {\n          super(parameters);\n          this.containerClassName = \"polygonAnnotation\";\n          this.svgElementName = \"svg:polygon\";\n        }\n\n      }\n\n      class CaretAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"caretAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class InkAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n          this.containerClassName = \"inkAnnotation\";\n          this.svgElementName = \"svg:polyline\";\n        }\n\n        render() {\n          this.container.className = this.containerClassName;\n          const data = this.data;\n          const width = data.rect[2] - data.rect[0];\n          const height = data.rect[3] - data.rect[1];\n          const svg = this.svgFactory.create(width, height);\n\n          for (const inkList of data.inkLists) {\n            let points = [];\n\n            for (const coordinate of inkList) {\n              const x = coordinate.x - data.rect[0];\n              const y = data.rect[3] - coordinate.y;\n              points.push(`${x},${y}`);\n            }\n\n            points = points.join(\" \");\n            const polyline = this.svgFactory.createElement(this.svgElementName);\n            polyline.setAttribute(\"points\", points);\n            polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n            polyline.setAttribute(\"stroke\", \"transparent\");\n            polyline.setAttribute(\"fill\", \"none\");\n\n            this._createPopup(this.container, polyline, data);\n\n            svg.appendChild(polyline);\n          }\n\n          this.container.append(svg);\n          return this.container;\n        }\n\n      }\n\n      class HighlightAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"highlightAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class UnderlineAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"underlineAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class SquigglyAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"squigglyAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class StrikeOutAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"strikeoutAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class StampAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          const isRenderable = !!(parameters.data.hasPopup || parameters.data.title || parameters.data.contents);\n          super(parameters, isRenderable, true);\n        }\n\n        render() {\n          this.container.className = \"stampAnnotation\";\n\n          if (!this.data.hasPopup) {\n            this._createPopup(this.container, null, this.data);\n          }\n\n          return this.container;\n        }\n\n      }\n\n      class FileAttachmentAnnotationElement extends AnnotationElement {\n        constructor(parameters) {\n          super(parameters, true);\n          const {\n            filename,\n            content\n          } = this.data.file;\n          this.filename = (0, _display_utils.getFilenameFromUrl)(filename);\n          this.content = content;\n\n          if (this.linkService.eventBus) {\n            this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n              source: this,\n              id: (0, _util.stringToPDFString)(filename),\n              filename,\n              content\n            });\n          }\n        }\n\n        render() {\n          this.container.className = \"fileAttachmentAnnotation\";\n          const trigger = document.createElement(\"div\");\n          trigger.style.height = this.container.style.height;\n          trigger.style.width = this.container.style.width;\n          trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n          if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n            this._createPopup(this.container, trigger, this.data);\n          }\n\n          this.container.appendChild(trigger);\n          return this.container;\n        }\n\n        _download() {\n          if (!this.downloadManager) {\n            (0, _util.warn)(\"Download cannot be started due to unavailable download manager\");\n            return;\n          }\n\n          this.downloadManager.downloadData(this.content, this.filename, \"\");\n        }\n\n      }\n\n      class AnnotationLayer {\n        static render(parameters) {\n          const sortedAnnotations = [],\n                popupAnnotations = [];\n\n          for (const data of parameters.annotations) {\n            if (!data) {\n              continue;\n            }\n\n            if (data.annotationType === _util.AnnotationType.POPUP) {\n              popupAnnotations.push(data);\n              continue;\n            }\n\n            sortedAnnotations.push(data);\n          }\n\n          if (popupAnnotations.length) {\n            sortedAnnotations.push(...popupAnnotations);\n          }\n\n          for (const data of sortedAnnotations) {\n            const element = AnnotationElementFactory.create({\n              data,\n              layer: parameters.div,\n              page: parameters.page,\n              viewport: parameters.viewport,\n              linkService: parameters.linkService,\n              downloadManager: parameters.downloadManager,\n              imageResourcesPath: parameters.imageResourcesPath || \"\",\n              renderInteractiveForms: typeof parameters.renderInteractiveForms === \"boolean\" ? parameters.renderInteractiveForms : true,\n              svgFactory: new _display_utils.DOMSVGFactory(),\n              annotationStorage: parameters.annotationStorage || new _annotation_storage.AnnotationStorage()\n            });\n\n            if (element.isRenderable) {\n              parameters.div.appendChild(element.render());\n            }\n          }\n        }\n\n        static update(parameters) {\n          for (const data of parameters.annotations) {\n            const element = parameters.div.querySelector(`[data-annotation-id=\"${data.id}\"]`);\n\n            if (element) {\n              element.style.transform = `matrix(${parameters.viewport.transform.join(\",\")})`;\n            }\n          }\n\n          parameters.div.removeAttribute(\"hidden\");\n        }\n\n      }\n\n      exports.AnnotationLayer = AnnotationLayer;\n      /***/\n    },\n    /* 20 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.renderTextLayer = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var renderTextLayer = function renderTextLayerClosure() {\n        var MAX_TEXT_DIVS_TO_RENDER = 100000;\n        var NonWhitespaceRegexp = /\\S/;\n\n        function isAllWhitespace(str) {\n          return !NonWhitespaceRegexp.test(str);\n        }\n\n        function appendText(task, geom, styles) {\n          var textDiv = document.createElement(\"span\");\n          var textDivProperties = {\n            angle: 0,\n            canvasWidth: 0,\n            isWhitespace: false,\n            originalTransform: null,\n            paddingBottom: 0,\n            paddingLeft: 0,\n            paddingRight: 0,\n            paddingTop: 0,\n            scale: 1\n          };\n\n          task._textDivs.push(textDiv);\n\n          if (isAllWhitespace(geom.str)) {\n            textDivProperties.isWhitespace = true;\n\n            task._textDivProperties.set(textDiv, textDivProperties);\n\n            return;\n          }\n\n          var tx = _util.Util.transform(task._viewport.transform, geom.transform);\n\n          var angle = Math.atan2(tx[1], tx[0]);\n          var style = styles[geom.fontName];\n\n          if (style.vertical) {\n            angle += Math.PI / 2;\n          }\n\n          var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n          var fontAscent = fontHeight;\n\n          if (style.ascent) {\n            fontAscent = style.ascent * fontAscent;\n          } else if (style.descent) {\n            fontAscent = (1 + style.descent) * fontAscent;\n          }\n\n          let left, top;\n\n          if (angle === 0) {\n            left = tx[4];\n            top = tx[5] - fontAscent;\n          } else {\n            left = tx[4] + fontAscent * Math.sin(angle);\n            top = tx[5] - fontAscent * Math.cos(angle);\n          }\n\n          textDiv.style.left = `${left}px`;\n          textDiv.style.top = `${top}px`;\n          textDiv.style.fontSize = `${fontHeight}px`;\n          textDiv.style.fontFamily = style.fontFamily;\n          textDiv.textContent = geom.str;\n\n          if (task._fontInspectorEnabled) {\n            textDiv.dataset.fontName = geom.fontName;\n          }\n\n          if (angle !== 0) {\n            textDivProperties.angle = angle * (180 / Math.PI);\n          }\n\n          let shouldScaleText = false;\n\n          if (geom.str.length > 1) {\n            shouldScaleText = true;\n          } else if (geom.transform[0] !== geom.transform[3]) {\n            const absScaleX = Math.abs(geom.transform[0]),\n                  absScaleY = Math.abs(geom.transform[3]);\n\n            if (absScaleX !== absScaleY && Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5) {\n              shouldScaleText = true;\n            }\n          }\n\n          if (shouldScaleText) {\n            if (style.vertical) {\n              textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n            } else {\n              textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n            }\n          }\n\n          task._textDivProperties.set(textDiv, textDivProperties);\n\n          if (task._textContentStream) {\n            task._layoutText(textDiv);\n          }\n\n          if (task._enhanceTextSelection) {\n            var angleCos = 1,\n                angleSin = 0;\n\n            if (angle !== 0) {\n              angleCos = Math.cos(angle);\n              angleSin = Math.sin(angle);\n            }\n\n            var divWidth = (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n            var divHeight = fontHeight;\n            var m, b;\n\n            if (angle !== 0) {\n              m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n              b = _util.Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n            } else {\n              b = [left, top, left + divWidth, top + divHeight];\n            }\n\n            task._bounds.push({\n              left: b[0],\n              top: b[1],\n              right: b[2],\n              bottom: b[3],\n              div: textDiv,\n              size: [divWidth, divHeight],\n              m\n            });\n          }\n        }\n\n        function render(task) {\n          if (task._canceled) {\n            return;\n          }\n\n          var textDivs = task._textDivs;\n          var capability = task._capability;\n          var textDivsLength = textDivs.length;\n\n          if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n            task._renderingDone = true;\n            capability.resolve();\n            return;\n          }\n\n          if (!task._textContentStream) {\n            for (var i = 0; i < textDivsLength; i++) {\n              task._layoutText(textDivs[i]);\n            }\n          }\n\n          task._renderingDone = true;\n          capability.resolve();\n        }\n\n        function findPositiveMin(ts, offset, count) {\n          let result = 0;\n\n          for (let i = 0; i < count; i++) {\n            const t = ts[offset++];\n\n            if (t > 0) {\n              result = result ? Math.min(t, result) : t;\n            }\n          }\n\n          return result;\n        }\n\n        function expand(task) {\n          var bounds = task._bounds;\n          var viewport = task._viewport;\n          var expanded = expandBounds(viewport.width, viewport.height, bounds);\n\n          for (var i = 0; i < expanded.length; i++) {\n            var div = bounds[i].div;\n\n            var divProperties = task._textDivProperties.get(div);\n\n            if (divProperties.angle === 0) {\n              divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n              divProperties.paddingTop = bounds[i].top - expanded[i].top;\n              divProperties.paddingRight = expanded[i].right - bounds[i].right;\n              divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n\n              task._textDivProperties.set(div, divProperties);\n\n              continue;\n            }\n\n            var e = expanded[i],\n                b = bounds[i];\n            var m = b.m,\n                c = m[0],\n                s = m[1];\n            var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n            var ts = new Float64Array(64);\n            points.forEach(function (p, j) {\n              var t = _util.Util.applyTransform(p, m);\n\n              ts[j + 0] = c && (e.left - t[0]) / c;\n              ts[j + 4] = s && (e.top - t[1]) / s;\n              ts[j + 8] = c && (e.right - t[0]) / c;\n              ts[j + 12] = s && (e.bottom - t[1]) / s;\n              ts[j + 16] = s && (e.left - t[0]) / -s;\n              ts[j + 20] = c && (e.top - t[1]) / c;\n              ts[j + 24] = s && (e.right - t[0]) / -s;\n              ts[j + 28] = c && (e.bottom - t[1]) / c;\n              ts[j + 32] = c && (e.left - t[0]) / -c;\n              ts[j + 36] = s && (e.top - t[1]) / -s;\n              ts[j + 40] = c && (e.right - t[0]) / -c;\n              ts[j + 44] = s && (e.bottom - t[1]) / -s;\n              ts[j + 48] = s && (e.left - t[0]) / s;\n              ts[j + 52] = c && (e.top - t[1]) / -c;\n              ts[j + 56] = s && (e.right - t[0]) / s;\n              ts[j + 60] = c && (e.bottom - t[1]) / -c;\n            });\n            var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n            divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n            divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n            divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n            divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n\n            task._textDivProperties.set(div, divProperties);\n          }\n        }\n\n        function expandBounds(width, height, boxes) {\n          var bounds = boxes.map(function (box, i) {\n            return {\n              x1: box.left,\n              y1: box.top,\n              x2: box.right,\n              y2: box.bottom,\n              index: i,\n              x1New: undefined,\n              x2New: undefined\n            };\n          });\n          expandBoundsLTR(width, bounds);\n          var expanded = new Array(boxes.length);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i] = {\n              left: b.x1New,\n              top: 0,\n              right: b.x2New,\n              bottom: 0\n            };\n          });\n          boxes.map(function (box, i) {\n            var e = expanded[i],\n                b = bounds[i];\n            b.x1 = box.top;\n            b.y1 = width - e.right;\n            b.x2 = box.bottom;\n            b.y2 = width - e.left;\n            b.index = i;\n            b.x1New = undefined;\n            b.x2New = undefined;\n          });\n          expandBoundsLTR(height, bounds);\n          bounds.forEach(function (b) {\n            var i = b.index;\n            expanded[i].top = b.x1New;\n            expanded[i].bottom = b.x2New;\n          });\n          return expanded;\n        }\n\n        function expandBoundsLTR(width, bounds) {\n          bounds.sort(function (a, b) {\n            return a.x1 - b.x1 || a.index - b.index;\n          });\n          var fakeBoundary = {\n            x1: -Infinity,\n            y1: -Infinity,\n            x2: 0,\n            y2: Infinity,\n            index: -1,\n            x1New: 0,\n            x2New: 0\n          };\n          var horizon = [{\n            start: -Infinity,\n            end: Infinity,\n            boundary: fakeBoundary\n          }];\n          bounds.forEach(function (boundary) {\n            var i = 0;\n\n            while (i < horizon.length && horizon[i].end <= boundary.y1) {\n              i++;\n            }\n\n            var j = horizon.length - 1;\n\n            while (j >= 0 && horizon[j].start >= boundary.y2) {\n              j--;\n            }\n\n            var horizonPart, affectedBoundary;\n            var q,\n                k,\n                maxXNew = -Infinity;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var xNew;\n\n              if (affectedBoundary.x2 > boundary.x1) {\n                xNew = affectedBoundary.index > boundary.index ? affectedBoundary.x1New : boundary.x1;\n              } else if (affectedBoundary.x2New === undefined) {\n                xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n              } else {\n                xNew = affectedBoundary.x2New;\n              }\n\n              if (xNew > maxXNew) {\n                maxXNew = xNew;\n              }\n            }\n\n            boundary.x1New = maxXNew;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New === undefined) {\n                if (affectedBoundary.x2 > boundary.x1) {\n                  if (affectedBoundary.index > boundary.index) {\n                    affectedBoundary.x2New = affectedBoundary.x2;\n                  }\n                } else {\n                  affectedBoundary.x2New = maxXNew;\n                }\n              } else if (affectedBoundary.x2New > maxXNew) {\n                affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n              }\n            }\n\n            var changedHorizon = [],\n                lastBoundary = null;\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n              var useBoundary = affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n\n              if (lastBoundary === useBoundary) {\n                changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n              } else {\n                changedHorizon.push({\n                  start: horizonPart.start,\n                  end: horizonPart.end,\n                  boundary: useBoundary\n                });\n                lastBoundary = useBoundary;\n              }\n            }\n\n            if (horizon[i].start < boundary.y1) {\n              changedHorizon[0].start = boundary.y1;\n              changedHorizon.unshift({\n                start: horizon[i].start,\n                end: boundary.y1,\n                boundary: horizon[i].boundary\n              });\n            }\n\n            if (boundary.y2 < horizon[j].end) {\n              changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n              changedHorizon.push({\n                start: boundary.y2,\n                end: horizon[j].end,\n                boundary: horizon[j].boundary\n              });\n            }\n\n            for (q = i; q <= j; q++) {\n              horizonPart = horizon[q];\n              affectedBoundary = horizonPart.boundary;\n\n              if (affectedBoundary.x2New !== undefined) {\n                continue;\n              }\n\n              var used = false;\n\n              for (k = i - 1; !used && k >= 0 && horizon[k].start >= affectedBoundary.y1; k--) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = j + 1; !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2; k++) {\n                used = horizon[k].boundary === affectedBoundary;\n              }\n\n              for (k = 0; !used && k < changedHorizon.length; k++) {\n                used = changedHorizon[k].boundary === affectedBoundary;\n              }\n\n              if (!used) {\n                affectedBoundary.x2New = maxXNew;\n              }\n            }\n\n            Array.prototype.splice.apply(horizon, [i, j - i + 1].concat(changedHorizon));\n          });\n          horizon.forEach(function (horizonPart) {\n            var affectedBoundary = horizonPart.boundary;\n\n            if (affectedBoundary.x2New === undefined) {\n              affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n            }\n          });\n        }\n\n        function TextLayerRenderTask(_ref22) {\n          let {\n            textContent,\n            textContentStream,\n            container,\n            viewport,\n            textDivs,\n            textContentItemsStr,\n            enhanceTextSelection\n          } = _ref22;\n          this._textContent = textContent;\n          this._textContentStream = textContentStream;\n          this._container = container;\n          this._document = container.ownerDocument;\n          this._viewport = viewport;\n          this._textDivs = textDivs || [];\n          this._textContentItemsStr = textContentItemsStr || [];\n          this._enhanceTextSelection = !!enhanceTextSelection;\n          this._fontInspectorEnabled = !!(globalThis.FontInspector && globalThis.FontInspector.enabled);\n          this._reader = null;\n          this._layoutTextLastFontSize = null;\n          this._layoutTextLastFontFamily = null;\n          this._layoutTextCtx = null;\n          this._textDivProperties = new WeakMap();\n          this._renderingDone = false;\n          this._canceled = false;\n          this._capability = (0, _util.createPromiseCapability)();\n          this._renderTimer = null;\n          this._bounds = [];\n\n          this._capability.promise.finally(() => {\n            if (this._layoutTextCtx) {\n              this._layoutTextCtx.canvas.width = 0;\n              this._layoutTextCtx.canvas.height = 0;\n              this._layoutTextCtx = null;\n            }\n          }).catch(() => {});\n        }\n\n        TextLayerRenderTask.prototype = {\n          get promise() {\n            return this._capability.promise;\n          },\n\n          cancel: function TextLayer_cancel() {\n            this._canceled = true;\n\n            if (this._reader) {\n              this._reader.cancel(new _util.AbortException(\"TextLayer task cancelled.\"));\n\n              this._reader = null;\n            }\n\n            if (this._renderTimer !== null) {\n              clearTimeout(this._renderTimer);\n              this._renderTimer = null;\n            }\n\n            this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n          },\n\n          _processItems(items, styleCache) {\n            for (let i = 0, len = items.length; i < len; i++) {\n              this._textContentItemsStr.push(items[i].str);\n\n              appendText(this, items[i], styleCache);\n            }\n          },\n\n          _layoutText(textDiv) {\n            const textDivProperties = this._textDivProperties.get(textDiv);\n\n            if (textDivProperties.isWhitespace) {\n              return;\n            }\n\n            let transform = \"\";\n\n            if (textDivProperties.canvasWidth !== 0) {\n              const {\n                fontSize,\n                fontFamily\n              } = textDiv.style;\n\n              if (fontSize !== this._layoutTextLastFontSize || fontFamily !== this._layoutTextLastFontFamily) {\n                this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n                this._layoutTextLastFontSize = fontSize;\n                this._layoutTextLastFontFamily = fontFamily;\n              }\n\n              const {\n                width\n              } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n              if (width > 0) {\n                textDivProperties.scale = textDivProperties.canvasWidth / width;\n                transform = `scaleX(${textDivProperties.scale})`;\n              }\n            }\n\n            if (textDivProperties.angle !== 0) {\n              transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n            }\n\n            if (transform.length > 0) {\n              if (this._enhanceTextSelection) {\n                textDivProperties.originalTransform = transform;\n              }\n\n              textDiv.style.transform = transform;\n            }\n\n            this._textDivProperties.set(textDiv, textDivProperties);\n\n            this._container.appendChild(textDiv);\n          },\n\n          _render: function TextLayer_render(timeout) {\n            const capability = (0, _util.createPromiseCapability)();\n            let styleCache = Object.create(null);\n\n            const canvas = this._document.createElement(\"canvas\");\n\n            canvas.mozOpaque = true;\n            this._layoutTextCtx = canvas.getContext(\"2d\", {\n              alpha: false\n            });\n\n            if (this._textContent) {\n              const textItems = this._textContent.items;\n              const textStyles = this._textContent.styles;\n\n              this._processItems(textItems, textStyles);\n\n              capability.resolve();\n            } else if (this._textContentStream) {\n              const pump = () => {\n                this._reader.read().then(_ref23 => {\n                  let {\n                    value,\n                    done\n                  } = _ref23;\n\n                  if (done) {\n                    capability.resolve();\n                    return;\n                  }\n\n                  Object.assign(styleCache, value.styles);\n\n                  this._processItems(value.items, styleCache);\n\n                  pump();\n                }, capability.reject);\n              };\n\n              this._reader = this._textContentStream.getReader();\n              pump();\n            } else {\n              throw new Error('Neither \"textContent\" nor \"textContentStream\"' + \" parameters specified.\");\n            }\n\n            capability.promise.then(() => {\n              styleCache = null;\n\n              if (!timeout) {\n                render(this);\n              } else {\n                this._renderTimer = setTimeout(() => {\n                  render(this);\n                  this._renderTimer = null;\n                }, timeout);\n              }\n            }, this._capability.reject);\n          },\n          expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n            if (!this._enhanceTextSelection || !this._renderingDone) {\n              return;\n            }\n\n            if (this._bounds !== null) {\n              expand(this);\n              this._bounds = null;\n            }\n\n            const transformBuf = [],\n                  paddingBuf = [];\n\n            for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n              const div = this._textDivs[i];\n\n              const divProps = this._textDivProperties.get(div);\n\n              if (divProps.isWhitespace) {\n                continue;\n              }\n\n              if (expandDivs) {\n                transformBuf.length = 0;\n                paddingBuf.length = 0;\n\n                if (divProps.originalTransform) {\n                  transformBuf.push(divProps.originalTransform);\n                }\n\n                if (divProps.paddingTop > 0) {\n                  paddingBuf.push(`${divProps.paddingTop}px`);\n                  transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingRight > 0) {\n                  paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingBottom > 0) {\n                  paddingBuf.push(`${divProps.paddingBottom}px`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                if (divProps.paddingLeft > 0) {\n                  paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n                  transformBuf.push(`translateX(${-divProps.paddingLeft / divProps.scale}px)`);\n                } else {\n                  paddingBuf.push(0);\n                }\n\n                div.style.padding = paddingBuf.join(\" \");\n\n                if (transformBuf.length) {\n                  div.style.transform = transformBuf.join(\" \");\n                }\n              } else {\n                div.style.padding = null;\n                div.style.transform = divProps.originalTransform;\n              }\n            }\n          }\n        };\n\n        function renderTextLayer(renderParameters) {\n          var task = new TextLayerRenderTask({\n            textContent: renderParameters.textContent,\n            textContentStream: renderParameters.textContentStream,\n            container: renderParameters.container,\n            viewport: renderParameters.viewport,\n            textDivs: renderParameters.textDivs,\n            textContentItemsStr: renderParameters.textContentItemsStr,\n            enhanceTextSelection: renderParameters.enhanceTextSelection\n          });\n\n          task._render(renderParameters.timeout);\n\n          return task;\n        }\n\n        return renderTextLayer;\n      }();\n\n      exports.renderTextLayer = renderTextLayer;\n      /***/\n    },\n    /* 21 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.SVGGraphics = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _display_utils = __w_pdfjs_require__(1);\n\n      var _is_node = __w_pdfjs_require__(4);\n\n      let SVGGraphics = function () {\n        throw new Error(\"Not implemented: SVGGraphics\");\n      };\n\n      exports.SVGGraphics = SVGGraphics;\n      {\n        const SVG_DEFAULTS = {\n          fontStyle: \"normal\",\n          fontWeight: \"normal\",\n          fillColor: \"#000000\"\n        };\n        const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n        const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n        const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n        const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n        const convertImgDataToPng = function () {\n          const PNG_HEADER = new Uint8Array([0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a]);\n          const CHUNK_WRAPPER_SIZE = 12;\n          const crcTable = new Int32Array(256);\n\n          for (let i = 0; i < 256; i++) {\n            let c = i;\n\n            for (let h = 0; h < 8; h++) {\n              if (c & 1) {\n                c = 0xedb88320 ^ c >> 1 & 0x7fffffff;\n              } else {\n                c = c >> 1 & 0x7fffffff;\n              }\n            }\n\n            crcTable[i] = c;\n          }\n\n          function crc32(data, start, end) {\n            let crc = -1;\n\n            for (let i = start; i < end; i++) {\n              const a = (crc ^ data[i]) & 0xff;\n              const b = crcTable[a];\n              crc = crc >>> 8 ^ b;\n            }\n\n            return crc ^ -1;\n          }\n\n          function writePngChunk(type, body, data, offset) {\n            let p = offset;\n            const len = body.length;\n            data[p] = len >> 24 & 0xff;\n            data[p + 1] = len >> 16 & 0xff;\n            data[p + 2] = len >> 8 & 0xff;\n            data[p + 3] = len & 0xff;\n            p += 4;\n            data[p] = type.charCodeAt(0) & 0xff;\n            data[p + 1] = type.charCodeAt(1) & 0xff;\n            data[p + 2] = type.charCodeAt(2) & 0xff;\n            data[p + 3] = type.charCodeAt(3) & 0xff;\n            p += 4;\n            data.set(body, p);\n            p += body.length;\n            const crc = crc32(data, offset + 4, p);\n            data[p] = crc >> 24 & 0xff;\n            data[p + 1] = crc >> 16 & 0xff;\n            data[p + 2] = crc >> 8 & 0xff;\n            data[p + 3] = crc & 0xff;\n          }\n\n          function adler32(data, start, end) {\n            let a = 1;\n            let b = 0;\n\n            for (let i = start; i < end; ++i) {\n              a = (a + (data[i] & 0xff)) % 65521;\n              b = (b + a) % 65521;\n            }\n\n            return b << 16 | a;\n          }\n\n          function deflateSync(literals) {\n            if (!_is_node.isNodeJS) {\n              return deflateSyncUncompressed(literals);\n            }\n\n            try {\n              let input;\n\n              if (parseInt(process.versions.node) >= 8) {\n                input = literals;\n              } else {\n                input = Buffer.from(literals);\n              }\n\n              const output = require(\"zlib\").deflateSync(input, {\n                level: 9\n              });\n\n              return output instanceof Uint8Array ? output : new Uint8Array(output);\n            } catch (e) {\n              (0, _util.warn)(\"Not compressing PNG because zlib.deflateSync is unavailable: \" + e);\n            }\n\n            return deflateSyncUncompressed(literals);\n          }\n\n          function deflateSyncUncompressed(literals) {\n            let len = literals.length;\n            const maxBlockLength = 0xffff;\n            const deflateBlocks = Math.ceil(len / maxBlockLength);\n            const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n            let pi = 0;\n            idat[pi++] = 0x78;\n            idat[pi++] = 0x9c;\n            let pos = 0;\n\n            while (len > maxBlockLength) {\n              idat[pi++] = 0x00;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0xff;\n              idat[pi++] = 0x00;\n              idat[pi++] = 0x00;\n              idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n              pi += maxBlockLength;\n              pos += maxBlockLength;\n              len -= maxBlockLength;\n            }\n\n            idat[pi++] = 0x01;\n            idat[pi++] = len & 0xff;\n            idat[pi++] = len >> 8 & 0xff;\n            idat[pi++] = ~len & 0xffff & 0xff;\n            idat[pi++] = (~len & 0xffff) >> 8 & 0xff;\n            idat.set(literals.subarray(pos), pi);\n            pi += literals.length - pos;\n            const adler = adler32(literals, 0, literals.length);\n            idat[pi++] = adler >> 24 & 0xff;\n            idat[pi++] = adler >> 16 & 0xff;\n            idat[pi++] = adler >> 8 & 0xff;\n            idat[pi++] = adler & 0xff;\n            return idat;\n          }\n\n          function encode(imgData, kind, forceDataSchema, isMask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            let bitDepth, colorType, lineSize;\n            const bytes = imgData.data;\n\n            switch (kind) {\n              case _util.ImageKind.GRAYSCALE_1BPP:\n                colorType = 0;\n                bitDepth = 1;\n                lineSize = width + 7 >> 3;\n                break;\n\n              case _util.ImageKind.RGB_24BPP:\n                colorType = 2;\n                bitDepth = 8;\n                lineSize = width * 3;\n                break;\n\n              case _util.ImageKind.RGBA_32BPP:\n                colorType = 6;\n                bitDepth = 8;\n                lineSize = width * 4;\n                break;\n\n              default:\n                throw new Error(\"invalid format\");\n            }\n\n            const literals = new Uint8Array((1 + lineSize) * height);\n            let offsetLiterals = 0,\n                offsetBytes = 0;\n\n            for (let y = 0; y < height; ++y) {\n              literals[offsetLiterals++] = 0;\n              literals.set(bytes.subarray(offsetBytes, offsetBytes + lineSize), offsetLiterals);\n              offsetBytes += lineSize;\n              offsetLiterals += lineSize;\n            }\n\n            if (kind === _util.ImageKind.GRAYSCALE_1BPP && isMask) {\n              offsetLiterals = 0;\n\n              for (let y = 0; y < height; y++) {\n                offsetLiterals++;\n\n                for (let i = 0; i < lineSize; i++) {\n                  literals[offsetLiterals++] ^= 0xff;\n                }\n              }\n            }\n\n            const ihdr = new Uint8Array([width >> 24 & 0xff, width >> 16 & 0xff, width >> 8 & 0xff, width & 0xff, height >> 24 & 0xff, height >> 16 & 0xff, height >> 8 & 0xff, height & 0xff, bitDepth, colorType, 0x00, 0x00, 0x00]);\n            const idat = deflateSync(literals);\n            const pngLength = PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n            const data = new Uint8Array(pngLength);\n            let offset = 0;\n            data.set(PNG_HEADER, offset);\n            offset += PNG_HEADER.length;\n            writePngChunk(\"IHDR\", ihdr, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n            writePngChunk(\"IDATA\", idat, data, offset);\n            offset += CHUNK_WRAPPER_SIZE + idat.length;\n            writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n            return (0, _util.createObjectURL)(data, \"image/png\", forceDataSchema);\n          }\n\n          return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n            const kind = imgData.kind === undefined ? _util.ImageKind.GRAYSCALE_1BPP : imgData.kind;\n            return encode(imgData, kind, forceDataSchema, isMask);\n          };\n        }();\n\n        class SVGExtraState {\n          constructor() {\n            this.fontSizeScale = 1;\n            this.fontWeight = SVG_DEFAULTS.fontWeight;\n            this.fontSize = 0;\n            this.textMatrix = _util.IDENTITY_MATRIX;\n            this.fontMatrix = _util.FONT_IDENTITY_MATRIX;\n            this.leading = 0;\n            this.textRenderingMode = _util.TextRenderingMode.FILL;\n            this.textMatrixScale = 1;\n            this.x = 0;\n            this.y = 0;\n            this.lineX = 0;\n            this.lineY = 0;\n            this.charSpacing = 0;\n            this.wordSpacing = 0;\n            this.textHScale = 1;\n            this.textRise = 0;\n            this.fillColor = SVG_DEFAULTS.fillColor;\n            this.strokeColor = \"#000000\";\n            this.fillAlpha = 1;\n            this.strokeAlpha = 1;\n            this.lineWidth = 1;\n            this.lineJoin = \"\";\n            this.lineCap = \"\";\n            this.miterLimit = 0;\n            this.dashArray = [];\n            this.dashPhase = 0;\n            this.dependencies = [];\n            this.activeClipUrl = null;\n            this.clipGroup = null;\n            this.maskId = \"\";\n          }\n\n          clone() {\n            return Object.create(this);\n          }\n\n          setCurrentPoint(x, y) {\n            this.x = x;\n            this.y = y;\n          }\n\n        }\n\n        function opListToTree(opList) {\n          let opTree = [];\n          const tmp = [];\n\n          for (const opListElement of opList) {\n            if (opListElement.fn === \"save\") {\n              opTree.push({\n                fnId: 92,\n                fn: \"group\",\n                items: []\n              });\n              tmp.push(opTree);\n              opTree = opTree[opTree.length - 1].items;\n              continue;\n            }\n\n            if (opListElement.fn === \"restore\") {\n              opTree = tmp.pop();\n            } else {\n              opTree.push(opListElement);\n            }\n          }\n\n          return opTree;\n        }\n\n        function pf(value) {\n          if (Number.isInteger(value)) {\n            return value.toString();\n          }\n\n          const s = value.toFixed(10);\n          let i = s.length - 1;\n\n          if (s[i] !== \"0\") {\n            return s;\n          }\n\n          do {\n            i--;\n          } while (s[i] === \"0\");\n\n          return s.substring(0, s[i] === \".\" ? i : i + 1);\n        }\n\n        function pm(m) {\n          if (m[4] === 0 && m[5] === 0) {\n            if (m[1] === 0 && m[2] === 0) {\n              if (m[0] === 1 && m[3] === 1) {\n                return \"\";\n              }\n\n              return `scale(${pf(m[0])} ${pf(m[3])})`;\n            }\n\n            if (m[0] === m[3] && m[1] === -m[2]) {\n              const a = Math.acos(m[0]) * 180 / Math.PI;\n              return `rotate(${pf(a)})`;\n            }\n          } else {\n            if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n              return `translate(${pf(m[4])} ${pf(m[5])})`;\n            }\n          }\n\n          return `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` + `${pf(m[5])})`;\n        }\n\n        let clipCount = 0;\n        let maskCount = 0;\n        let shadingCount = 0;\n        exports.SVGGraphics = SVGGraphics = class SVGGraphics {\n          constructor(commonObjs, objs) {\n            let forceDataSchema = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n            this.svgFactory = new _display_utils.DOMSVGFactory();\n            this.current = new SVGExtraState();\n            this.transformMatrix = _util.IDENTITY_MATRIX;\n            this.transformStack = [];\n            this.extraStack = [];\n            this.commonObjs = commonObjs;\n            this.objs = objs;\n            this.pendingClip = null;\n            this.pendingEOFill = false;\n            this.embedFonts = false;\n            this.embeddedFonts = Object.create(null);\n            this.cssStyle = null;\n            this.forceDataSchema = !!forceDataSchema;\n            this._operatorIdMapping = [];\n\n            for (const op in _util.OPS) {\n              this._operatorIdMapping[_util.OPS[op]] = op;\n            }\n          }\n\n          save() {\n            this.transformStack.push(this.transformMatrix);\n            const old = this.current;\n            this.extraStack.push(old);\n            this.current = old.clone();\n          }\n\n          restore() {\n            this.transformMatrix = this.transformStack.pop();\n            this.current = this.extraStack.pop();\n            this.pendingClip = null;\n            this.tgrp = null;\n          }\n\n          group(items) {\n            this.save();\n            this.executeOpTree(items);\n            this.restore();\n          }\n\n          loadDependencies(operatorList) {\n            const fnArray = operatorList.fnArray;\n            const argsArray = operatorList.argsArray;\n\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              if (fnArray[i] !== _util.OPS.dependency) {\n                continue;\n              }\n\n              for (const obj of argsArray[i]) {\n                const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n                const promise = new Promise(resolve => {\n                  objsPool.get(obj, resolve);\n                });\n                this.current.dependencies.push(promise);\n              }\n            }\n\n            return Promise.all(this.current.dependencies);\n          }\n\n          transform(a, b, c, d, e, f) {\n            const transformMatrix = [a, b, c, d, e, f];\n            this.transformMatrix = _util.Util.transform(this.transformMatrix, transformMatrix);\n            this.tgrp = null;\n          }\n\n          getSVG(operatorList, viewport) {\n            this.viewport = viewport;\n\n            const svgElement = this._initialize(viewport);\n\n            return this.loadDependencies(operatorList).then(() => {\n              this.transformMatrix = _util.IDENTITY_MATRIX;\n              this.executeOpTree(this.convertOpList(operatorList));\n              return svgElement;\n            });\n          }\n\n          convertOpList(operatorList) {\n            const operatorIdMapping = this._operatorIdMapping;\n            const argsArray = operatorList.argsArray;\n            const fnArray = operatorList.fnArray;\n            const opList = [];\n\n            for (let i = 0, ii = fnArray.length; i < ii; i++) {\n              const fnId = fnArray[i];\n              opList.push({\n                fnId,\n                fn: operatorIdMapping[fnId],\n                args: argsArray[i]\n              });\n            }\n\n            return opListToTree(opList);\n          }\n\n          executeOpTree(opTree) {\n            for (const opTreeElement of opTree) {\n              const fn = opTreeElement.fn;\n              const fnId = opTreeElement.fnId;\n              const args = opTreeElement.args;\n\n              switch (fnId | 0) {\n                case _util.OPS.beginText:\n                  this.beginText();\n                  break;\n\n                case _util.OPS.dependency:\n                  break;\n\n                case _util.OPS.setLeading:\n                  this.setLeading(args);\n                  break;\n\n                case _util.OPS.setLeadingMoveText:\n                  this.setLeadingMoveText(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setFont:\n                  this.setFont(args);\n                  break;\n\n                case _util.OPS.showText:\n                  this.showText(args[0]);\n                  break;\n\n                case _util.OPS.showSpacedText:\n                  this.showText(args[0]);\n                  break;\n\n                case _util.OPS.endText:\n                  this.endText();\n                  break;\n\n                case _util.OPS.moveText:\n                  this.moveText(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setCharSpacing:\n                  this.setCharSpacing(args[0]);\n                  break;\n\n                case _util.OPS.setWordSpacing:\n                  this.setWordSpacing(args[0]);\n                  break;\n\n                case _util.OPS.setHScale:\n                  this.setHScale(args[0]);\n                  break;\n\n                case _util.OPS.setTextMatrix:\n                  this.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n\n                case _util.OPS.setTextRise:\n                  this.setTextRise(args[0]);\n                  break;\n\n                case _util.OPS.setTextRenderingMode:\n                  this.setTextRenderingMode(args[0]);\n                  break;\n\n                case _util.OPS.setLineWidth:\n                  this.setLineWidth(args[0]);\n                  break;\n\n                case _util.OPS.setLineJoin:\n                  this.setLineJoin(args[0]);\n                  break;\n\n                case _util.OPS.setLineCap:\n                  this.setLineCap(args[0]);\n                  break;\n\n                case _util.OPS.setMiterLimit:\n                  this.setMiterLimit(args[0]);\n                  break;\n\n                case _util.OPS.setFillRGBColor:\n                  this.setFillRGBColor(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.setStrokeRGBColor:\n                  this.setStrokeRGBColor(args[0], args[1], args[2]);\n                  break;\n\n                case _util.OPS.setStrokeColorN:\n                  this.setStrokeColorN(args);\n                  break;\n\n                case _util.OPS.setFillColorN:\n                  this.setFillColorN(args);\n                  break;\n\n                case _util.OPS.shadingFill:\n                  this.shadingFill(args[0]);\n                  break;\n\n                case _util.OPS.setDash:\n                  this.setDash(args[0], args[1]);\n                  break;\n\n                case _util.OPS.setRenderingIntent:\n                  this.setRenderingIntent(args[0]);\n                  break;\n\n                case _util.OPS.setFlatness:\n                  this.setFlatness(args[0]);\n                  break;\n\n                case _util.OPS.setGState:\n                  this.setGState(args[0]);\n                  break;\n\n                case _util.OPS.fill:\n                  this.fill();\n                  break;\n\n                case _util.OPS.eoFill:\n                  this.eoFill();\n                  break;\n\n                case _util.OPS.stroke:\n                  this.stroke();\n                  break;\n\n                case _util.OPS.fillStroke:\n                  this.fillStroke();\n                  break;\n\n                case _util.OPS.eoFillStroke:\n                  this.eoFillStroke();\n                  break;\n\n                case _util.OPS.clip:\n                  this.clip(\"nonzero\");\n                  break;\n\n                case _util.OPS.eoClip:\n                  this.clip(\"evenodd\");\n                  break;\n\n                case _util.OPS.paintSolidColorImageMask:\n                  this.paintSolidColorImageMask();\n                  break;\n\n                case _util.OPS.paintImageXObject:\n                  this.paintImageXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintInlineImageXObject:\n                  this.paintInlineImageXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintImageMaskXObject:\n                  this.paintImageMaskXObject(args[0]);\n                  break;\n\n                case _util.OPS.paintFormXObjectBegin:\n                  this.paintFormXObjectBegin(args[0], args[1]);\n                  break;\n\n                case _util.OPS.paintFormXObjectEnd:\n                  this.paintFormXObjectEnd();\n                  break;\n\n                case _util.OPS.closePath:\n                  this.closePath();\n                  break;\n\n                case _util.OPS.closeStroke:\n                  this.closeStroke();\n                  break;\n\n                case _util.OPS.closeFillStroke:\n                  this.closeFillStroke();\n                  break;\n\n                case _util.OPS.closeEOFillStroke:\n                  this.closeEOFillStroke();\n                  break;\n\n                case _util.OPS.nextLine:\n                  this.nextLine();\n                  break;\n\n                case _util.OPS.transform:\n                  this.transform(args[0], args[1], args[2], args[3], args[4], args[5]);\n                  break;\n\n                case _util.OPS.constructPath:\n                  this.constructPath(args[0], args[1]);\n                  break;\n\n                case _util.OPS.endPath:\n                  this.endPath();\n                  break;\n\n                case 92:\n                  this.group(opTreeElement.items);\n                  break;\n\n                default:\n                  (0, _util.warn)(`Unimplemented operator ${fn}`);\n                  break;\n              }\n            }\n          }\n\n          setWordSpacing(wordSpacing) {\n            this.current.wordSpacing = wordSpacing;\n          }\n\n          setCharSpacing(charSpacing) {\n            this.current.charSpacing = charSpacing;\n          }\n\n          nextLine() {\n            this.moveText(0, this.current.leading);\n          }\n\n          setTextMatrix(a, b, c, d, e, f) {\n            const current = this.current;\n            current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n            current.textMatrixScale = Math.sqrt(a * a + b * b);\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtElement.appendChild(current.tspan);\n          }\n\n          beginText() {\n            const current = this.current;\n            current.x = current.lineX = 0;\n            current.y = current.lineY = 0;\n            current.textMatrix = _util.IDENTITY_MATRIX;\n            current.lineMatrix = _util.IDENTITY_MATRIX;\n            current.textMatrixScale = 1;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.txtElement = this.svgFactory.createElement(\"svg:text\");\n            current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n\n          moveText(x, y) {\n            const current = this.current;\n            current.x = current.lineX += x;\n            current.y = current.lineY += y;\n            current.xcoords = [];\n            current.ycoords = [];\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n          }\n\n          showText(glyphs) {\n            const current = this.current;\n            const font = current.font;\n            const fontSize = current.fontSize;\n\n            if (fontSize === 0) {\n              return;\n            }\n\n            const fontSizeScale = current.fontSizeScale;\n            const charSpacing = current.charSpacing;\n            const wordSpacing = current.wordSpacing;\n            const fontDirection = current.fontDirection;\n            const textHScale = current.textHScale * fontDirection;\n            const vertical = font.vertical;\n            const spacingDir = vertical ? 1 : -1;\n            const defaultVMetrics = font.defaultVMetrics;\n            const widthAdvanceScale = fontSize * current.fontMatrix[0];\n            let x = 0;\n\n            for (const glyph of glyphs) {\n              if (glyph === null) {\n                x += fontDirection * wordSpacing;\n                continue;\n              } else if ((0, _util.isNum)(glyph)) {\n                x += spacingDir * glyph * fontSize / 1000;\n                continue;\n              }\n\n              const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n              const character = glyph.fontChar;\n              let scaledX, scaledY;\n              let width = glyph.width;\n\n              if (vertical) {\n                let vx;\n                const vmetric = glyph.vmetric || defaultVMetrics;\n                vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n                vx = -vx * widthAdvanceScale;\n                const vy = vmetric[2] * widthAdvanceScale;\n                width = vmetric ? -vmetric[0] : width;\n                scaledX = vx / fontSizeScale;\n                scaledY = (x + vy) / fontSizeScale;\n              } else {\n                scaledX = x / fontSizeScale;\n                scaledY = 0;\n              }\n\n              if (glyph.isInFont || font.missingFile) {\n                current.xcoords.push(current.x + scaledX);\n\n                if (vertical) {\n                  current.ycoords.push(-current.y + scaledY);\n                }\n\n                current.tspan.textContent += character;\n              } else {}\n\n              let charWidth;\n\n              if (vertical) {\n                charWidth = width * widthAdvanceScale - spacing * fontDirection;\n              } else {\n                charWidth = width * widthAdvanceScale + spacing * fontDirection;\n              }\n\n              x += charWidth;\n            }\n\n            current.tspan.setAttributeNS(null, \"x\", current.xcoords.map(pf).join(\" \"));\n\n            if (vertical) {\n              current.tspan.setAttributeNS(null, \"y\", current.ycoords.map(pf).join(\" \"));\n            } else {\n              current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            }\n\n            if (vertical) {\n              current.y -= x;\n            } else {\n              current.x += x * textHScale;\n            }\n\n            current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n            current.tspan.setAttributeNS(null, \"font-size\", `${pf(current.fontSize)}px`);\n\n            if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n              current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n            }\n\n            if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n              current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n            }\n\n            const fillStrokeMode = current.textRenderingMode & _util.TextRenderingMode.FILL_STROKE_MASK;\n\n            if (fillStrokeMode === _util.TextRenderingMode.FILL || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n                current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n              }\n\n              if (current.fillAlpha < 1) {\n                current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              }\n            } else if (current.textRenderingMode === _util.TextRenderingMode.ADD_TO_PATH) {\n              current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n            } else {\n              current.tspan.setAttributeNS(null, \"fill\", \"none\");\n            }\n\n            if (fillStrokeMode === _util.TextRenderingMode.STROKE || fillStrokeMode === _util.TextRenderingMode.FILL_STROKE) {\n              const lineWidthScale = 1 / (current.textMatrixScale || 1);\n\n              this._setStrokeAttributes(current.tspan, lineWidthScale);\n            }\n\n            let textMatrix = current.textMatrix;\n\n            if (current.textRise !== 0) {\n              textMatrix = textMatrix.slice();\n              textMatrix[5] += current.textRise;\n            }\n\n            current.txtElement.setAttributeNS(null, \"transform\", `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`);\n            current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n            current.txtElement.appendChild(current.tspan);\n            current.txtgrp.appendChild(current.txtElement);\n\n            this._ensureTransformGroup().appendChild(current.txtElement);\n          }\n\n          setLeadingMoveText(x, y) {\n            this.setLeading(-y);\n            this.moveText(x, y);\n          }\n\n          addFontStyle(fontObj) {\n            if (!fontObj.data) {\n              throw new Error(\"addFontStyle: No font data available, \" + 'ensure that the \"fontExtraProperties\" API parameter is set.');\n            }\n\n            if (!this.cssStyle) {\n              this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n              this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n              this.defs.appendChild(this.cssStyle);\n            }\n\n            const url = (0, _util.createObjectURL)(fontObj.data, fontObj.mimetype, this.forceDataSchema);\n            this.cssStyle.textContent += `@font-face { font-family: \"${fontObj.loadedName}\";` + ` src: url(${url}); }\\n`;\n          }\n\n          setFont(details) {\n            const current = this.current;\n            const fontObj = this.commonObjs.get(details[0]);\n            let size = details[1];\n            current.font = fontObj;\n\n            if (this.embedFonts && !fontObj.missingFile && !this.embeddedFonts[fontObj.loadedName]) {\n              this.addFontStyle(fontObj);\n              this.embeddedFonts[fontObj.loadedName] = fontObj;\n            }\n\n            current.fontMatrix = fontObj.fontMatrix ? fontObj.fontMatrix : _util.FONT_IDENTITY_MATRIX;\n            let bold = \"normal\";\n\n            if (fontObj.black) {\n              bold = \"900\";\n            } else if (fontObj.bold) {\n              bold = \"bold\";\n            }\n\n            const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n            if (size < 0) {\n              size = -size;\n              current.fontDirection = -1;\n            } else {\n              current.fontDirection = 1;\n            }\n\n            current.fontSize = size;\n            current.fontFamily = fontObj.loadedName;\n            current.fontWeight = bold;\n            current.fontStyle = italic;\n            current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n            current.xcoords = [];\n            current.ycoords = [];\n          }\n\n          endText() {\n            const current = this.current;\n\n            if (current.textRenderingMode & _util.TextRenderingMode.ADD_TO_PATH_FLAG && current.txtElement && current.txtElement.hasChildNodes()) {\n              current.element = current.txtElement;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n\n          setLineWidth(width) {\n            if (width > 0) {\n              this.current.lineWidth = width;\n            }\n          }\n\n          setLineCap(style) {\n            this.current.lineCap = LINE_CAP_STYLES[style];\n          }\n\n          setLineJoin(style) {\n            this.current.lineJoin = LINE_JOIN_STYLES[style];\n          }\n\n          setMiterLimit(limit) {\n            this.current.miterLimit = limit;\n          }\n\n          setStrokeAlpha(strokeAlpha) {\n            this.current.strokeAlpha = strokeAlpha;\n          }\n\n          setStrokeRGBColor(r, g, b) {\n            this.current.strokeColor = _util.Util.makeCssRgb(r, g, b);\n          }\n\n          setFillAlpha(fillAlpha) {\n            this.current.fillAlpha = fillAlpha;\n          }\n\n          setFillRGBColor(r, g, b) {\n            this.current.fillColor = _util.Util.makeCssRgb(r, g, b);\n            this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n            this.current.xcoords = [];\n            this.current.ycoords = [];\n          }\n\n          setStrokeColorN(args) {\n            this.current.strokeColor = this._makeColorN_Pattern(args);\n          }\n\n          setFillColorN(args) {\n            this.current.fillColor = this._makeColorN_Pattern(args);\n          }\n\n          shadingFill(args) {\n            const width = this.viewport.width;\n            const height = this.viewport.height;\n\n            const inv = _util.Util.inverseTransform(this.transformMatrix);\n\n            const bl = _util.Util.applyTransform([0, 0], inv);\n\n            const br = _util.Util.applyTransform([0, height], inv);\n\n            const ul = _util.Util.applyTransform([width, 0], inv);\n\n            const ur = _util.Util.applyTransform([width, height], inv);\n\n            const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n            const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n            const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n            const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", x0);\n            rect.setAttributeNS(null, \"y\", y0);\n            rect.setAttributeNS(null, \"width\", x1 - x0);\n            rect.setAttributeNS(null, \"height\", y1 - y0);\n            rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n\n            if (this.current.fillAlpha < 1) {\n              rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n            }\n\n            this._ensureTransformGroup().appendChild(rect);\n          }\n\n          _makeColorN_Pattern(args) {\n            if (args[0] === \"TilingPattern\") {\n              return this._makeTilingPattern(args);\n            }\n\n            return this._makeShadingPattern(args);\n          }\n\n          _makeTilingPattern(args) {\n            const color = args[1];\n            const operatorList = args[2];\n            const matrix = args[3] || _util.IDENTITY_MATRIX;\n            const [x0, y0, x1, y1] = args[4];\n            const xstep = args[5];\n            const ystep = args[6];\n            const paintType = args[7];\n            const tilingId = `shading${shadingCount++}`;\n\n            const [tx0, ty0] = _util.Util.applyTransform([x0, y0], matrix);\n\n            const [tx1, ty1] = _util.Util.applyTransform([x1, y1], matrix);\n\n            const [xscale, yscale] = _util.Util.singularValueDecompose2dScale(matrix);\n\n            const txstep = xstep * xscale;\n            const tystep = ystep * yscale;\n            const tiling = this.svgFactory.createElement(\"svg:pattern\");\n            tiling.setAttributeNS(null, \"id\", tilingId);\n            tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n            tiling.setAttributeNS(null, \"width\", txstep);\n            tiling.setAttributeNS(null, \"height\", tystep);\n            tiling.setAttributeNS(null, \"x\", `${tx0}`);\n            tiling.setAttributeNS(null, \"y\", `${ty0}`);\n            const svg = this.svg;\n            const transformMatrix = this.transformMatrix;\n            const fillColor = this.current.fillColor;\n            const strokeColor = this.current.strokeColor;\n            const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n            this.svg = bbox;\n            this.transformMatrix = matrix;\n\n            if (paintType === 2) {\n              const cssColor = _util.Util.makeCssRgb(...color);\n\n              this.current.fillColor = cssColor;\n              this.current.strokeColor = cssColor;\n            }\n\n            this.executeOpTree(this.convertOpList(operatorList));\n            this.svg = svg;\n            this.transformMatrix = transformMatrix;\n            this.current.fillColor = fillColor;\n            this.current.strokeColor = strokeColor;\n            tiling.appendChild(bbox.childNodes[0]);\n            this.defs.appendChild(tiling);\n            return `url(#${tilingId})`;\n          }\n\n          _makeShadingPattern(args) {\n            switch (args[0]) {\n              case \"RadialAxial\":\n                const shadingId = `shading${shadingCount++}`;\n                const colorStops = args[3];\n                let gradient;\n\n                switch (args[1]) {\n                  case \"axial\":\n                    const point0 = args[4];\n                    const point1 = args[5];\n                    gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"x1\", point0[0]);\n                    gradient.setAttributeNS(null, \"y1\", point0[1]);\n                    gradient.setAttributeNS(null, \"x2\", point1[0]);\n                    gradient.setAttributeNS(null, \"y2\", point1[1]);\n                    break;\n\n                  case \"radial\":\n                    const focalPoint = args[4];\n                    const circlePoint = args[5];\n                    const focalRadius = args[6];\n                    const circleRadius = args[7];\n                    gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n                    gradient.setAttributeNS(null, \"id\", shadingId);\n                    gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n                    gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n                    gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n                    gradient.setAttributeNS(null, \"r\", circleRadius);\n                    gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n                    gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n                    gradient.setAttributeNS(null, \"fr\", focalRadius);\n                    break;\n\n                  default:\n                    throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n                }\n\n                for (const colorStop of colorStops) {\n                  const stop = this.svgFactory.createElement(\"svg:stop\");\n                  stop.setAttributeNS(null, \"offset\", colorStop[0]);\n                  stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n                  gradient.appendChild(stop);\n                }\n\n                this.defs.appendChild(gradient);\n                return `url(#${shadingId})`;\n\n              case \"Mesh\":\n                (0, _util.warn)(\"Unimplemented pattern Mesh\");\n                return null;\n\n              case \"Dummy\":\n                return \"hotpink\";\n\n              default:\n                throw new Error(`Unknown IR type: ${args[0]}`);\n            }\n          }\n\n          setDash(dashArray, dashPhase) {\n            this.current.dashArray = dashArray;\n            this.current.dashPhase = dashPhase;\n          }\n\n          constructPath(ops, args) {\n            const current = this.current;\n            let x = current.x,\n                y = current.y;\n            let d = [];\n            let j = 0;\n\n            for (const op of ops) {\n              switch (op | 0) {\n                case _util.OPS.rectangle:\n                  x = args[j++];\n                  y = args[j++];\n                  const width = args[j++];\n                  const height = args[j++];\n                  const xw = x + width;\n                  const yh = y + height;\n                  d.push(\"M\", pf(x), pf(y), \"L\", pf(xw), pf(y), \"L\", pf(xw), pf(yh), \"L\", pf(x), pf(yh), \"Z\");\n                  break;\n\n                case _util.OPS.moveTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"M\", pf(x), pf(y));\n                  break;\n\n                case _util.OPS.lineTo:\n                  x = args[j++];\n                  y = args[j++];\n                  d.push(\"L\", pf(x), pf(y));\n                  break;\n\n                case _util.OPS.curveTo:\n                  x = args[j + 4];\n                  y = args[j + 5];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]), pf(x), pf(y));\n                  j += 6;\n                  break;\n\n                case _util.OPS.curveTo2:\n                  d.push(\"C\", pf(x), pf(y), pf(args[j]), pf(args[j + 1]), pf(args[j + 2]), pf(args[j + 3]));\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  j += 4;\n                  break;\n\n                case _util.OPS.curveTo3:\n                  x = args[j + 2];\n                  y = args[j + 3];\n                  d.push(\"C\", pf(args[j]), pf(args[j + 1]), pf(x), pf(y), pf(x), pf(y));\n                  j += 4;\n                  break;\n\n                case _util.OPS.closePath:\n                  d.push(\"Z\");\n                  break;\n              }\n            }\n\n            d = d.join(\" \");\n\n            if (current.path && ops.length > 0 && ops[0] !== _util.OPS.rectangle && ops[0] !== _util.OPS.moveTo) {\n              d = current.path.getAttributeNS(null, \"d\") + d;\n            } else {\n              current.path = this.svgFactory.createElement(\"svg:path\");\n\n              this._ensureTransformGroup().appendChild(current.path);\n            }\n\n            current.path.setAttributeNS(null, \"d\", d);\n            current.path.setAttributeNS(null, \"fill\", \"none\");\n            current.element = current.path;\n            current.setCurrentPoint(x, y);\n          }\n\n          endPath() {\n            const current = this.current;\n            current.path = null;\n\n            if (!this.pendingClip) {\n              return;\n            }\n\n            if (!current.element) {\n              this.pendingClip = null;\n              return;\n            }\n\n            const clipId = `clippath${clipCount++}`;\n            const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n            clipPath.setAttributeNS(null, \"id\", clipId);\n            clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n            const clipElement = current.element.cloneNode(true);\n\n            if (this.pendingClip === \"evenodd\") {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n            } else {\n              clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n            }\n\n            this.pendingClip = null;\n            clipPath.appendChild(clipElement);\n            this.defs.appendChild(clipPath);\n\n            if (current.activeClipUrl) {\n              current.clipGroup = null;\n              this.extraStack.forEach(function (prev) {\n                prev.clipGroup = null;\n              });\n              clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n            }\n\n            current.activeClipUrl = `url(#${clipId})`;\n            this.tgrp = null;\n          }\n\n          clip(type) {\n            this.pendingClip = type;\n          }\n\n          closePath() {\n            const current = this.current;\n\n            if (current.path) {\n              const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n              current.path.setAttributeNS(null, \"d\", d);\n            }\n          }\n\n          setLeading(leading) {\n            this.current.leading = -leading;\n          }\n\n          setTextRise(textRise) {\n            this.current.textRise = textRise;\n          }\n\n          setTextRenderingMode(textRenderingMode) {\n            this.current.textRenderingMode = textRenderingMode;\n          }\n\n          setHScale(scale) {\n            this.current.textHScale = scale / 100;\n          }\n\n          setRenderingIntent(intent) {}\n\n          setFlatness(flatness) {}\n\n          setGState(states) {\n            for (const [key, value] of states) {\n              switch (key) {\n                case \"LW\":\n                  this.setLineWidth(value);\n                  break;\n\n                case \"LC\":\n                  this.setLineCap(value);\n                  break;\n\n                case \"LJ\":\n                  this.setLineJoin(value);\n                  break;\n\n                case \"ML\":\n                  this.setMiterLimit(value);\n                  break;\n\n                case \"D\":\n                  this.setDash(value[0], value[1]);\n                  break;\n\n                case \"RI\":\n                  this.setRenderingIntent(value);\n                  break;\n\n                case \"FL\":\n                  this.setFlatness(value);\n                  break;\n\n                case \"Font\":\n                  this.setFont(value);\n                  break;\n\n                case \"CA\":\n                  this.setStrokeAlpha(value);\n                  break;\n\n                case \"ca\":\n                  this.setFillAlpha(value);\n                  break;\n\n                default:\n                  (0, _util.warn)(`Unimplemented graphic state operator ${key}`);\n                  break;\n              }\n            }\n          }\n\n          fill() {\n            const current = this.current;\n\n            if (current.element) {\n              current.element.setAttributeNS(null, \"fill\", current.fillColor);\n              current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n              this.endPath();\n            }\n          }\n\n          stroke() {\n            const current = this.current;\n\n            if (current.element) {\n              this._setStrokeAttributes(current.element);\n\n              current.element.setAttributeNS(null, \"fill\", \"none\");\n              this.endPath();\n            }\n          }\n\n          _setStrokeAttributes(element) {\n            let lineWidthScale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n            const current = this.current;\n            let dashArray = current.dashArray;\n\n            if (lineWidthScale !== 1 && dashArray.length > 0) {\n              dashArray = dashArray.map(function (value) {\n                return lineWidthScale * value;\n              });\n            }\n\n            element.setAttributeNS(null, \"stroke\", current.strokeColor);\n            element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n            element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n            element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n            element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n            element.setAttributeNS(null, \"stroke-width\", pf(lineWidthScale * current.lineWidth) + \"px\");\n            element.setAttributeNS(null, \"stroke-dasharray\", dashArray.map(pf).join(\" \"));\n            element.setAttributeNS(null, \"stroke-dashoffset\", pf(lineWidthScale * current.dashPhase) + \"px\");\n          }\n\n          eoFill() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n\n            this.fill();\n          }\n\n          fillStroke() {\n            this.stroke();\n            this.fill();\n          }\n\n          eoFillStroke() {\n            if (this.current.element) {\n              this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n            }\n\n            this.fillStroke();\n          }\n\n          closeStroke() {\n            this.closePath();\n            this.stroke();\n          }\n\n          closeFillStroke() {\n            this.closePath();\n            this.fillStroke();\n          }\n\n          closeEOFillStroke() {\n            this.closePath();\n            this.eoFillStroke();\n          }\n\n          paintSolidColorImageMask() {\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", \"1px\");\n            rect.setAttributeNS(null, \"height\", \"1px\");\n            rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n            this._ensureTransformGroup().appendChild(rect);\n          }\n\n          paintImageXObject(objId) {\n            const imgData = objId.startsWith(\"g_\") ? this.commonObjs.get(objId) : this.objs.get(objId);\n\n            if (!imgData) {\n              (0, _util.warn)(`Dependent image with object ID ${objId} is not ready yet`);\n              return;\n            }\n\n            this.paintInlineImageXObject(imgData);\n          }\n\n          paintInlineImageXObject(imgData, mask) {\n            const width = imgData.width;\n            const height = imgData.height;\n            const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n            const cliprect = this.svgFactory.createElement(\"svg:rect\");\n            cliprect.setAttributeNS(null, \"x\", \"0\");\n            cliprect.setAttributeNS(null, \"y\", \"0\");\n            cliprect.setAttributeNS(null, \"width\", pf(width));\n            cliprect.setAttributeNS(null, \"height\", pf(height));\n            this.current.element = cliprect;\n            this.clip(\"nonzero\");\n            const imgEl = this.svgFactory.createElement(\"svg:image\");\n            imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n            imgEl.setAttributeNS(null, \"x\", \"0\");\n            imgEl.setAttributeNS(null, \"y\", pf(-height));\n            imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n            imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n            imgEl.setAttributeNS(null, \"transform\", `scale(${pf(1 / width)} ${pf(-1 / height)})`);\n\n            if (mask) {\n              mask.appendChild(imgEl);\n            } else {\n              this._ensureTransformGroup().appendChild(imgEl);\n            }\n          }\n\n          paintImageMaskXObject(imgData) {\n            const current = this.current;\n            const width = imgData.width;\n            const height = imgData.height;\n            const fillColor = current.fillColor;\n            current.maskId = `mask${maskCount++}`;\n            const mask = this.svgFactory.createElement(\"svg:mask\");\n            mask.setAttributeNS(null, \"id\", current.maskId);\n            const rect = this.svgFactory.createElement(\"svg:rect\");\n            rect.setAttributeNS(null, \"x\", \"0\");\n            rect.setAttributeNS(null, \"y\", \"0\");\n            rect.setAttributeNS(null, \"width\", pf(width));\n            rect.setAttributeNS(null, \"height\", pf(height));\n            rect.setAttributeNS(null, \"fill\", fillColor);\n            rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n            this.defs.appendChild(mask);\n\n            this._ensureTransformGroup().appendChild(rect);\n\n            this.paintInlineImageXObject(imgData, mask);\n          }\n\n          paintFormXObjectBegin(matrix, bbox) {\n            if (Array.isArray(matrix) && matrix.length === 6) {\n              this.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);\n            }\n\n            if (bbox) {\n              const width = bbox[2] - bbox[0];\n              const height = bbox[3] - bbox[1];\n              const cliprect = this.svgFactory.createElement(\"svg:rect\");\n              cliprect.setAttributeNS(null, \"x\", bbox[0]);\n              cliprect.setAttributeNS(null, \"y\", bbox[1]);\n              cliprect.setAttributeNS(null, \"width\", pf(width));\n              cliprect.setAttributeNS(null, \"height\", pf(height));\n              this.current.element = cliprect;\n              this.clip(\"nonzero\");\n              this.endPath();\n            }\n          }\n\n          paintFormXObjectEnd() {}\n\n          _initialize(viewport) {\n            const svg = this.svgFactory.create(viewport.width, viewport.height);\n            const definitions = this.svgFactory.createElement(\"svg:defs\");\n            svg.appendChild(definitions);\n            this.defs = definitions;\n            const rootGroup = this.svgFactory.createElement(\"svg:g\");\n            rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n            svg.appendChild(rootGroup);\n            this.svg = rootGroup;\n            return svg;\n          }\n\n          _ensureClipGroup() {\n            if (!this.current.clipGroup) {\n              const clipGroup = this.svgFactory.createElement(\"svg:g\");\n              clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n              this.svg.appendChild(clipGroup);\n              this.current.clipGroup = clipGroup;\n            }\n\n            return this.current.clipGroup;\n          }\n\n          _ensureTransformGroup() {\n            if (!this.tgrp) {\n              this.tgrp = this.svgFactory.createElement(\"svg:g\");\n              this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n              if (this.current.activeClipUrl) {\n                this._ensureClipGroup().appendChild(this.tgrp);\n              } else {\n                this.svg.appendChild(this.tgrp);\n              }\n            }\n\n            return this.tgrp;\n          }\n\n        };\n      }\n      /***/\n    },\n    /* 22 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNodeStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _network_utils = __w_pdfjs_require__(23);\n\n      ;\n\n      const fs = require(\"fs\");\n\n      const http = require(\"http\");\n\n      const https = require(\"https\");\n\n      const url = require(\"url\");\n\n      const fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\n      function parseUrl(sourceUrl) {\n        const parsedUrl = url.parse(sourceUrl);\n\n        if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n          return parsedUrl;\n        }\n\n        if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n          return url.parse(`file:///${sourceUrl}`);\n        }\n\n        if (!parsedUrl.host) {\n          parsedUrl.protocol = \"file:\";\n        }\n\n        return parsedUrl;\n      }\n\n      class PDFNodeStream {\n        constructor(source) {\n          this.source = source;\n          this.url = parseUrl(source.url);\n          this.isHttp = this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n          this.isFsUrl = this.url.protocol === \"file:\";\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        get _progressiveDataLength() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFNodeStream.getFullReader can only be called once.\");\n          this._fullRequestReader = this.isFsUrl ? new PDFNodeStreamFsFullReader(this) : new PDFNodeStreamFullReader(this);\n          return this._fullRequestReader;\n        }\n\n        getRangeReader(start, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n\n          const rangeReader = this.isFsUrl ? new PDFNodeStreamFsRangeReader(this, start, end) : new PDFNodeStreamRangeReader(this, start, end);\n\n          this._rangeRequestReaders.push(rangeReader);\n\n          return rangeReader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeRequestReaders.slice(0);\n\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n\n      }\n\n      exports.PDFNodeStream = PDFNodeStream;\n\n      class BaseFullReader {\n        constructor(stream) {\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          const source = stream.source;\n          this._contentLength = source.length;\n          this._loaded = 0;\n          this._filename = null;\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._headersCapability = (0, _util.createPromiseCapability)();\n        }\n\n        get headersReady() {\n          return this._headersCapability.promise;\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get contentLength() {\n          return this._contentLength;\n        }\n\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._readCapability.promise;\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          if (this._storedError) {\n            throw this._storedError;\n          }\n\n          const chunk = this._readableStream.read();\n\n          if (chunk === null) {\n            this._readCapability = (0, _util.createPromiseCapability)();\n            return this.read();\n          }\n\n          this._loaded += chunk.length;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n          }\n\n          const buffer = new Uint8Array(chunk).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n\n            return;\n          }\n\n          this._readableStream.destroy(reason);\n        }\n\n        _error(reason) {\n          this._storedError = reason;\n\n          this._readCapability.resolve();\n        }\n\n        _setReadableStream(readableStream) {\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", () => {\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"end\", () => {\n            readableStream.destroy();\n            this._done = true;\n\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"error\", reason => {\n            this._error(reason);\n          });\n\n          if (!this._isStreamingSupported && this._isRangeSupported) {\n            this._error(new _util.AbortException(\"streaming is disabled\"));\n          }\n\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n\n      }\n\n      class BaseRangeReader {\n        constructor(stream) {\n          this._url = stream.url;\n          this._done = false;\n          this._storedError = null;\n          this.onProgress = null;\n          this._loaded = 0;\n          this._readableStream = null;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          const source = stream.source;\n          this._isStreamingSupported = !source.disableStream;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._readCapability.promise;\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          if (this._storedError) {\n            throw this._storedError;\n          }\n\n          const chunk = this._readableStream.read();\n\n          if (chunk === null) {\n            this._readCapability = (0, _util.createPromiseCapability)();\n            return this.read();\n          }\n\n          this._loaded += chunk.length;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded\n            });\n          }\n\n          const buffer = new Uint8Array(chunk).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (!this._readableStream) {\n            this._error(reason);\n\n            return;\n          }\n\n          this._readableStream.destroy(reason);\n        }\n\n        _error(reason) {\n          this._storedError = reason;\n\n          this._readCapability.resolve();\n        }\n\n        _setReadableStream(readableStream) {\n          this._readableStream = readableStream;\n          readableStream.on(\"readable\", () => {\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"end\", () => {\n            readableStream.destroy();\n            this._done = true;\n\n            this._readCapability.resolve();\n          });\n          readableStream.on(\"error\", reason => {\n            this._error(reason);\n          });\n\n          if (this._storedError) {\n            this._readableStream.destroy(this._storedError);\n          }\n        }\n\n      }\n\n      function createRequestOptions(parsedUrl, headers) {\n        return {\n          protocol: parsedUrl.protocol,\n          auth: parsedUrl.auth,\n          host: parsedUrl.hostname,\n          port: parsedUrl.port,\n          path: parsedUrl.path,\n          method: \"GET\",\n          headers\n        };\n      }\n\n      class PDFNodeStreamFullReader extends BaseFullReader {\n        constructor(stream) {\n          super(stream);\n\n          const handleResponse = response => {\n            if (response.statusCode === 404) {\n              const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n              this._storedError = error;\n\n              this._headersCapability.reject(error);\n\n              return;\n            }\n\n            this._headersCapability.resolve();\n\n            this._setReadableStream(response);\n\n            const getResponseHeader = name => {\n              return this._readableStream.headers[name.toLowerCase()];\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: stream.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            this._isRangeSupported = allowRangeRequests;\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n          };\n\n          this._request = null;\n\n          if (this._url.protocol === \"http:\") {\n            this._request = http.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n          } else {\n            this._request = https.request(createRequestOptions(this._url, stream.httpHeaders), handleResponse);\n          }\n\n          this._request.on(\"error\", reason => {\n            this._storedError = reason;\n\n            this._headersCapability.reject(reason);\n          });\n\n          this._request.end();\n        }\n\n      }\n\n      class PDFNodeStreamRangeReader extends BaseRangeReader {\n        constructor(stream, start, end) {\n          super(stream);\n          this._httpHeaders = {};\n\n          for (const property in stream.httpHeaders) {\n            const value = stream.httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            this._httpHeaders[property] = value;\n          }\n\n          this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n          const handleResponse = response => {\n            if (response.statusCode === 404) {\n              const error = new _util.MissingPDFException(`Missing PDF \"${this._url}\".`);\n              this._storedError = error;\n              return;\n            }\n\n            this._setReadableStream(response);\n          };\n\n          this._request = null;\n\n          if (this._url.protocol === \"http:\") {\n            this._request = http.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n          } else {\n            this._request = https.request(createRequestOptions(this._url, this._httpHeaders), handleResponse);\n          }\n\n          this._request.on(\"error\", reason => {\n            this._storedError = reason;\n          });\n\n          this._request.end();\n        }\n\n      }\n\n      class PDFNodeStreamFsFullReader extends BaseFullReader {\n        constructor(stream) {\n          super(stream);\n          let path = decodeURIComponent(this._url.path);\n\n          if (fileUriRegex.test(this._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n\n          fs.lstat(path, (error, stat) => {\n            if (error) {\n              if (error.code === \"ENOENT\") {\n                error = new _util.MissingPDFException(`Missing PDF \"${path}\".`);\n              }\n\n              this._storedError = error;\n\n              this._headersCapability.reject(error);\n\n              return;\n            }\n\n            this._contentLength = stat.size;\n\n            this._setReadableStream(fs.createReadStream(path));\n\n            this._headersCapability.resolve();\n          });\n        }\n\n      }\n\n      class PDFNodeStreamFsRangeReader extends BaseRangeReader {\n        constructor(stream, start, end) {\n          super(stream);\n          let path = decodeURIComponent(this._url.path);\n\n          if (fileUriRegex.test(this._url.href)) {\n            path = path.replace(/^\\//, \"\");\n          }\n\n          this._setReadableStream(fs.createReadStream(path, {\n            start,\n            end: end - 1\n          }));\n        }\n\n      }\n      /***/\n\n    },\n    /* 23 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.createResponseStatusError = createResponseStatusError;\n      exports.extractFilenameFromHeader = extractFilenameFromHeader;\n      exports.validateRangeRequestCapabilities = validateRangeRequestCapabilities;\n      exports.validateResponseStatus = validateResponseStatus;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _content_disposition = __w_pdfjs_require__(24);\n\n      function validateRangeRequestCapabilities(_ref24) {\n        let {\n          getResponseHeader,\n          isHttp,\n          rangeChunkSize,\n          disableRange\n        } = _ref24;\n        (0, _util.assert)(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n        const returnValues = {\n          allowRangeRequests: false,\n          suggestedLength: undefined\n        };\n        const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n\n        if (!Number.isInteger(length)) {\n          return returnValues;\n        }\n\n        returnValues.suggestedLength = length;\n\n        if (length <= 2 * rangeChunkSize) {\n          return returnValues;\n        }\n\n        if (disableRange || !isHttp) {\n          return returnValues;\n        }\n\n        if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n          return returnValues;\n        }\n\n        const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n\n        if (contentEncoding !== \"identity\") {\n          return returnValues;\n        }\n\n        returnValues.allowRangeRequests = true;\n        return returnValues;\n      }\n\n      function extractFilenameFromHeader(getResponseHeader) {\n        const contentDisposition = getResponseHeader(\"Content-Disposition\");\n\n        if (contentDisposition) {\n          let filename = (0, _content_disposition.getFilenameFromContentDispositionHeader)(contentDisposition);\n\n          if (filename.includes(\"%\")) {\n            try {\n              filename = decodeURIComponent(filename);\n            } catch (ex) {}\n          }\n\n          if (/\\.pdf$/i.test(filename)) {\n            return filename;\n          }\n        }\n\n        return null;\n      }\n\n      function createResponseStatusError(status, url) {\n        if (status === 404 || status === 0 && url.startsWith(\"file:\")) {\n          return new _util.MissingPDFException('Missing PDF \"' + url + '\".');\n        }\n\n        return new _util.UnexpectedResponseException(\"Unexpected server response (\" + status + ') while retrieving PDF \"' + url + '\".', status);\n      }\n\n      function validateResponseStatus(status) {\n        return status === 200 || status === 206;\n      }\n      /***/\n\n    },\n    /* 24 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.getFilenameFromContentDispositionHeader = getFilenameFromContentDispositionHeader;\n\n      function getFilenameFromContentDispositionHeader(contentDisposition) {\n        let needsEncodingFixup = true;\n        let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n\n        if (tmp) {\n          tmp = tmp[1];\n          let filename = rfc2616unquote(tmp);\n          filename = unescape(filename);\n          filename = rfc5987decode(filename);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n\n        tmp = rfc2231getparam(contentDisposition);\n\n        if (tmp) {\n          const filename = rfc2047decode(tmp);\n          return fixupEncoding(filename);\n        }\n\n        tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n\n        if (tmp) {\n          tmp = tmp[1];\n          let filename = rfc2616unquote(tmp);\n          filename = rfc2047decode(filename);\n          return fixupEncoding(filename);\n        }\n\n        function toParamRegExp(attributePattern, flags) {\n          return new RegExp(\"(?:^|;)\\\\s*\" + attributePattern + \"\\\\s*=\\\\s*\" + \"(\" + '[^\";\\\\s][^;\\\\s]*' + \"|\" + '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' + \")\", flags);\n        }\n\n        function textdecode(encoding, value) {\n          if (encoding) {\n            if (!/^[\\x00-\\xFF]+$/.test(value)) {\n              return value;\n            }\n\n            try {\n              const decoder = new TextDecoder(encoding, {\n                fatal: true\n              });\n              const bytes = Array.from(value, function (ch) {\n                return ch.charCodeAt(0) & 0xff;\n              });\n              value = decoder.decode(new Uint8Array(bytes));\n              needsEncodingFixup = false;\n            } catch (e) {\n              if (/^utf-?8$/i.test(encoding)) {\n                try {\n                  value = decodeURIComponent(escape(value));\n                  needsEncodingFixup = false;\n                } catch (err) {}\n              }\n            }\n          }\n\n          return value;\n        }\n\n        function fixupEncoding(value) {\n          if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n            value = textdecode(\"utf-8\", value);\n\n            if (needsEncodingFixup) {\n              value = textdecode(\"iso-8859-1\", value);\n            }\n          }\n\n          return value;\n        }\n\n        function rfc2231getparam(contentDispositionStr) {\n          const matches = [];\n          let match;\n          const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n\n          while ((match = iter.exec(contentDispositionStr)) !== null) {\n            let [, n, quot, part] = match;\n            n = parseInt(n, 10);\n\n            if (n in matches) {\n              if (n === 0) {\n                break;\n              }\n\n              continue;\n            }\n\n            matches[n] = [quot, part];\n          }\n\n          const parts = [];\n\n          for (let n = 0; n < matches.length; ++n) {\n            if (!(n in matches)) {\n              break;\n            }\n\n            let [quot, part] = matches[n];\n            part = rfc2616unquote(part);\n\n            if (quot) {\n              part = unescape(part);\n\n              if (n === 0) {\n                part = rfc5987decode(part);\n              }\n            }\n\n            parts.push(part);\n          }\n\n          return parts.join(\"\");\n        }\n\n        function rfc2616unquote(value) {\n          if (value.startsWith('\"')) {\n            const parts = value.slice(1).split('\\\\\"');\n\n            for (let i = 0; i < parts.length; ++i) {\n              const quotindex = parts[i].indexOf('\"');\n\n              if (quotindex !== -1) {\n                parts[i] = parts[i].slice(0, quotindex);\n                parts.length = i + 1;\n              }\n\n              parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n            }\n\n            value = parts.join('\"');\n          }\n\n          return value;\n        }\n\n        function rfc5987decode(extvalue) {\n          const encodingend = extvalue.indexOf(\"'\");\n\n          if (encodingend === -1) {\n            return extvalue;\n          }\n\n          const encoding = extvalue.slice(0, encodingend);\n          const langvalue = extvalue.slice(encodingend + 1);\n          const value = langvalue.replace(/^[^']*'/, \"\");\n          return textdecode(encoding, value);\n        }\n\n        function rfc2047decode(value) {\n          if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n            return value;\n          }\n\n          return value.replace(/=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g, function (matches, charset, encoding, text) {\n            if (encoding === \"q\" || encoding === \"Q\") {\n              text = text.replace(/_/g, \" \");\n              text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n                return String.fromCharCode(parseInt(hex, 16));\n              });\n              return textdecode(charset, text);\n            }\n\n            try {\n              text = atob(text);\n            } catch (e) {}\n\n            return textdecode(charset, text);\n          });\n        }\n\n        return \"\";\n      }\n      /***/\n\n    },\n    /* 25 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFNetworkStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _network_utils = __w_pdfjs_require__(23);\n\n      ;\n      const OK_RESPONSE = 200;\n      const PARTIAL_CONTENT_RESPONSE = 206;\n\n      function getArrayBuffer(xhr) {\n        const data = xhr.response;\n\n        if (typeof data !== \"string\") {\n          return data;\n        }\n\n        const array = (0, _util.stringToBytes)(data);\n        return array.buffer;\n      }\n\n      class NetworkManager {\n        constructor(url, args) {\n          this.url = url;\n          args = args || {};\n          this.isHttp = /^https?:/i.test(url);\n          this.httpHeaders = this.isHttp && args.httpHeaders || {};\n          this.withCredentials = args.withCredentials || false;\n\n          this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n            return new XMLHttpRequest();\n          };\n\n          this.currXhrId = 0;\n          this.pendingRequests = Object.create(null);\n        }\n\n        requestRange(begin, end, listeners) {\n          const args = {\n            begin,\n            end\n          };\n\n          for (const prop in listeners) {\n            args[prop] = listeners[prop];\n          }\n\n          return this.request(args);\n        }\n\n        requestFull(listeners) {\n          return this.request(listeners);\n        }\n\n        request(args) {\n          const xhr = this.getXhr();\n          const xhrId = this.currXhrId++;\n          const pendingRequest = this.pendingRequests[xhrId] = {\n            xhr\n          };\n          xhr.open(\"GET\", this.url);\n          xhr.withCredentials = this.withCredentials;\n\n          for (const property in this.httpHeaders) {\n            const value = this.httpHeaders[property];\n\n            if (typeof value === \"undefined\") {\n              continue;\n            }\n\n            xhr.setRequestHeader(property, value);\n          }\n\n          if (this.isHttp && \"begin\" in args && \"end\" in args) {\n            xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n            pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n          } else {\n            pendingRequest.expectedStatus = OK_RESPONSE;\n          }\n\n          xhr.responseType = \"arraybuffer\";\n\n          if (args.onError) {\n            xhr.onerror = function (evt) {\n              args.onError(xhr.status);\n            };\n          }\n\n          xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n          xhr.onprogress = this.onProgress.bind(this, xhrId);\n          pendingRequest.onHeadersReceived = args.onHeadersReceived;\n          pendingRequest.onDone = args.onDone;\n          pendingRequest.onError = args.onError;\n          pendingRequest.onProgress = args.onProgress;\n          xhr.send(null);\n          return xhrId;\n        }\n\n        onProgress(xhrId, evt) {\n          const pendingRequest = this.pendingRequests[xhrId];\n\n          if (!pendingRequest) {\n            return;\n          }\n\n          if (pendingRequest.onProgress) {\n            pendingRequest.onProgress(evt);\n          }\n        }\n\n        onStateChange(xhrId, evt) {\n          const pendingRequest = this.pendingRequests[xhrId];\n\n          if (!pendingRequest) {\n            return;\n          }\n\n          const xhr = pendingRequest.xhr;\n\n          if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n            pendingRequest.onHeadersReceived();\n            delete pendingRequest.onHeadersReceived;\n          }\n\n          if (xhr.readyState !== 4) {\n            return;\n          }\n\n          if (!(xhrId in this.pendingRequests)) {\n            return;\n          }\n\n          delete this.pendingRequests[xhrId];\n\n          if (xhr.status === 0 && this.isHttp) {\n            if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n\n            return;\n          }\n\n          const xhrStatus = xhr.status || OK_RESPONSE;\n          const ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n          if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n            if (pendingRequest.onError) {\n              pendingRequest.onError(xhr.status);\n            }\n\n            return;\n          }\n\n          const chunk = getArrayBuffer(xhr);\n\n          if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n            const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n            const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n            pendingRequest.onDone({\n              begin: parseInt(matches[1], 10),\n              chunk\n            });\n          } else if (chunk) {\n            pendingRequest.onDone({\n              begin: 0,\n              chunk\n            });\n          } else if (pendingRequest.onError) {\n            pendingRequest.onError(xhr.status);\n          }\n        }\n\n        getRequestXhr(xhrId) {\n          return this.pendingRequests[xhrId].xhr;\n        }\n\n        isPendingRequest(xhrId) {\n          return xhrId in this.pendingRequests;\n        }\n\n        abortRequest(xhrId) {\n          const xhr = this.pendingRequests[xhrId].xhr;\n          delete this.pendingRequests[xhrId];\n          xhr.abort();\n        }\n\n      }\n\n      class PDFNetworkStream {\n        constructor(source) {\n          this._source = source;\n          this._manager = new NetworkManager(source.url, {\n            httpHeaders: source.httpHeaders,\n            withCredentials: source.withCredentials\n          });\n          this._rangeChunkSize = source.rangeChunkSize;\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        _onRangeRequestReaderClosed(reader) {\n          const i = this._rangeRequestReaders.indexOf(reader);\n\n          if (i >= 0) {\n            this._rangeRequestReaders.splice(i, 1);\n          }\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFNetworkStream.getFullReader can only be called once.\");\n          this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._source);\n          return this._fullRequestReader;\n        }\n\n        getRangeReader(begin, end) {\n          const reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n          reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n\n          this._rangeRequestReaders.push(reader);\n\n          return reader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeRequestReaders.slice(0);\n\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n\n      }\n\n      exports.PDFNetworkStream = PDFNetworkStream;\n\n      class PDFNetworkStreamFullRequestReader {\n        constructor(manager, source) {\n          this._manager = manager;\n          const args = {\n            onHeadersReceived: this._onHeadersReceived.bind(this),\n            onDone: this._onDone.bind(this),\n            onError: this._onError.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._url = source.url;\n          this._fullRequestId = manager.requestFull(args);\n          this._headersReceivedCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._contentLength = source.length;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          this._isStreamingSupported = false;\n          this._isRangeSupported = false;\n          this._cachedChunks = [];\n          this._requests = [];\n          this._done = false;\n          this._storedError = undefined;\n          this._filename = null;\n          this.onProgress = null;\n        }\n\n        _onHeadersReceived() {\n          const fullRequestXhrId = this._fullRequestId;\n\n          const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n          const getResponseHeader = name => {\n            return fullRequestXhr.getResponseHeader(name);\n          };\n\n          const {\n            allowRangeRequests,\n            suggestedLength\n          } = (0, _network_utils.validateRangeRequestCapabilities)({\n            getResponseHeader,\n            isHttp: this._manager.isHttp,\n            rangeChunkSize: this._rangeChunkSize,\n            disableRange: this._disableRange\n          });\n\n          if (allowRangeRequests) {\n            this._isRangeSupported = true;\n          }\n\n          this._contentLength = suggestedLength || this._contentLength;\n          this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n          if (this._isRangeSupported) {\n            this._manager.abortRequest(fullRequestXhrId);\n          }\n\n          this._headersReceivedCapability.resolve();\n        }\n\n        _onDone(args) {\n          if (args) {\n            if (this._requests.length > 0) {\n              const requestCapability = this._requests.shift();\n\n              requestCapability.resolve({\n                value: args.chunk,\n                done: false\n              });\n            } else {\n              this._cachedChunks.push(args.chunk);\n            }\n          }\n\n          this._done = true;\n\n          if (this._cachedChunks.length > 0) {\n            return;\n          }\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n        }\n\n        _onError(status) {\n          const url = this._url;\n          const exception = (0, _network_utils.createResponseStatusError)(status, url);\n          this._storedError = exception;\n\n          this._headersReceivedCapability.reject(exception);\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.reject(exception);\n          });\n\n          this._requests = [];\n          this._cachedChunks = [];\n        }\n\n        _onProgress(data) {\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: data.loaded,\n              total: data.lengthComputable ? data.total : this._contentLength\n            });\n          }\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        get contentLength() {\n          return this._contentLength;\n        }\n\n        get headersReady() {\n          return this._headersReceivedCapability.promise;\n        }\n\n        async read() {\n          if (this._storedError) {\n            throw this._storedError;\n          }\n\n          if (this._cachedChunks.length > 0) {\n            const chunk = this._cachedChunks.shift();\n\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._headersReceivedCapability.reject(reason);\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          if (this._manager.isPendingRequest(this._fullRequestId)) {\n            this._manager.abortRequest(this._fullRequestId);\n          }\n\n          this._fullRequestReader = null;\n        }\n\n      }\n\n      class PDFNetworkStreamRangeRequestReader {\n        constructor(manager, begin, end) {\n          this._manager = manager;\n          const args = {\n            onDone: this._onDone.bind(this),\n            onProgress: this._onProgress.bind(this)\n          };\n          this._requestId = manager.requestRange(begin, end, args);\n          this._requests = [];\n          this._queuedChunk = null;\n          this._done = false;\n          this.onProgress = null;\n          this.onClosed = null;\n        }\n\n        _close() {\n          if (this.onClosed) {\n            this.onClosed(this);\n          }\n        }\n\n        _onDone(data) {\n          const chunk = data.chunk;\n\n          if (this._requests.length > 0) {\n            const requestCapability = this._requests.shift();\n\n            requestCapability.resolve({\n              value: chunk,\n              done: false\n            });\n          } else {\n            this._queuedChunk = chunk;\n          }\n\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          this._close();\n        }\n\n        _onProgress(evt) {\n          if (!this.isStreamingSupported && this.onProgress) {\n            this.onProgress({\n              loaded: evt.loaded\n            });\n          }\n        }\n\n        get isStreamingSupported() {\n          return false;\n        }\n\n        async read() {\n          if (this._queuedChunk !== null) {\n            const chunk = this._queuedChunk;\n            this._queuedChunk = null;\n            return {\n              value: chunk,\n              done: false\n            };\n          }\n\n          if (this._done) {\n            return {\n              value: undefined,\n              done: true\n            };\n          }\n\n          const requestCapability = (0, _util.createPromiseCapability)();\n\n          this._requests.push(requestCapability);\n\n          return requestCapability.promise;\n        }\n\n        cancel(reason) {\n          this._done = true;\n\n          this._requests.forEach(function (requestCapability) {\n            requestCapability.resolve({\n              value: undefined,\n              done: true\n            });\n          });\n\n          this._requests = [];\n\n          if (this._manager.isPendingRequest(this._requestId)) {\n            this._manager.abortRequest(this._requestId);\n          }\n\n          this._close();\n        }\n\n      }\n      /***/\n\n    },\n    /* 26 */\n\n    /***/\n    function (module, exports, __w_pdfjs_require__) {\n      \"use strict\";\n\n      Object.defineProperty(exports, \"__esModule\", {\n        value: true\n      });\n      exports.PDFFetchStream = void 0;\n\n      var _util = __w_pdfjs_require__(2);\n\n      var _network_utils = __w_pdfjs_require__(23);\n\n      ;\n\n      function createFetchOptions(headers, withCredentials, abortController) {\n        return {\n          method: \"GET\",\n          headers,\n          signal: abortController && abortController.signal,\n          mode: \"cors\",\n          credentials: withCredentials ? \"include\" : \"same-origin\",\n          redirect: \"follow\"\n        };\n      }\n\n      function createHeaders(httpHeaders) {\n        const headers = new Headers();\n\n        for (const property in httpHeaders) {\n          const value = httpHeaders[property];\n\n          if (typeof value === \"undefined\") {\n            continue;\n          }\n\n          headers.append(property, value);\n        }\n\n        return headers;\n      }\n\n      class PDFFetchStream {\n        constructor(source) {\n          this.source = source;\n          this.isHttp = /^https?:/i.test(source.url);\n          this.httpHeaders = this.isHttp && source.httpHeaders || {};\n          this._fullRequestReader = null;\n          this._rangeRequestReaders = [];\n        }\n\n        get _progressiveDataLength() {\n          return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n        }\n\n        getFullReader() {\n          (0, _util.assert)(!this._fullRequestReader, \"PDFFetchStream.getFullReader can only be called once.\");\n          this._fullRequestReader = new PDFFetchStreamReader(this);\n          return this._fullRequestReader;\n        }\n\n        getRangeReader(begin, end) {\n          if (end <= this._progressiveDataLength) {\n            return null;\n          }\n\n          const reader = new PDFFetchStreamRangeReader(this, begin, end);\n\n          this._rangeRequestReaders.push(reader);\n\n          return reader;\n        }\n\n        cancelAllRequests(reason) {\n          if (this._fullRequestReader) {\n            this._fullRequestReader.cancel(reason);\n          }\n\n          const readers = this._rangeRequestReaders.slice(0);\n\n          readers.forEach(function (reader) {\n            reader.cancel(reason);\n          });\n        }\n\n      }\n\n      exports.PDFFetchStream = PDFFetchStream;\n\n      class PDFFetchStreamReader {\n        constructor(stream) {\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          this._filename = null;\n          const source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._contentLength = source.length;\n          this._headersCapability = (0, _util.createPromiseCapability)();\n          this._disableRange = source.disableRange || false;\n          this._rangeChunkSize = source.rangeChunkSize;\n\n          if (!this._rangeChunkSize && !this._disableRange) {\n            this._disableRange = true;\n          }\n\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n\n          this._isStreamingSupported = !source.disableStream;\n          this._isRangeSupported = !source.disableRange;\n          this._headers = createHeaders(this._stream.httpHeaders);\n          const url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n\n            this._reader = response.body.getReader();\n\n            this._headersCapability.resolve();\n\n            const getResponseHeader = name => {\n              return response.headers.get(name);\n            };\n\n            const {\n              allowRangeRequests,\n              suggestedLength\n            } = (0, _network_utils.validateRangeRequestCapabilities)({\n              getResponseHeader,\n              isHttp: this._stream.isHttp,\n              rangeChunkSize: this._rangeChunkSize,\n              disableRange: this._disableRange\n            });\n            this._isRangeSupported = allowRangeRequests;\n            this._contentLength = suggestedLength || this._contentLength;\n            this._filename = (0, _network_utils.extractFilenameFromHeader)(getResponseHeader);\n\n            if (!this._isStreamingSupported && this._isRangeSupported) {\n              this.cancel(new _util.AbortException(\"Streaming is disabled.\"));\n            }\n          }).catch(this._headersCapability.reject);\n          this.onProgress = null;\n        }\n\n        get headersReady() {\n          return this._headersCapability.promise;\n        }\n\n        get filename() {\n          return this._filename;\n        }\n\n        get contentLength() {\n          return this._contentLength;\n        }\n\n        get isRangeSupported() {\n          return this._isRangeSupported;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._headersCapability.promise;\n          const {\n            value,\n            done\n          } = await this._reader.read();\n\n          if (done) {\n            return {\n              value,\n              done\n            };\n          }\n\n          this._loaded += value.byteLength;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded,\n              total: this._contentLength\n            });\n          }\n\n          const buffer = new Uint8Array(value).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n\n      }\n\n      class PDFFetchStreamRangeReader {\n        constructor(stream, begin, end) {\n          this._stream = stream;\n          this._reader = null;\n          this._loaded = 0;\n          const source = stream.source;\n          this._withCredentials = source.withCredentials || false;\n          this._readCapability = (0, _util.createPromiseCapability)();\n          this._isStreamingSupported = !source.disableStream;\n\n          if (typeof AbortController !== \"undefined\") {\n            this._abortController = new AbortController();\n          }\n\n          this._headers = createHeaders(this._stream.httpHeaders);\n\n          this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n          const url = source.url;\n          fetch(url, createFetchOptions(this._headers, this._withCredentials, this._abortController)).then(response => {\n            if (!(0, _network_utils.validateResponseStatus)(response.status)) {\n              throw (0, _network_utils.createResponseStatusError)(response.status, url);\n            }\n\n            this._readCapability.resolve();\n\n            this._reader = response.body.getReader();\n          }).catch(reason => {\n            if (reason && reason.name === \"AbortError\") {\n              return;\n            }\n\n            throw reason;\n          });\n          this.onProgress = null;\n        }\n\n        get isStreamingSupported() {\n          return this._isStreamingSupported;\n        }\n\n        async read() {\n          await this._readCapability.promise;\n          const {\n            value,\n            done\n          } = await this._reader.read();\n\n          if (done) {\n            return {\n              value,\n              done\n            };\n          }\n\n          this._loaded += value.byteLength;\n\n          if (this.onProgress) {\n            this.onProgress({\n              loaded: this._loaded\n            });\n          }\n\n          const buffer = new Uint8Array(value).buffer;\n          return {\n            value: buffer,\n            done: false\n          };\n        }\n\n        cancel(reason) {\n          if (this._reader) {\n            this._reader.cancel(reason);\n          }\n\n          if (this._abortController) {\n            this._abortController.abort();\n          }\n        }\n\n      }\n      /***/\n\n    }\n    /******/\n    ])\n  );\n});","map":{"version":3,"sources":["webpack://pdfjs-dist/build/pdf/webpack/universalModuleDefinition","webpack://pdfjs-dist/build/pdf/webpack/bootstrap","webpack://pdfjs-dist/build/pdf/src/pdf.js","webpack://pdfjs-dist/build/pdf/src/display/display_utils.js","webpack://pdfjs-dist/build/pdf/src/shared/util.js","webpack://pdfjs-dist/build/pdf/src/shared/compatibility.js","webpack://pdfjs-dist/build/pdf/src/shared/is_node.js","webpack://pdfjs-dist/build/pdf/src/display/api.js","webpack://pdfjs-dist/build/pdf/src/display/font_loader.js","webpack://pdfjs-dist/build/pdf/src/display/node_utils.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_storage.js","webpack://pdfjs-dist/build/pdf/src/display/api_compatibility.js","webpack://pdfjs-dist/build/pdf/src/display/canvas.js","webpack://pdfjs-dist/build/pdf/src/display/pattern_helper.js","webpack://pdfjs-dist/build/pdf/src/display/worker_options.js","webpack://pdfjs-dist/build/pdf/src/shared/message_handler.js","webpack://pdfjs-dist/build/pdf/src/display/metadata.js","webpack://pdfjs-dist/build/pdf/src/display/xml_parser.js","webpack://pdfjs-dist/build/pdf/src/display/optional_content_config.js","webpack://pdfjs-dist/build/pdf/src/display/transport_stream.js","webpack://pdfjs-dist/build/pdf/src/display/webgl.js","webpack://pdfjs-dist/build/pdf/src/display/annotation_layer.js","webpack://pdfjs-dist/build/pdf/src/display/text_layer.js","webpack://pdfjs-dist/build/pdf/src/display/svg.js","webpack://pdfjs-dist/build/pdf/src/display/node_stream.js","webpack://pdfjs-dist/build/pdf/src/display/network_utils.js","webpack://pdfjs-dist/build/pdf/src/display/content_disposition.js","webpack://pdfjs-dist/build/pdf/src/display/network.js","webpack://pdfjs-dist/build/pdf/src/display/fetch_stream.js"],"names":["pdfjsVersion","pdfjsBuild","require","PDFNodeStream","setPDFNetworkStreamFactory","params","PDFNetworkStream","PDFFetchStream","isValidFetchUrl","DEFAULT_LINK_REL","SVG_NS","constructor","unreachable","create","reset","canvasAndContext","width","height","destroy","ownerDocument","globalThis","canvas","context","baseUrl","isCompressed","url","compressionType","CMapCompressionType","reason","_fetchData","isFetchSupported","document","response","cMapData","stringToBytes","request","XMLHttpRequest","resolve","reject","assert","svg","createElement","offsetX","offsetY","dontFlip","centerX","viewBox","centerY","rotation","rotateA","rotateB","rotateC","rotateD","offsetCanvasX","Math","offsetCanvasY","clone","scale","convertToViewportPoint","convertToViewportRectangle","topLeft","rect","bottomRight","convertToPdfPoint","LinkTarget","NONE","SELF","BLANK","PARENT","TOP","enabled","urlNullRemoved","removeNullCharacters","link","targetStr","anchor","query","end","Object","time","name","warn","Date","timeEnd","start","toString","outBuf","longest","duration","Response","protocol","script","console","isString","pdfDateStringRegex","matches","year","parseInt","month","day","hour","minute","second","universalTimeRelation","offsetHour","offsetMinute","IDENTITY_MATRIX","FONT_IDENTITY_MATRIX","PermissionFlag","PRINT","MODIFY_CONTENTS","COPY","MODIFY_ANNOTATIONS","FILL_INTERACTIVE_FORMS","COPY_FOR_ACCESSIBILITY","ASSEMBLE","PRINT_HIGH_QUALITY","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationStateModelType","MARKED","REVIEW","AnnotationMarkedState","UNMARKED","AnnotationReviewState","ACCEPTED","REJECTED","CANCELLED","COMPLETED","AnnotationReplyType","GROUP","REPLY","AnnotationFlag","HIDDEN","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RLX","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","VerbosityLevel","ERRORS","WARNINGS","INFOS","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","errorTilingPattern","errorExtGState","errorXObject","errorFontLoadType3","errorFontState","errorFontMissing","errorFontTranslate","errorColorSpace","errorOperatorList","errorFontToUnicode","errorFontLoadNative","errorFontGetPath","errorMarkedContent","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","verbosity","Number","base","other","absoluteUrl","_isValidProtocol","enumerable","configurable","writable","BaseException","NullCharactersRegExp","str","bytes","length","MAX_ARGUMENT_COUNT","String","strBuf","i","chunkEnd","chunk","arr","resultLength","arrayByteLength","pos","data","item","itemLength","value","buffer8","view32","IsLittleEndianCached","shadow","isLittleEndian","IsEvalSupportedCached","isEvalSupported","rgbBuf","m1","m2","xt","p","m","yt","d","p1","Util","p2","r","p3","p4","v","transpose","a","b","c","first","sx","sy","orderedX","rect1","rect2","orderedY","result","PDFStringTranslateTable","code","decodeURIComponent","escape","unescape","encodeURIComponent","arr1","arr2","element","date","buffer","capability","isSettled","get","createObjectURL","digits","forceDataSchema","URL","blob","type","ii","b1","b2","b3","d1","d2","d3","d4","isNodeJS","process","DEFAULT_RANGE_CHUNK_SIZE","RENDERING_CANCELLED_TIMEOUT","DefaultCanvasFactory","DefaultCMapReaderFactory","createPDFNetworkStream","task","source","isArrayBuffer","src","range","rangeTransport","worker","key","window","pdfBytes","isNaN","apiCompatibilityParams","setVerbosityLevel","workerParams","port","GlobalWorkerOptions","PDFWorker","docId","workerIdPromise","_fetchDocument","networkStreamPromise","networkStream","initialData","progressiveDone","disableRange","disableStream","httpHeaders","withCredentials","rangeChunkSize","messageHandler","transport","Promise","pdfDataRangeTransport","apiVersion","password","disableAutoFetch","maxImageSize","disableFontFace","postMessageTransfers","docBaseUrl","ignoreErrors","fontExtraProperties","PDFDocumentLoadingTask","nextDocumentId","transportDestroyed","addRangeListener","addProgressListener","addProgressiveReadListener","addProgressiveDoneListener","onDataRange","listener","onDataProgress","onDataProgressiveRead","onDataProgressiveDone","transportReady","requestDataRange","abort","getPage","getPageIndex","getDestinations","getDestination","getPageLabels","getPageLayout","getPageMode","getViewerPreferences","getOpenAction","getAttachments","getJavaScript","getOutline","getOptionalContentConfig","getPermissions","getMetadata","getData","getDownloadInfo","getStats","cleanup","saveDocument","pdfBug","getViewport","getAnnotations","intent","render","enableWebGL","renderInteractiveForms","imageLayer","canvasFactory","background","annotationStorage","optionalContentConfigPromise","renderingIntent","intentState","clearTimeout","canvasFactoryInstance","webGLContext","enable","fnArray","argsArray","lastChunk","pageIndex","complete","error","internalRenderTask","callback","objs","commonObjs","operatorList","useRequestAnimationFrame","renderTask","getOperatorList","opListTask","streamTextContent","normalizeWhitespace","disableCombineTextItems","TEXT_CONTENT_CHUNK_SIZE","combineTextItems","highWaterMark","size","textContent","getTextContent","readableStream","reader","pump","items","styles","_destroy","waitOn","force","resetStats","_tryCleanup","renderTasks","_startRenderPage","_renderPageChunk","operatorListChunk","_pumpOperatorList","args","_abortOperatorList","curIntentState","defer","postMessage","cloned","transferable","transfers","Array","desc","cloneValue","e","addEventListener","removeEventListener","terminate","pdfWorkerPorts","isWorkerDisabled","nextFakeWorkerId","fallbackWorkerSrc","pdfjsFilePath","deprecated","mainWorkerMessageHandler","fakeWorkerCapability","loader","getMainThreadWorkerMessageHandler","eval","getWorkerSrc","loadScript","wrapper","_initializeFromPort","_initialize","workerSrc","isSameOrigin","createCDNWrapper","terminateEarly","onWorkerError","sendTest","testObj","info","_setupFakeWorker","setupFakeWorkerGlobal","WorkerMessageHandler","id","workerHandler","loadingTask","onUnsupportedFeature","page","terminated","setupMessageHandler","evt","loaded","total","sink","readyReason","headersCapability","fullReader","isStreamingSupported","isRangeSupported","contentLength","rangeReader","pdfInfo","ex","msg","exception","updatePassword","exportedError","exportedData","fontRegistry","registerFont","pageProxy","MAX_IMAGE_SIZE_TO_STORE","imageData","fetched","builtInCMap","_onUnsupportedFeature","pageNumber","promise","pageInfo","numPages","filename","results","metadata","contentDispositionFilename","startCleanup","cleanupSuccessful","_ensureObj","resolved","obj","has","clear","cancel","InternalRenderTask","canvasInRendering","initializeGraphics","transparency","operatorListChanged","_continue","_scheduleNext","version","build","addNativeFontFace","insertRule","styleElement","styleSheet","nativeFontFace","featureId","rule","_queueLoadingCallback","supported","_prepareFontLoadEvent","FontLoader","requests","nextRequestId","navigator","otherRequest","setTimeout","done","getLoadTestFont","atob","offset","chunk1","s","chunk2","ctx","called","isFontReady","loadTestFontId","COMMENT_OFFSET","spliceString","CFF_CHECKSUM_OFFSET","XXXX_VALUE","checksum","int32","string32","btoa","names","fonts","div","span","translatedData","createNativeFontFace","createFontFaceRule","bytesToString","getPathGenerator","cmds","js","current","NodeCanvasFactory","NodeCMapReaderFactory","Canvas","__non_webpack_require__","fs","getOrCreateValue","setValue","getAll","_setModified","resetModified","compatibilityParams","MIN_FONT_SIZE","MAX_FONT_SIZE","MAX_GROUP_SIZE","MIN_WIDTH_FACTOR","COMPILE_TYPE3_GLYPHS","MAX_SIZE_TO_COMPILE","FULL_CHUNK_HEIGHT","f","ad_bc","bc_ad","old","prev","cosValue","sinValue","CachedCanvases","getCanvas","canvasEntry","addContextCurrentTransform","POINT_TO_PROCESS_LIMIT","imgData","width1","points","POINT_TYPES","lineSize","data0","mask","elem","count","j","j0","sum","steps","outlines","coords","p0","step","pp","drawOutline","k","kk","o","l","ll","CanvasExtraState","setCurrentPoint","CanvasGraphics","EXECUTION_TIME","EXECUTION_STEPS","transferMaps","partialChunkHeight","fullChunks","totalChunks","chunkImgData","srcPos","dest","transferMapRed","transferMapGreen","transferMapBlue","transferMapGray","srcLength","dest32","dest32DataLength","fullSrcDiff","white","black","thisChunkHeight","destPos","srcDiff","kEnd","kEndUnrolled","srcByte","hasTransferMaps","elemsInThisChunk","properties","property","sourceCtx","destCtx","alpha","alpha_","r0","g0","b0","maskData","transferMap","layerData","y","hasBackdrop","backdrop","subtype","composeFn","PIXELS_TO_PROCESS","chunkSize","row","chunkHeight","maskCtx","layerCtx","composeSMaskBackdrop","composed","layer","genericComposeSMask","LINE_CAP_STYLES","LINE_JOIN_STYLES","NORMAL_CLIP","EO_CLIP","beginDrawing","transparentCanvas","resetCtxToDefault","viewport","executeOperatorList","executionStartIdx","argsArrayLen","chunkOperations","endTime","stepper","fnId","objsPool","depObjId","continueCallback","endDrawing","states","state","beginSMaskGroup","activeSMask","drawnWidth","drawnHeight","cacheId","scratchCanvas","currentCtx","currentTransform","groupCtx","copyCtxState","suspendSMaskGroup","composeSMask","deltaTransform","resumeSMaskGroup","endSMaskGroup","x","ops","xw","yh","consumePath","strokeColor","fillColor","isPatternFill","needRestore","paths","path","fontObj","bold","italic","typeface","browserFontSize","paintChar","textRenderingMode","fontSize","fillStrokeMode","isAddToPathSet","patternFill","addToPath","fontSizeScale","charSpacing","wordSpacing","fontDirection","textHScale","glyphsLength","glyphs","vertical","spacingDir","defaultVMetrics","widthAdvanceScale","simpleFillText","pattern","patternTransform","lineWidth","glyph","isNum","restoreNeeded","spacing","character","accent","vmetric","vx","vy","scaledX","scaledY","measuredWidth","characterScaleX","scaledAccentX","scaledAccentY","charWidth","showType3Text","fontMatrix","isTextInvisible","spacingLength","transformed","urx","ury","getColorN_Pattern","IR","color","baseTransform","canvasGraphicsFactory","createCanvasGraphics","getShadingPatternFromIR","inv","bl","br","ul","ur","x0","y0","x1","y1","matrix","bbox","group","bounds","canvasBounds","scaleX","scaleY","startTransformInverse","img","maskCanvas","putBinaryImageMask","skewX","skewY","positions","images","image","objId","map","w","h","widthScale","heightScale","imgToPaint","tmpCanvas","tmpCtx","putBinaryImageData","paintWidth","paintHeight","tmpCanvasId","newWidth","newHeight","position","left","top","entry","visible","tag","getSinglePixelWidth","inverse","getCanvasPosition","isContentVisible","ShadingIRs","region","fromIR","raw","colorStops","r1","getPattern","applyBoundingBox","grad","createMeshCanvas","colors","rowSize","tmp","c1","c2","c3","x2","y2","x3","y3","c1r","c1g","c1b","c2r","c2g","c2b","c3r","c3g","c3b","minY","maxY","xa","car","cag","cab","xb","cbr","cbg","cbb","x1_","x2_","ps","figure","cs","verticesPerRow","rows","cols","q","drawTriangle","EXPECTED_SCALE","MAX_PATTERN_SIZE","BORDER_SIZE","boundsWidth","boundsHeight","combinesScale","paddedWidth","paddedHeight","cachedCanvases","backgroundColor","figures","drawFigure","owner","matrixScale","temporaryPatternCanvas","shadingIR","TilingPattern","PaintType","COLORED","UNCOLORED","createPatternCanvas","xstep","ystep","paintType","tilingType","curMatrixScale","combinedScale","dimx","dimy","graphics","getSizeAndScale","maxSize","clipBbox","bboxWidth","bboxHeight","setFillAndStrokeStyleToContext","cssColor","CallbackKind","DATA","ERROR","StreamKind","CANCEL","CANCEL_COMPLETE","CLOSE","ENQUEUE","PULL","PULL_COMPLETE","START_COMPLETE","event","callbackId","wrapReason","action","cbSourceName","cbTargetName","comObj","sourceName","targetName","on","ah","send","sendWithPromise","sendWithStream","streamId","controller","startCapability","startCall","pullCall","cancelCall","isClosed","desiredSize","pull","pullCapability","stream","cancelCapability","_createStreamSink","self","streamSink","enqueue","lastDesiredSize","close","sinkCapability","onPull","onCancel","isCancelled","ready","success","_processStreamMessage","_postMessage","parser","xmlDocument","_repair","chars","_parse","rdf","nodeName","children","jj","XMLParserErrorCode","NoError","EndOfDocument","UnterminatedCdat","UnterminatedXmlDeclaration","UnterminatedDoctypeDeclaration","UnterminatedComment","MalformedElement","OutOfMemory","UnterminatedAttributeValue","UnterminatedElement","ElementNeverBegun","ch","isWhitespace","_resolveEntities","entity","_parseContent","attributes","skipWs","attrName","attrValue","attrEndChar","attrEndIndex","parsed","_parseProcessingInstruction","attrStart","parseXml","ch2","pi","q2","complexDoctype","doctypeContent","content","text","onResolveEntity","onPi","onComment","onCdata","onDoctype","onText","onBeginElement","onEndElement","onError","childNodes","index","child","hasChildNodes","parseFromString","isWhitespaceString","node","lastElement","isVisible","setVisibility","getOrder","getGroups","getGroup","_onReceiveData","found","_onProgress","firstReader","_onProgressiveDone","_removeRangeReader","getFullReader","queuedChunks","getRangeReader","cancelAllRequests","readers","_enqueue","requestCapability","requestsCapability","WebGLUtils","drawFigures","shader","gl","compiled","errorMsg","loadShader","program","shaders","linked","texture","currentCanvas","currentGL","premultipliedalpha","smaskVertexShaderCode","smaskFragmentShaderCode","smaskCache","generateGL","vertexShader","createVertexShader","fragmentShader","createFragmentShader","cache","texCoordLocation","texLayerLocation","texMaskLocation","texCoordBuffer","initSmaskGL","createTexture","maskTexture","figuresVertexShaderCode","figuresFragmentShaderCode","figuresCache","initFiguresGL","coordsMap","colorsMap","pIndex","cIndex","col","coordsBuffer","colorsBuffer","tryInitGL","parameters","fieldType","isRenderable","ignoreBorder","_createContainer","container","horizontalRadius","verticalRadius","radius","_createPopup","trigger","popupElement","title","modificationDate","contents","hideWrapper","popup","addLinkAttributes","target","linkService","rel","_bindLink","_bindNamedAction","JSON","TEXT_ALIGNMENT","storage","fieldWidth","combWidth","_setTextStyle","style","fontFamily","fallbackName","radio","selectElement","optionElement","option","options","IGNORE_TYPES","selector","parentElement","parentLeft","parseFloat","parentWidth","BACKGROUND_ENLIGHT","g","dateObject","PDFDateString","_formatContents","lines","line","_toggle","_show","pin","_hide","unpin","borderWidth","square","circle","coordinate","polyline","getFilenameFromUrl","stringToPDFString","_download","sortedAnnotations","popupAnnotations","downloadManager","imageResourcesPath","svgFactory","renderTextLayer","MAX_TEXT_DIVS_TO_RENDER","NonWhitespaceRegexp","textDiv","textDivProperties","angle","canvasWidth","originalTransform","paddingBottom","paddingLeft","paddingRight","paddingTop","isAllWhitespace","geom","tx","fontHeight","fontAscent","shouldScaleText","absScaleX","absScaleY","angleCos","angleSin","divWidth","divHeight","right","bottom","textDivs","textDivsLength","t","ts","expanded","expandBounds","divProperties","boxScale","findPositiveMin","box","x1New","x2New","expandBoundsLTR","boxes","fakeBoundary","horizon","boundary","maxXNew","horizonPart","affectedBoundary","xNew","changedHorizon","lastBoundary","useBoundary","used","textContentItemsStr","TextLayerRenderTask","_processItems","len","appendText","_layoutText","_render","styleCache","textItems","textStyles","expandTextDivs","expand","transformBuf","paddingBuf","divProps","renderParameters","textContentStream","enhanceTextSelection","SVGGraphics","SVG_DEFAULTS","fontStyle","fontWeight","XML_NS","XLINK_NS","convertImgDataToPng","PNG_HEADER","CHUNK_WRAPPER_SIZE","crcTable","crc","body","crc32","deflateSyncUncompressed","input","Buffer","output","level","literals","maxBlockLength","deflateBlocks","idat","adler","adler32","colorType","bitDepth","offsetLiterals","offsetBytes","kind","ihdr","deflateSync","pngLength","writePngChunk","encode","opTree","opListElement","fn","pf","clipCount","maskCount","shadingCount","loadDependencies","transformMatrix","getSVG","svgElement","convertOpList","operatorIdMapping","opList","opListToTree","executeOpTree","opTreeElement","lineWidthScale","textMatrix","pm","addFontStyle","details","setStrokeAlpha","setFillAlpha","_makeColorN_Pattern","_makeTilingPattern","tilingId","txstep","tystep","tiling","tx1","ty1","_makeShadingPattern","shadingId","point0","point1","gradient","focalPoint","circlePoint","focalRadius","circleRadius","stop","colorStop","op","clipId","clipPath","clipElement","_setStrokeAttributes","dashArray","imgSrc","cliprect","imgEl","definitions","rootGroup","_ensureClipGroup","clipGroup","_ensureTransformGroup","http","https","fileUriRegex","parsedUrl","parseUrl","_error","_setReadableStream","auth","host","method","handleResponse","getResponseHeader","isHttp","suggestedLength","extractFilenameFromHeader","createRequestOptions","stat","returnValues","allowRangeRequests","contentEncoding","contentDisposition","getFilenameFromContentDispositionHeader","status","needsEncodingFixup","toParamRegExp","rfc2616unquote","rfc5987decode","rfc2047decode","fixupEncoding","rfc2231getparam","decoder","fatal","textdecode","iter","n","parts","part","quotindex","encodingend","extvalue","encoding","langvalue","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","xhr","array","requestRange","listeners","requestFull","xhrId","pendingRequest","onProgress","onStateChange","xhrStatus","ok_response_on_range_request","getArrayBuffer","rangeHeader","begin","getRequestXhr","isPendingRequest","abortRequest","_onRangeRequestReaderClosed","onHeadersReceived","onDone","manager","_onHeadersReceived","fullRequestXhrId","fullRequestXhr","_onDone","_onError","createResponseStatusError","_close","signal","abortController","mode","credentials","redirect","headers","createHeaders","fetch","createFetchOptions","validateResponseStatus"],"mappings":"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","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __w_pdfjs_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__w_pdfjs_require__.m = modules;\n\n \t// expose the module cache\n \t__w_pdfjs_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__w_pdfjs_require__.d = function(exports, name, getter) {\n \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__w_pdfjs_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__w_pdfjs_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __w_pdfjs_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__w_pdfjs_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __w_pdfjs_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__w_pdfjs_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__w_pdfjs_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 0);\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  addLinkAttributes,\n  getFilenameFromUrl,\n  isFetchSupported,\n  isValidFetchUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n} from \"./display/display_utils.js\";\nimport {\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  setPDFNetworkStreamFactory,\n  version,\n} from \"./display/api.js\";\nimport {\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n} from \"./shared/util.js\";\nimport { AnnotationLayer } from \"./display/annotation_layer.js\";\nimport { apiCompatibilityParams } from \"./display/api_compatibility.js\";\nimport { GlobalWorkerOptions } from \"./display/worker_options.js\";\nimport { renderTextLayer } from \"./display/text_layer.js\";\nimport { SVGGraphics } from \"./display/svg.js\";\n\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsVersion =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : void 0;\n/* eslint-disable-next-line no-unused-vars */\nconst pdfjsBuild =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : void 0;\n\nif (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n  const streamsPromise = Promise.all([\n    import(\"pdfjs/display/network.js\"),\n    import(\"pdfjs/display/fetch_stream.js\"),\n  ]);\n  setPDFNetworkStreamFactory(params => {\n    return streamsPromise.then(streams => {\n      const [{ PDFNetworkStream }, { PDFFetchStream }] = streams;\n      if (isFetchSupported() && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  });\n} else if (PDFJSDev.test(\"GENERIC\")) {\n  const { isNodeJS } = require(\"./shared/is_node.js\");\n  if (isNodeJS) {\n    const PDFNodeStream = require(\"./display/node_stream.js\").PDFNodeStream;\n    setPDFNetworkStreamFactory(params => {\n      return new PDFNodeStream(params);\n    });\n  } else {\n    const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n    let PDFFetchStream;\n    if (isFetchSupported()) {\n      PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n    }\n    setPDFNetworkStreamFactory(params => {\n      if (PDFFetchStream && isValidFetchUrl(params.url)) {\n        return new PDFFetchStream(params);\n      }\n      return new PDFNetworkStream(params);\n    });\n  }\n} else if (PDFJSDev.test(\"CHROME\")) {\n  const PDFNetworkStream = require(\"./display/network.js\").PDFNetworkStream;\n  let PDFFetchStream;\n  const isChromeWithFetchCredentials = function () {\n    // fetch does not include credentials until Chrome 61.0.3138.0 and later.\n    // https://chromium.googlesource.com/chromium/src/+/2e231cf052ca5e68e22baf0008ac9e5e29121707\n    try {\n      // Indexed properties on window are read-only in Chrome 61.0.3151.0+\n      // https://chromium.googlesource.com/chromium/src.git/+/58ab4a971b06dec13e4edf9de8382ca6847f6190\n      window[999] = 123; // should throw. Note: JS strict mode MUST be enabled.\n      delete window[999];\n      return false;\n    } catch (e) {\n      return true;\n    }\n  };\n  if (isFetchSupported() && isChromeWithFetchCredentials()) {\n    PDFFetchStream = require(\"./display/fetch_stream.js\").PDFFetchStream;\n  }\n  setPDFNetworkStreamFactory(params => {\n    if (PDFFetchStream && isValidFetchUrl(params.url)) {\n      return new PDFFetchStream(params);\n    }\n    return new PDFNetworkStream(params);\n  });\n}\n\nexport {\n  // From \"./display/display_utils.js\":\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  loadScript,\n  PDFDateString,\n  RenderingCancelledException,\n  // From \"./display/api.js\":\n  build,\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  version,\n  // From \"./shared/util.js\":\n  CMapCompressionType,\n  createObjectURL,\n  createPromiseCapability,\n  createValidAbsoluteUrl,\n  InvalidPDFException,\n  MissingPDFException,\n  OPS,\n  PasswordResponses,\n  PermissionFlag,\n  removeNullCharacters,\n  shadow,\n  UnexpectedResponseException,\n  UNSUPPORTED_FEATURES,\n  Util,\n  VerbosityLevel,\n  // From \"./display/annotation_layer.js\":\n  AnnotationLayer,\n  // From \"./display/api_compatibility.js\":\n  apiCompatibilityParams,\n  // From \"./display/worker_options.js\":\n  GlobalWorkerOptions,\n  // From \"./display/text_layer.js\":\n  renderTextLayer,\n  // From \"./display/svg.js\":\n  SVGGraphics,\n};\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  BaseException,\n  CMapCompressionType,\n  isString,\n  removeNullCharacters,\n  stringToBytes,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\n\nconst DEFAULT_LINK_REL = \"noopener noreferrer nofollow\";\nconst SVG_NS = \"http://www.w3.org/2000/svg\";\n\nclass BaseCanvasFactory {\n  constructor() {\n    if (this.constructor === BaseCanvasFactory) {\n      unreachable(\"Cannot initialize BaseCanvasFactory.\");\n    }\n  }\n\n  create(width, height) {\n    unreachable(\"Abstract method `create` called.\");\n  }\n\n  reset(canvasAndContext, width, height) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    canvasAndContext.canvas.width = width;\n    canvasAndContext.canvas.height = height;\n  }\n\n  destroy(canvasAndContext) {\n    if (!canvasAndContext.canvas) {\n      throw new Error(\"Canvas is not specified\");\n    }\n    // Zeroing the width and height cause Firefox to release graphics\n    // resources immediately, which can greatly reduce memory consumption.\n    canvasAndContext.canvas.width = 0;\n    canvasAndContext.canvas.height = 0;\n    canvasAndContext.canvas = null;\n    canvasAndContext.context = null;\n  }\n}\n\nclass DOMCanvasFactory extends BaseCanvasFactory {\n  constructor({ ownerDocument = globalThis.document } = {}) {\n    super();\n    this._document = ownerDocument;\n  }\n\n  create(width, height) {\n    if (width <= 0 || height <= 0) {\n      throw new Error(\"Invalid canvas size\");\n    }\n    const canvas = this._document.createElement(\"canvas\");\n    const context = canvas.getContext(\"2d\");\n    canvas.width = width;\n    canvas.height = height;\n    return {\n      canvas,\n      context,\n    };\n  }\n}\n\nclass BaseCMapReaderFactory {\n  constructor({ baseUrl = null, isCompressed = false }) {\n    if (this.constructor === BaseCMapReaderFactory) {\n      unreachable(\"Cannot initialize BaseCMapReaderFactory.\");\n    }\n    this.baseUrl = baseUrl;\n    this.isCompressed = isCompressed;\n  }\n\n  async fetch({ name }) {\n    if (!this.baseUrl) {\n      throw new Error(\n        'The CMap \"baseUrl\" parameter must be specified, ensure that ' +\n          'the \"cMapUrl\" and \"cMapPacked\" API parameters are provided.'\n      );\n    }\n    if (!name) {\n      throw new Error(\"CMap name must be specified.\");\n    }\n    const url = this.baseUrl + name + (this.isCompressed ? \".bcmap\" : \"\");\n    const compressionType = this.isCompressed\n      ? CMapCompressionType.BINARY\n      : CMapCompressionType.NONE;\n\n    return this._fetchData(url, compressionType).catch(reason => {\n      throw new Error(\n        `Unable to load ${this.isCompressed ? \"binary \" : \"\"}CMap at: ${url}`\n      );\n    });\n  }\n\n  /**\n   * @private\n   */\n  _fetchData(url, compressionType) {\n    unreachable(\"Abstract method `_fetchData` called.\");\n  }\n}\n\nclass DOMCMapReaderFactory extends BaseCMapReaderFactory {\n  _fetchData(url, compressionType) {\n    if (\n      (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) ||\n      (isFetchSupported() && isValidFetchUrl(url, document.baseURI))\n    ) {\n      return fetch(url).then(async response => {\n        if (!response.ok) {\n          throw new Error(response.statusText);\n        }\n        let cMapData;\n        if (this.isCompressed) {\n          cMapData = new Uint8Array(await response.arrayBuffer());\n        } else {\n          cMapData = stringToBytes(await response.text());\n        }\n        return { cMapData, compressionType };\n      });\n    }\n\n    // The Fetch API is not supported.\n    return new Promise((resolve, reject) => {\n      const request = new XMLHttpRequest();\n      request.open(\"GET\", url, true);\n\n      if (this.isCompressed) {\n        request.responseType = \"arraybuffer\";\n      }\n      request.onreadystatechange = () => {\n        if (request.readyState !== XMLHttpRequest.DONE) {\n          return;\n        }\n        if (request.status === 200 || request.status === 0) {\n          let cMapData;\n          if (this.isCompressed && request.response) {\n            cMapData = new Uint8Array(request.response);\n          } else if (!this.isCompressed && request.responseText) {\n            cMapData = stringToBytes(request.responseText);\n          }\n          if (cMapData) {\n            resolve({ cMapData, compressionType });\n            return;\n          }\n        }\n        reject(new Error(request.statusText));\n      };\n\n      request.send(null);\n    });\n  }\n}\n\nclass DOMSVGFactory {\n  create(width, height) {\n    assert(width > 0 && height > 0, \"Invalid SVG dimensions\");\n\n    const svg = document.createElementNS(SVG_NS, \"svg:svg\");\n    svg.setAttribute(\"version\", \"1.1\");\n    svg.setAttribute(\"width\", width + \"px\");\n    svg.setAttribute(\"height\", height + \"px\");\n    svg.setAttribute(\"preserveAspectRatio\", \"none\");\n    svg.setAttribute(\"viewBox\", \"0 0 \" + width + \" \" + height);\n\n    return svg;\n  }\n\n  createElement(type) {\n    assert(typeof type === \"string\", \"Invalid SVG element type\");\n\n    return document.createElementNS(SVG_NS, type);\n  }\n}\n\n/**\n * @typedef {Object} PageViewportParameters\n * @property {Array<number>} viewBox - The xMin, yMin, xMax and\n *   yMax coordinates.\n * @property {number} scale - The scale of the viewport.\n * @property {number} rotation - The rotation, in degrees, of the viewport.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset. The\n *   default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset. The\n *   default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * @typedef {Object} PageViewportCloneParameters\n * @property {number} [scale] - The scale, overriding the one in the cloned\n *   viewport. The default value is `this.scale`.\n * @property {number} [rotation] - The rotation, in degrees, overriding the one\n *   in the cloned viewport. The default value is `this.rotation`.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `this.offsetX`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `this.offsetY`.\n * @property {boolean} [dontFlip] - If true, the x-axis will not be flipped.\n *   The default value is `false`.\n */\n\n/**\n * PDF page viewport created based on scale, rotation and offset.\n */\nclass PageViewport {\n  /**\n   * @param {PageViewportParameters}\n   */\n  constructor({\n    viewBox,\n    scale,\n    rotation,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  }) {\n    this.viewBox = viewBox;\n    this.scale = scale;\n    this.rotation = rotation;\n    this.offsetX = offsetX;\n    this.offsetY = offsetY;\n\n    // creating transform to convert pdf coordinate system to the normal\n    // canvas like coordinates taking in account scale and rotation\n    const centerX = (viewBox[2] + viewBox[0]) / 2;\n    const centerY = (viewBox[3] + viewBox[1]) / 2;\n    let rotateA, rotateB, rotateC, rotateD;\n    rotation = rotation % 360;\n    rotation = rotation < 0 ? rotation + 360 : rotation;\n    switch (rotation) {\n      case 180:\n        rotateA = -1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = 1;\n        break;\n      case 90:\n        rotateA = 0;\n        rotateB = 1;\n        rotateC = 1;\n        rotateD = 0;\n        break;\n      case 270:\n        rotateA = 0;\n        rotateB = -1;\n        rotateC = -1;\n        rotateD = 0;\n        break;\n      case 0:\n        rotateA = 1;\n        rotateB = 0;\n        rotateC = 0;\n        rotateD = -1;\n        break;\n      default:\n        throw new Error(\n          \"PageViewport: Invalid rotation, must be a multiple of 90 degrees.\"\n        );\n    }\n\n    if (dontFlip) {\n      rotateC = -rotateC;\n      rotateD = -rotateD;\n    }\n\n    let offsetCanvasX, offsetCanvasY;\n    let width, height;\n    if (rotateA === 0) {\n      offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n      width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n      height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n    } else {\n      offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n      offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n      width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n      height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n    }\n    // creating transform for the following operations:\n    // translate(-centerX, -centerY), rotate and flip vertically,\n    // scale, and translate(offsetCanvasX, offsetCanvasY)\n    this.transform = [\n      rotateA * scale,\n      rotateB * scale,\n      rotateC * scale,\n      rotateD * scale,\n      offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n      offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY,\n    ];\n\n    this.width = width;\n    this.height = height;\n  }\n\n  /**\n   * Clones viewport, with optional additional properties.\n   * @param {PageViewportCloneParameters} [params]\n   * @returns {PageViewport} Cloned viewport.\n   */\n  clone({\n    scale = this.scale,\n    rotation = this.rotation,\n    offsetX = this.offsetX,\n    offsetY = this.offsetY,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.viewBox.slice(),\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * Converts PDF point to the viewport coordinates. For examples, useful for\n   * converting PDF location into canvas pixel coordinates.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the viewport coordinate space.\n   * @see {@link convertToPdfPoint}\n   * @see {@link convertToViewportRectangle}\n   */\n  convertToViewportPoint(x, y) {\n    return Util.applyTransform([x, y], this.transform);\n  }\n\n  /**\n   * Converts PDF rectangle to the viewport coordinates.\n   * @param {Array} rect - The xMin, yMin, xMax and yMax coordinates.\n   * @returns {Array} Array containing corresponding coordinates of the\n   *   rectangle in the viewport coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToViewportRectangle(rect) {\n    const topLeft = Util.applyTransform([rect[0], rect[1]], this.transform);\n    const bottomRight = Util.applyTransform([rect[2], rect[3]], this.transform);\n    return [topLeft[0], topLeft[1], bottomRight[0], bottomRight[1]];\n  }\n\n  /**\n   * Converts viewport coordinates to the PDF location. For examples, useful\n   * for converting canvas pixel location into PDF one.\n   * @param {number} x - The x-coordinate.\n   * @param {number} y - The y-coordinate.\n   * @returns {Object} Object containing `x` and `y` properties of the\n   *   point in the PDF coordinate space.\n   * @see {@link convertToViewportPoint}\n   */\n  convertToPdfPoint(x, y) {\n    return Util.applyInverseTransform([x, y], this.transform);\n  }\n}\n\nclass RenderingCancelledException extends BaseException {\n  constructor(msg, type) {\n    super(msg);\n    this.type = type;\n  }\n}\n\nconst LinkTarget = {\n  NONE: 0, // Default value.\n  SELF: 1,\n  BLANK: 2,\n  PARENT: 3,\n  TOP: 4,\n};\n\n/**\n * @typedef ExternalLinkParameters\n * @typedef {Object} ExternalLinkParameters\n * @property {string} url - An absolute URL.\n * @property {LinkTarget} [target] - The link target. The default value is\n *   `LinkTarget.NONE`.\n * @property {string} [rel] - The link relationship. The default value is\n *   `DEFAULT_LINK_REL`.\n * @property {boolean} [enabled] - Whether the link should be enabled. The\n *   default value is true.\n */\n\n/**\n * Adds various attributes (href, title, target, rel) to hyperlinks.\n * @param {HTMLLinkElement} link - The link element.\n * @param {ExternalLinkParameters} params\n */\nfunction addLinkAttributes(link, { url, target, rel, enabled = true } = {}) {\n  assert(\n    url && typeof url === \"string\",\n    'addLinkAttributes: A valid \"url\" parameter must provided.'\n  );\n\n  const urlNullRemoved = removeNullCharacters(url);\n  if (enabled) {\n    link.href = link.title = urlNullRemoved;\n  } else {\n    link.href = \"\";\n    link.title = `Disabled: ${urlNullRemoved}`;\n    link.onclick = () => {\n      return false;\n    };\n  }\n\n  let targetStr = \"\"; // LinkTarget.NONE\n  switch (target) {\n    case LinkTarget.NONE:\n      break;\n    case LinkTarget.SELF:\n      targetStr = \"_self\";\n      break;\n    case LinkTarget.BLANK:\n      targetStr = \"_blank\";\n      break;\n    case LinkTarget.PARENT:\n      targetStr = \"_parent\";\n      break;\n    case LinkTarget.TOP:\n      targetStr = \"_top\";\n      break;\n  }\n  link.target = targetStr;\n\n  link.rel = typeof rel === \"string\" ? rel : DEFAULT_LINK_REL;\n}\n\n/**\n * Gets the file name from a given URL.\n * @param {string} url\n */\nfunction getFilenameFromUrl(url) {\n  const anchor = url.indexOf(\"#\");\n  const query = url.indexOf(\"?\");\n  const end = Math.min(\n    anchor > 0 ? anchor : url.length,\n    query > 0 ? query : url.length\n  );\n  return url.substring(url.lastIndexOf(\"/\", end) + 1, end);\n}\n\nclass StatTimer {\n  constructor() {\n    this.started = Object.create(null);\n    this.times = [];\n  }\n\n  time(name) {\n    if (name in this.started) {\n      warn(`Timer is already running for ${name}`);\n    }\n    this.started[name] = Date.now();\n  }\n\n  timeEnd(name) {\n    if (!(name in this.started)) {\n      warn(`Timer has not been started for ${name}`);\n    }\n    this.times.push({\n      name,\n      start: this.started[name],\n      end: Date.now(),\n    });\n    // Remove timer from started so it can be called again.\n    delete this.started[name];\n  }\n\n  toString() {\n    // Find the longest name for padding purposes.\n    const outBuf = [];\n    let longest = 0;\n    for (const time of this.times) {\n      const name = time.name;\n      if (name.length > longest) {\n        longest = name.length;\n      }\n    }\n    for (const time of this.times) {\n      const duration = time.end - time.start;\n      outBuf.push(`${time.name.padEnd(longest)} ${duration}ms\\n`);\n    }\n    return outBuf.join(\"\");\n  }\n}\n\nfunction isFetchSupported() {\n  return (\n    typeof fetch !== \"undefined\" &&\n    typeof Response !== \"undefined\" &&\n    \"body\" in Response.prototype &&\n    typeof ReadableStream !== \"undefined\"\n  );\n}\n\nfunction isValidFetchUrl(url, baseUrl) {\n  try {\n    const { protocol } = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    // The Fetch API only supports the http/https protocols, and not file/ftp.\n    return protocol === \"http:\" || protocol === \"https:\";\n  } catch (ex) {\n    return false; // `new URL()` will throw on incorrect data.\n  }\n}\n\n/**\n * @param {string} src\n * @returns {Promise<void>}\n */\nfunction loadScript(src) {\n  return new Promise((resolve, reject) => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = resolve;\n    script.onerror = function () {\n      reject(new Error(`Cannot load script at: ${script.src}`));\n    };\n    (document.head || document.documentElement).appendChild(script);\n  });\n}\n\n// Deprecated API function -- display regardless of the `verbosity` setting.\nfunction deprecated(details) {\n  console.log(\"Deprecated API usage: \" + details);\n}\n\nlet pdfDateStringRegex;\n\nclass PDFDateString {\n  /**\n   * Convert a PDF date string to a JavaScript `Date` object.\n   *\n   * The PDF date string format is described in section 7.9.4 of the official\n   * PDF 32000-1:2008 specification. However, in the PDF 1.7 reference (sixth\n   * edition) Adobe describes the same format including a trailing apostrophe.\n   * This syntax in incorrect, but Adobe Acrobat creates PDF files that contain\n   * them. We ignore all apostrophes as they are not necessary for date parsing.\n   *\n   * Moreover, Adobe Acrobat doesn't handle changing the date to universal time\n   * and doesn't use the user's time zone (effectively ignoring the HH' and mm'\n   * parts of the date string).\n   *\n   * @param {string} input\n   * @returns {Date|null}\n   */\n  static toDateObject(input) {\n    if (!input || !isString(input)) {\n      return null;\n    }\n\n    // Lazily initialize the regular expression.\n    if (!pdfDateStringRegex) {\n      pdfDateStringRegex = new RegExp(\n        \"^D:\" + // Prefix (required)\n        \"(\\\\d{4})\" + // Year (required)\n        \"(\\\\d{2})?\" + // Month (optional)\n        \"(\\\\d{2})?\" + // Day (optional)\n        \"(\\\\d{2})?\" + // Hour (optional)\n        \"(\\\\d{2})?\" + // Minute (optional)\n        \"(\\\\d{2})?\" + // Second (optional)\n        \"([Z|+|-])?\" + // Universal time relation (optional)\n        \"(\\\\d{2})?\" + // Offset hour (optional)\n        \"'?\" + // Splitting apostrophe (optional)\n        \"(\\\\d{2})?\" + // Offset minute (optional)\n          \"'?\" // Trailing apostrophe (optional)\n      );\n    }\n\n    // Optional fields that don't satisfy the requirements from the regular\n    // expression (such as incorrect digit counts or numbers that are out of\n    // range) will fall back the defaults from the specification.\n    const matches = pdfDateStringRegex.exec(input);\n    if (!matches) {\n      return null;\n    }\n\n    // JavaScript's `Date` object expects the month to be between 0 and 11\n    // instead of 1 and 12, so we have to correct for that.\n    const year = parseInt(matches[1], 10);\n    let month = parseInt(matches[2], 10);\n    month = month >= 1 && month <= 12 ? month - 1 : 0;\n    let day = parseInt(matches[3], 10);\n    day = day >= 1 && day <= 31 ? day : 1;\n    let hour = parseInt(matches[4], 10);\n    hour = hour >= 0 && hour <= 23 ? hour : 0;\n    let minute = parseInt(matches[5], 10);\n    minute = minute >= 0 && minute <= 59 ? minute : 0;\n    let second = parseInt(matches[6], 10);\n    second = second >= 0 && second <= 59 ? second : 0;\n    const universalTimeRelation = matches[7] || \"Z\";\n    let offsetHour = parseInt(matches[8], 10);\n    offsetHour = offsetHour >= 0 && offsetHour <= 23 ? offsetHour : 0;\n    let offsetMinute = parseInt(matches[9], 10) || 0;\n    offsetMinute = offsetMinute >= 0 && offsetMinute <= 59 ? offsetMinute : 0;\n\n    // Universal time relation 'Z' means that the local time is equal to the\n    // universal time, whereas the relations '+'/'-' indicate that the local\n    // time is later respectively earlier than the universal time. Every date\n    // is normalized to universal time.\n    if (universalTimeRelation === \"-\") {\n      hour += offsetHour;\n      minute += offsetMinute;\n    } else if (universalTimeRelation === \"+\") {\n      hour -= offsetHour;\n      minute -= offsetMinute;\n    }\n\n    return new Date(Date.UTC(year, month, day, hour, minute, second));\n  }\n}\n\nexport {\n  PageViewport,\n  RenderingCancelledException,\n  addLinkAttributes,\n  getFilenameFromUrl,\n  LinkTarget,\n  DEFAULT_LINK_REL,\n  BaseCanvasFactory,\n  DOMCanvasFactory,\n  BaseCMapReaderFactory,\n  DOMCMapReaderFactory,\n  DOMSVGFactory,\n  StatTimer,\n  isFetchSupported,\n  isValidFetchUrl,\n  loadScript,\n  deprecated,\n  PDFDateString,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport \"./compatibility.js\";\n\nconst IDENTITY_MATRIX = [1, 0, 0, 1, 0, 0];\nconst FONT_IDENTITY_MATRIX = [0.001, 0, 0, 0.001, 0, 0];\n\n// Permission flags from Table 22, Section 7.6.3.2 of the PDF specification.\nconst PermissionFlag = {\n  PRINT: 0x04,\n  MODIFY_CONTENTS: 0x08,\n  COPY: 0x10,\n  MODIFY_ANNOTATIONS: 0x20,\n  FILL_INTERACTIVE_FORMS: 0x100,\n  COPY_FOR_ACCESSIBILITY: 0x200,\n  ASSEMBLE: 0x400,\n  PRINT_HIGH_QUALITY: 0x800,\n};\n\nconst TextRenderingMode = {\n  FILL: 0,\n  STROKE: 1,\n  FILL_STROKE: 2,\n  INVISIBLE: 3,\n  FILL_ADD_TO_PATH: 4,\n  STROKE_ADD_TO_PATH: 5,\n  FILL_STROKE_ADD_TO_PATH: 6,\n  ADD_TO_PATH: 7,\n  FILL_STROKE_MASK: 3,\n  ADD_TO_PATH_FLAG: 4,\n};\n\nconst ImageKind = {\n  GRAYSCALE_1BPP: 1,\n  RGB_24BPP: 2,\n  RGBA_32BPP: 3,\n};\n\nconst AnnotationType = {\n  TEXT: 1,\n  LINK: 2,\n  FREETEXT: 3,\n  LINE: 4,\n  SQUARE: 5,\n  CIRCLE: 6,\n  POLYGON: 7,\n  POLYLINE: 8,\n  HIGHLIGHT: 9,\n  UNDERLINE: 10,\n  SQUIGGLY: 11,\n  STRIKEOUT: 12,\n  STAMP: 13,\n  CARET: 14,\n  INK: 15,\n  POPUP: 16,\n  FILEATTACHMENT: 17,\n  SOUND: 18,\n  MOVIE: 19,\n  WIDGET: 20,\n  SCREEN: 21,\n  PRINTERMARK: 22,\n  TRAPNET: 23,\n  WATERMARK: 24,\n  THREED: 25,\n  REDACT: 26,\n};\n\nconst AnnotationStateModelType = {\n  MARKED: \"Marked\",\n  REVIEW: \"Review\",\n};\n\nconst AnnotationMarkedState = {\n  MARKED: \"Marked\",\n  UNMARKED: \"Unmarked\",\n};\n\nconst AnnotationReviewState = {\n  ACCEPTED: \"Accepted\",\n  REJECTED: \"Rejected\",\n  CANCELLED: \"Cancelled\",\n  COMPLETED: \"Completed\",\n  NONE: \"None\",\n};\n\nconst AnnotationReplyType = {\n  GROUP: \"Group\",\n  REPLY: \"R\",\n};\n\nconst AnnotationFlag = {\n  INVISIBLE: 0x01,\n  HIDDEN: 0x02,\n  PRINT: 0x04,\n  NOZOOM: 0x08,\n  NOROTATE: 0x10,\n  NOVIEW: 0x20,\n  READONLY: 0x40,\n  LOCKED: 0x80,\n  TOGGLENOVIEW: 0x100,\n  LOCKEDCONTENTS: 0x200,\n};\n\nconst AnnotationFieldFlag = {\n  READONLY: 0x0000001,\n  REQUIRED: 0x0000002,\n  NOEXPORT: 0x0000004,\n  MULTILINE: 0x0001000,\n  PASSWORD: 0x0002000,\n  NOTOGGLETOOFF: 0x0004000,\n  RADIO: 0x0008000,\n  PUSHBUTTON: 0x0010000,\n  COMBO: 0x0020000,\n  EDIT: 0x0040000,\n  SORT: 0x0080000,\n  FILESELECT: 0x0100000,\n  MULTISELECT: 0x0200000,\n  DONOTSPELLCHECK: 0x0400000,\n  DONOTSCROLL: 0x0800000,\n  COMB: 0x1000000,\n  RICHTEXT: 0x2000000,\n  RADIOSINUNISON: 0x2000000,\n  COMMITONSELCHANGE: 0x4000000,\n};\n\nconst AnnotationBorderStyleType = {\n  SOLID: 1,\n  DASHED: 2,\n  BEVELED: 3,\n  INSET: 4,\n  UNDERLINE: 5,\n};\n\nconst StreamType = {\n  UNKNOWN: \"UNKNOWN\",\n  FLATE: \"FLATE\",\n  LZW: \"LZW\",\n  DCT: \"DCT\",\n  JPX: \"JPX\",\n  JBIG: \"JBIG\",\n  A85: \"A85\",\n  AHX: \"AHX\",\n  CCF: \"CCF\",\n  RLX: \"RLX\", // PDF short name is 'RL', but telemetry requires three chars.\n};\n\nconst FontType = {\n  UNKNOWN: \"UNKNOWN\",\n  TYPE1: \"TYPE1\",\n  TYPE1C: \"TYPE1C\",\n  CIDFONTTYPE0: \"CIDFONTTYPE0\",\n  CIDFONTTYPE0C: \"CIDFONTTYPE0C\",\n  TRUETYPE: \"TRUETYPE\",\n  CIDFONTTYPE2: \"CIDFONTTYPE2\",\n  TYPE3: \"TYPE3\",\n  OPENTYPE: \"OPENTYPE\",\n  TYPE0: \"TYPE0\",\n  MMTYPE1: \"MMTYPE1\",\n};\n\nconst VerbosityLevel = {\n  ERRORS: 0,\n  WARNINGS: 1,\n  INFOS: 5,\n};\n\nconst CMapCompressionType = {\n  NONE: 0,\n  BINARY: 1,\n  STREAM: 2,\n};\n\n// All the possible operations for an operator list.\nconst OPS = {\n  // Intentionally start from 1 so it is easy to spot bad operators that will be\n  // 0's.\n  dependency: 1,\n  setLineWidth: 2,\n  setLineCap: 3,\n  setLineJoin: 4,\n  setMiterLimit: 5,\n  setDash: 6,\n  setRenderingIntent: 7,\n  setFlatness: 8,\n  setGState: 9,\n  save: 10,\n  restore: 11,\n  transform: 12,\n  moveTo: 13,\n  lineTo: 14,\n  curveTo: 15,\n  curveTo2: 16,\n  curveTo3: 17,\n  closePath: 18,\n  rectangle: 19,\n  stroke: 20,\n  closeStroke: 21,\n  fill: 22,\n  eoFill: 23,\n  fillStroke: 24,\n  eoFillStroke: 25,\n  closeFillStroke: 26,\n  closeEOFillStroke: 27,\n  endPath: 28,\n  clip: 29,\n  eoClip: 30,\n  beginText: 31,\n  endText: 32,\n  setCharSpacing: 33,\n  setWordSpacing: 34,\n  setHScale: 35,\n  setLeading: 36,\n  setFont: 37,\n  setTextRenderingMode: 38,\n  setTextRise: 39,\n  moveText: 40,\n  setLeadingMoveText: 41,\n  setTextMatrix: 42,\n  nextLine: 43,\n  showText: 44,\n  showSpacedText: 45,\n  nextLineShowText: 46,\n  nextLineSetSpacingShowText: 47,\n  setCharWidth: 48,\n  setCharWidthAndBounds: 49,\n  setStrokeColorSpace: 50,\n  setFillColorSpace: 51,\n  setStrokeColor: 52,\n  setStrokeColorN: 53,\n  setFillColor: 54,\n  setFillColorN: 55,\n  setStrokeGray: 56,\n  setFillGray: 57,\n  setStrokeRGBColor: 58,\n  setFillRGBColor: 59,\n  setStrokeCMYKColor: 60,\n  setFillCMYKColor: 61,\n  shadingFill: 62,\n  beginInlineImage: 63,\n  beginImageData: 64,\n  endInlineImage: 65,\n  paintXObject: 66,\n  markPoint: 67,\n  markPointProps: 68,\n  beginMarkedContent: 69,\n  beginMarkedContentProps: 70,\n  endMarkedContent: 71,\n  beginCompat: 72,\n  endCompat: 73,\n  paintFormXObjectBegin: 74,\n  paintFormXObjectEnd: 75,\n  beginGroup: 76,\n  endGroup: 77,\n  beginAnnotations: 78,\n  endAnnotations: 79,\n  beginAnnotation: 80,\n  endAnnotation: 81,\n  paintJpegXObject: 82,\n  paintImageMaskXObject: 83,\n  paintImageMaskXObjectGroup: 84,\n  paintImageXObject: 85,\n  paintInlineImageXObject: 86,\n  paintInlineImageXObjectGroup: 87,\n  paintImageXObjectRepeat: 88,\n  paintImageMaskXObjectRepeat: 89,\n  paintSolidColorImageMask: 90,\n  constructPath: 91,\n};\n\nconst UNSUPPORTED_FEATURES = {\n  /** @deprecated unused */\n  unknown: \"unknown\",\n  forms: \"forms\",\n  javaScript: \"javaScript\",\n  smask: \"smask\",\n  shadingPattern: \"shadingPattern\",\n  /** @deprecated unused */\n  font: \"font\",\n  errorTilingPattern: \"errorTilingPattern\",\n  errorExtGState: \"errorExtGState\",\n  errorXObject: \"errorXObject\",\n  errorFontLoadType3: \"errorFontLoadType3\",\n  errorFontState: \"errorFontState\",\n  errorFontMissing: \"errorFontMissing\",\n  errorFontTranslate: \"errorFontTranslate\",\n  errorColorSpace: \"errorColorSpace\",\n  errorOperatorList: \"errorOperatorList\",\n  errorFontToUnicode: \"errorFontToUnicode\",\n  errorFontLoadNative: \"errorFontLoadNative\",\n  errorFontGetPath: \"errorFontGetPath\",\n  errorMarkedContent: \"errorMarkedContent\",\n};\n\nconst PasswordResponses = {\n  NEED_PASSWORD: 1,\n  INCORRECT_PASSWORD: 2,\n};\n\nlet verbosity = VerbosityLevel.WARNINGS;\n\nfunction setVerbosityLevel(level) {\n  if (Number.isInteger(level)) {\n    verbosity = level;\n  }\n}\n\nfunction getVerbosityLevel() {\n  return verbosity;\n}\n\n// A notice for devs. These are good for things that are helpful to devs, such\n// as warning that Workers were disabled, which is important to devs but not\n// end users.\nfunction info(msg) {\n  if (verbosity >= VerbosityLevel.INFOS) {\n    console.log(`Info: ${msg}`);\n  }\n}\n\n// Non-fatal warnings.\nfunction warn(msg) {\n  if (verbosity >= VerbosityLevel.WARNINGS) {\n    console.log(`Warning: ${msg}`);\n  }\n}\n\nfunction unreachable(msg) {\n  throw new Error(msg);\n}\n\nfunction assert(cond, msg) {\n  if (!cond) {\n    unreachable(msg);\n  }\n}\n\n// Checks if URLs have the same origin. For non-HTTP based URLs, returns false.\nfunction isSameOrigin(baseUrl, otherUrl) {\n  let base;\n  try {\n    base = new URL(baseUrl);\n    if (!base.origin || base.origin === \"null\") {\n      return false; // non-HTTP url\n    }\n  } catch (e) {\n    return false;\n  }\n\n  const other = new URL(otherUrl, base);\n  return base.origin === other.origin;\n}\n\n// Checks if URLs use one of the allowed protocols, e.g. to avoid XSS.\nfunction _isValidProtocol(url) {\n  if (!url) {\n    return false;\n  }\n  switch (url.protocol) {\n    case \"http:\":\n    case \"https:\":\n    case \"ftp:\":\n    case \"mailto:\":\n    case \"tel:\":\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Attempts to create a valid absolute URL.\n *\n * @param {URL|string} url - An absolute, or relative, URL.\n * @param {URL|string} baseUrl - An absolute URL.\n * @returns Either a valid {URL}, or `null` otherwise.\n */\nfunction createValidAbsoluteUrl(url, baseUrl) {\n  if (!url) {\n    return null;\n  }\n  try {\n    const absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n    if (_isValidProtocol(absoluteUrl)) {\n      return absoluteUrl;\n    }\n  } catch (ex) {\n    /* `new URL()` will throw on incorrect data. */\n  }\n  return null;\n}\n\nfunction shadow(obj, prop, value) {\n  Object.defineProperty(obj, prop, {\n    value,\n    enumerable: true,\n    configurable: true,\n    writable: false,\n  });\n  return value;\n}\n\n/**\n * @type {any}\n */\nconst BaseException = (function BaseExceptionClosure() {\n  // eslint-disable-next-line no-shadow\n  function BaseException(message) {\n    if (this.constructor === BaseException) {\n      unreachable(\"Cannot initialize BaseException.\");\n    }\n    this.message = message;\n    this.name = this.constructor.name;\n  }\n  BaseException.prototype = new Error();\n  BaseException.constructor = BaseException;\n\n  return BaseException;\n})();\n\nclass PasswordException extends BaseException {\n  constructor(msg, code) {\n    super(msg);\n    this.code = code;\n  }\n}\n\nclass UnknownErrorException extends BaseException {\n  constructor(msg, details) {\n    super(msg);\n    this.details = details;\n  }\n}\n\nclass InvalidPDFException extends BaseException {}\n\nclass MissingPDFException extends BaseException {}\n\nclass UnexpectedResponseException extends BaseException {\n  constructor(msg, status) {\n    super(msg);\n    this.status = status;\n  }\n}\n\n/**\n * Error caused during parsing PDF data.\n */\nclass FormatError extends BaseException {}\n\n/**\n * Error used to indicate task cancellation.\n */\nclass AbortException extends BaseException {}\n\nconst NullCharactersRegExp = /\\x00/g;\n\n/**\n * @param {string} str\n */\nfunction removeNullCharacters(str) {\n  if (typeof str !== \"string\") {\n    warn(\"The argument for removeNullCharacters must be a string.\");\n    return str;\n  }\n  return str.replace(NullCharactersRegExp, \"\");\n}\n\nfunction bytesToString(bytes) {\n  assert(\n    bytes !== null && typeof bytes === \"object\" && bytes.length !== undefined,\n    \"Invalid argument for bytesToString\"\n  );\n  const length = bytes.length;\n  const MAX_ARGUMENT_COUNT = 8192;\n  if (length < MAX_ARGUMENT_COUNT) {\n    return String.fromCharCode.apply(null, bytes);\n  }\n  const strBuf = [];\n  for (let i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n    const chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n    const chunk = bytes.subarray(i, chunkEnd);\n    strBuf.push(String.fromCharCode.apply(null, chunk));\n  }\n  return strBuf.join(\"\");\n}\n\nfunction stringToBytes(str) {\n  assert(typeof str === \"string\", \"Invalid argument for stringToBytes\");\n  const length = str.length;\n  const bytes = new Uint8Array(length);\n  for (let i = 0; i < length; ++i) {\n    bytes[i] = str.charCodeAt(i) & 0xff;\n  }\n  return bytes;\n}\n\n/**\n * Gets length of the array (Array, Uint8Array, or string) in bytes.\n * @param {Array<any>|Uint8Array|string} arr\n * @returns {number}\n */\nfunction arrayByteLength(arr) {\n  if (arr.length !== undefined) {\n    return arr.length;\n  }\n  assert(arr.byteLength !== undefined, \"arrayByteLength - invalid argument.\");\n  return arr.byteLength;\n}\n\n/**\n * Combines array items (arrays) into single Uint8Array object.\n * @param {Array<Array<any>|Uint8Array|string>} arr - the array of the arrays\n *   (Array, Uint8Array, or string).\n * @returns {Uint8Array}\n */\nfunction arraysToBytes(arr) {\n  const length = arr.length;\n  // Shortcut: if first and only item is Uint8Array, return it.\n  if (length === 1 && arr[0] instanceof Uint8Array) {\n    return arr[0];\n  }\n  let resultLength = 0;\n  for (let i = 0; i < length; i++) {\n    resultLength += arrayByteLength(arr[i]);\n  }\n  let pos = 0;\n  const data = new Uint8Array(resultLength);\n  for (let i = 0; i < length; i++) {\n    let item = arr[i];\n    if (!(item instanceof Uint8Array)) {\n      if (typeof item === \"string\") {\n        item = stringToBytes(item);\n      } else {\n        item = new Uint8Array(item);\n      }\n    }\n    const itemLength = item.byteLength;\n    data.set(item, pos);\n    pos += itemLength;\n  }\n  return data;\n}\n\nfunction string32(value) {\n  return String.fromCharCode(\n    (value >> 24) & 0xff,\n    (value >> 16) & 0xff,\n    (value >> 8) & 0xff,\n    value & 0xff\n  );\n}\n\n// Checks the endianness of the platform.\nfunction isLittleEndian() {\n  const buffer8 = new Uint8Array(4);\n  buffer8[0] = 1;\n  const view32 = new Uint32Array(buffer8.buffer, 0, 1);\n  return view32[0] === 1;\n}\nconst IsLittleEndianCached = {\n  get value() {\n    return shadow(this, \"value\", isLittleEndian());\n  },\n};\n\n// Checks if it's possible to eval JS expressions.\nfunction isEvalSupported() {\n  try {\n    new Function(\"\"); // eslint-disable-line no-new, no-new-func\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\nconst IsEvalSupportedCached = {\n  get value() {\n    return shadow(this, \"value\", isEvalSupported());\n  },\n};\n\nconst rgbBuf = [\"rgb(\", 0, \",\", 0, \",\", 0, \")\"];\n\nclass Util {\n  // makeCssRgb() can be called thousands of times. Using ´rgbBuf` avoids\n  // creating many intermediate strings.\n  static makeCssRgb(r, g, b) {\n    rgbBuf[1] = r;\n    rgbBuf[3] = g;\n    rgbBuf[5] = b;\n    return rgbBuf.join(\"\");\n  }\n\n  // Concatenates two transformation matrices together and returns the result.\n  static transform(m1, m2) {\n    return [\n      m1[0] * m2[0] + m1[2] * m2[1],\n      m1[1] * m2[0] + m1[3] * m2[1],\n      m1[0] * m2[2] + m1[2] * m2[3],\n      m1[1] * m2[2] + m1[3] * m2[3],\n      m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n      m1[1] * m2[4] + m1[3] * m2[5] + m1[5],\n    ];\n  }\n\n  // For 2d affine transforms\n  static applyTransform(p, m) {\n    const xt = p[0] * m[0] + p[1] * m[2] + m[4];\n    const yt = p[0] * m[1] + p[1] * m[3] + m[5];\n    return [xt, yt];\n  }\n\n  static applyInverseTransform(p, m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    const xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n    const yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n    return [xt, yt];\n  }\n\n  // Applies the transform to the rectangle and finds the minimum axially\n  // aligned bounding box.\n  static getAxialAlignedBoundingBox(r, m) {\n    const p1 = Util.applyTransform(r, m);\n    const p2 = Util.applyTransform(r.slice(2, 4), m);\n    const p3 = Util.applyTransform([r[0], r[3]], m);\n    const p4 = Util.applyTransform([r[2], r[1]], m);\n    return [\n      Math.min(p1[0], p2[0], p3[0], p4[0]),\n      Math.min(p1[1], p2[1], p3[1], p4[1]),\n      Math.max(p1[0], p2[0], p3[0], p4[0]),\n      Math.max(p1[1], p2[1], p3[1], p4[1]),\n    ];\n  }\n\n  static inverseTransform(m) {\n    const d = m[0] * m[3] - m[1] * m[2];\n    return [\n      m[3] / d,\n      -m[1] / d,\n      -m[2] / d,\n      m[0] / d,\n      (m[2] * m[5] - m[4] * m[3]) / d,\n      (m[4] * m[1] - m[5] * m[0]) / d,\n    ];\n  }\n\n  // Apply a generic 3d matrix M on a 3-vector v:\n  //   | a b c |   | X |\n  //   | d e f | x | Y |\n  //   | g h i |   | Z |\n  // M is assumed to be serialized as [a,b,c,d,e,f,g,h,i],\n  // with v as [X,Y,Z]\n  static apply3dTransform(m, v) {\n    return [\n      m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n      m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n      m[6] * v[0] + m[7] * v[1] + m[8] * v[2],\n    ];\n  }\n\n  // This calculation uses Singular Value Decomposition.\n  // The SVD can be represented with formula A = USV. We are interested in the\n  // matrix S here because it represents the scale values.\n  static singularValueDecompose2dScale(m) {\n    const transpose = [m[0], m[2], m[1], m[3]];\n\n    // Multiply matrix m with its transpose.\n    const a = m[0] * transpose[0] + m[1] * transpose[2];\n    const b = m[0] * transpose[1] + m[1] * transpose[3];\n    const c = m[2] * transpose[0] + m[3] * transpose[2];\n    const d = m[2] * transpose[1] + m[3] * transpose[3];\n\n    // Solve the second degree polynomial to get roots.\n    const first = (a + d) / 2;\n    const second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n    const sx = first + second || 1;\n    const sy = first - second || 1;\n\n    // Scale values are the square roots of the eigenvalues.\n    return [Math.sqrt(sx), Math.sqrt(sy)];\n  }\n\n  // Normalize rectangle rect=[x1, y1, x2, y2] so that (x1,y1) < (x2,y2)\n  // For coordinate systems whose origin lies in the bottom-left, this\n  // means normalization to (BL,TR) ordering. For systems with origin in the\n  // top-left, this means (TL,BR) ordering.\n  static normalizeRect(rect) {\n    const r = rect.slice(0); // clone rect\n    if (rect[0] > rect[2]) {\n      r[0] = rect[2];\n      r[2] = rect[0];\n    }\n    if (rect[1] > rect[3]) {\n      r[1] = rect[3];\n      r[3] = rect[1];\n    }\n    return r;\n  }\n\n  // Returns a rectangle [x1, y1, x2, y2] corresponding to the\n  // intersection of rect1 and rect2. If no intersection, returns 'false'\n  // The rectangle coordinates of rect1, rect2 should be [x1, y1, x2, y2]\n  static intersect(rect1, rect2) {\n    function compare(a, b) {\n      return a - b;\n    }\n\n    // Order points along the axes\n    const orderedX = [rect1[0], rect1[2], rect2[0], rect2[2]].sort(compare);\n    const orderedY = [rect1[1], rect1[3], rect2[1], rect2[3]].sort(compare);\n    const result = [];\n\n    rect1 = Util.normalizeRect(rect1);\n    rect2 = Util.normalizeRect(rect2);\n\n    // X: first and second points belong to different rectangles?\n    if (\n      (orderedX[0] === rect1[0] && orderedX[1] === rect2[0]) ||\n      (orderedX[0] === rect2[0] && orderedX[1] === rect1[0])\n    ) {\n      // Intersection must be between second and third points\n      result[0] = orderedX[1];\n      result[2] = orderedX[2];\n    } else {\n      return null;\n    }\n\n    // Y: first and second points belong to different rectangles?\n    if (\n      (orderedY[0] === rect1[1] && orderedY[1] === rect2[1]) ||\n      (orderedY[0] === rect2[1] && orderedY[1] === rect1[1])\n    ) {\n      // Intersection must be between second and third points\n      result[1] = orderedY[1];\n      result[3] = orderedY[2];\n    } else {\n      return null;\n    }\n\n    return result;\n  }\n}\n\n// prettier-ignore\nconst PDFStringTranslateTable = [\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0x2D8, 0x2C7, 0x2C6, 0x2D9, 0x2DD, 0x2DB, 0x2DA, 0x2DC, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x2022, 0x2020, 0x2021, 0x2026, 0x2014,\n  0x2013, 0x192, 0x2044, 0x2039, 0x203A, 0x2212, 0x2030, 0x201E, 0x201C,\n  0x201D, 0x2018, 0x2019, 0x201A, 0x2122, 0xFB01, 0xFB02, 0x141, 0x152, 0x160,\n  0x178, 0x17D, 0x131, 0x142, 0x153, 0x161, 0x17E, 0, 0x20AC\n];\n\nfunction stringToPDFString(str) {\n  const length = str.length,\n    strBuf = [];\n  if (str[0] === \"\\xFE\" && str[1] === \"\\xFF\") {\n    // UTF16BE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i) << 8) | str.charCodeAt(i + 1))\n      );\n    }\n  } else if (str[0] === \"\\xFF\" && str[1] === \"\\xFE\") {\n    // UTF16LE BOM\n    for (let i = 2; i < length; i += 2) {\n      strBuf.push(\n        String.fromCharCode((str.charCodeAt(i + 1) << 8) | str.charCodeAt(i))\n      );\n    }\n  } else {\n    for (let i = 0; i < length; ++i) {\n      const code = PDFStringTranslateTable[str.charCodeAt(i)];\n      strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n    }\n  }\n  return strBuf.join(\"\");\n}\n\nfunction escapeString(str) {\n  // replace \"(\", \")\" and \"\\\" by \"\\(\", \"\\)\" and \"\\\\\"\n  // in order to write it in a PDF file.\n  return str.replace(/([\\(\\)\\\\])/g, \"\\\\$1\");\n}\n\nfunction stringToUTF8String(str) {\n  return decodeURIComponent(escape(str));\n}\n\nfunction utf8StringToString(str) {\n  return unescape(encodeURIComponent(str));\n}\n\nfunction isBool(v) {\n  return typeof v === \"boolean\";\n}\n\nfunction isNum(v) {\n  return typeof v === \"number\";\n}\n\nfunction isString(v) {\n  return typeof v === \"string\";\n}\n\nfunction isArrayBuffer(v) {\n  return typeof v === \"object\" && v !== null && v.byteLength !== undefined;\n}\n\nfunction isArrayEqual(arr1, arr2) {\n  if (arr1.length !== arr2.length) {\n    return false;\n  }\n  return arr1.every(function (element, index) {\n    return element === arr2[index];\n  });\n}\n\nfunction getModificationDate(date = new Date(Date.now())) {\n  const buffer = [\n    date.getUTCFullYear().toString(),\n    (date.getUTCMonth() + 1).toString().padStart(2, \"0\"),\n    (date.getUTCDate() + 1).toString().padStart(2, \"0\"),\n    date.getUTCHours().toString().padStart(2, \"0\"),\n    date.getUTCMinutes().toString().padStart(2, \"0\"),\n    date.getUTCSeconds().toString().padStart(2, \"0\"),\n  ];\n\n  return buffer.join(\"\");\n}\n\n/**\n * Promise Capability object.\n *\n * @typedef {Object} PromiseCapability\n * @property {Promise<any>} promise - A Promise object.\n * @property {boolean} settled - If the Promise has been fulfilled/rejected.\n * @property {function} resolve - Fulfills the Promise.\n * @property {function} reject - Rejects the Promise.\n */\n\n/**\n * Creates a promise capability object.\n * @alias createPromiseCapability\n *\n * @returns {PromiseCapability}\n */\nfunction createPromiseCapability() {\n  const capability = Object.create(null);\n  let isSettled = false;\n\n  Object.defineProperty(capability, \"settled\", {\n    get() {\n      return isSettled;\n    },\n  });\n  capability.promise = new Promise(function (resolve, reject) {\n    capability.resolve = function (data) {\n      isSettled = true;\n      resolve(data);\n    };\n    capability.reject = function (reason) {\n      isSettled = true;\n      reject(reason);\n    };\n  });\n  return capability;\n}\n\nconst createObjectURL = (function createObjectURLClosure() {\n  // Blob/createObjectURL is not available, falling back to data schema.\n  const digits =\n    \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n\n  // eslint-disable-next-line no-shadow\n  return function createObjectURL(data, contentType, forceDataSchema = false) {\n    if (!forceDataSchema && URL.createObjectURL) {\n      const blob = new Blob([data], { type: contentType });\n      return URL.createObjectURL(blob);\n    }\n\n    let buffer = `data:${contentType};base64,`;\n    for (let i = 0, ii = data.length; i < ii; i += 3) {\n      const b1 = data[i] & 0xff;\n      const b2 = data[i + 1] & 0xff;\n      const b3 = data[i + 2] & 0xff;\n      const d1 = b1 >> 2,\n        d2 = ((b1 & 3) << 4) | (b2 >> 4);\n      const d3 = i + 1 < ii ? ((b2 & 0xf) << 2) | (b3 >> 6) : 64;\n      const d4 = i + 2 < ii ? b3 & 0x3f : 64;\n      buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n    }\n    return buffer;\n  };\n})();\n\nexport {\n  BaseException,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  OPS,\n  VerbosityLevel,\n  UNSUPPORTED_FEATURES,\n  AnnotationBorderStyleType,\n  AnnotationFieldFlag,\n  AnnotationFlag,\n  AnnotationMarkedState,\n  AnnotationReplyType,\n  AnnotationReviewState,\n  AnnotationStateModelType,\n  AnnotationType,\n  FontType,\n  ImageKind,\n  CMapCompressionType,\n  AbortException,\n  InvalidPDFException,\n  MissingPDFException,\n  PasswordException,\n  PasswordResponses,\n  PermissionFlag,\n  StreamType,\n  TextRenderingMode,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  Util,\n  FormatError,\n  arrayByteLength,\n  arraysToBytes,\n  assert,\n  bytesToString,\n  createPromiseCapability,\n  createObjectURL,\n  escapeString,\n  getModificationDate,\n  getVerbosityLevel,\n  info,\n  isArrayBuffer,\n  isArrayEqual,\n  isBool,\n  isNum,\n  isString,\n  isSameOrigin,\n  createValidAbsoluteUrl,\n  IsLittleEndianCached,\n  IsEvalSupportedCached,\n  removeNullCharacters,\n  setVerbosityLevel,\n  shadow,\n  string32,\n  stringToBytes,\n  stringToPDFString,\n  stringToUTF8String,\n  utf8StringToString,\n  warn,\n  unreachable,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { isNodeJS } from \"./is_node.js\";\n\n// Skip compatibility checks for modern builds and if we already ran the module.\nif (\n  (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"SKIP_BABEL\")) &&\n  (typeof globalThis === \"undefined\" || !globalThis._pdfjsCompatibilityChecked)\n) {\n  // Provides support for globalThis in legacy browsers.\n  // Support: IE11/Edge, Opera\n  if (typeof globalThis === \"undefined\" || globalThis.Math !== Math) {\n    // eslint-disable-next-line no-global-assign\n    globalThis = require(\"core-js/es/global-this\");\n  }\n  globalThis._pdfjsCompatibilityChecked = true;\n\n  const hasDOM = typeof window === \"object\" && typeof document === \"object\";\n  const userAgent =\n    (typeof navigator !== \"undefined\" && navigator.userAgent) || \"\";\n  const isIE = /Trident/.test(userAgent);\n\n  // Support: Node.js\n  (function checkNodeBtoa() {\n    if (globalThis.btoa || !isNodeJS) {\n      return;\n    }\n    globalThis.btoa = function (chars) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(chars, \"binary\").toString(\"base64\");\n    };\n  })();\n\n  // Support: Node.js\n  (function checkNodeAtob() {\n    if (globalThis.atob || !isNodeJS) {\n      return;\n    }\n    globalThis.atob = function (input) {\n      // eslint-disable-next-line no-undef\n      return Buffer.from(input, \"base64\").toString(\"binary\");\n    };\n  })();\n\n  // Provides support for ChildNode.remove in legacy browsers.\n  // Support: IE.\n  (function checkChildNodeRemove() {\n    if (!hasDOM) {\n      return;\n    }\n    if (typeof Element.prototype.remove !== \"undefined\") {\n      return;\n    }\n    Element.prototype.remove = function () {\n      if (this.parentNode) {\n        // eslint-disable-next-line mozilla/avoid-removeChild\n        this.parentNode.removeChild(this);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.{add, remove}, with more than\n  // one parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListAddRemove() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    div.classList.add(\"testOne\", \"testTwo\");\n\n    if (\n      div.classList.contains(\"testOne\") === true &&\n      div.classList.contains(\"testTwo\") === true\n    ) {\n      return;\n    }\n    const OriginalDOMTokenListAdd = DOMTokenList.prototype.add;\n    const OriginalDOMTokenListRemove = DOMTokenList.prototype.remove;\n\n    DOMTokenList.prototype.add = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListAdd.call(this, token);\n      }\n    };\n    DOMTokenList.prototype.remove = function (...tokens) {\n      for (const token of tokens) {\n        OriginalDOMTokenListRemove.call(this, token);\n      }\n    };\n  })();\n\n  // Provides support for DOMTokenList.prototype.toggle, with the optional\n  // \"force\" parameter, in legacy browsers.\n  // Support: IE\n  (function checkDOMTokenListToggle() {\n    if (!hasDOM || isNodeJS) {\n      return;\n    }\n    const div = document.createElement(\"div\");\n    if (div.classList.toggle(\"test\", 0) === false) {\n      return;\n    }\n\n    DOMTokenList.prototype.toggle = function (token) {\n      const force =\n        arguments.length > 1 ? !!arguments[1] : !this.contains(token);\n      return this[force ? \"add\" : \"remove\"](token), force;\n    };\n  })();\n\n  // Provides support for window.history.{pushState, replaceState}, with the\n  // `url` parameter set to `undefined`, without breaking the document URL.\n  // Support: IE\n  (function checkWindowHistoryPushStateReplaceState() {\n    if (!hasDOM || !isIE) {\n      return;\n    }\n    const OriginalPushState = window.history.pushState;\n    const OriginalReplaceState = window.history.replaceState;\n\n    window.history.pushState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalPushState.apply(this, args);\n    };\n    window.history.replaceState = function (state, title, url) {\n      const args = url === undefined ? [state, title] : [state, title, url];\n      OriginalReplaceState.apply(this, args);\n    };\n  })();\n\n  // Provides support for String.prototype.startsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringStartsWith() {\n    if (String.prototype.startsWith) {\n      return;\n    }\n    require(\"core-js/es/string/starts-with.js\");\n  })();\n\n  // Provides support for String.prototype.endsWith in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringEndsWith() {\n    if (String.prototype.endsWith) {\n      return;\n    }\n    require(\"core-js/es/string/ends-with.js\");\n  })();\n\n  // Provides support for String.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<41\n  (function checkStringIncludes() {\n    if (String.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/string/includes.js\");\n  })();\n\n  // Provides support for Array.prototype.includes in legacy browsers.\n  // Support: IE, Chrome<47\n  (function checkArrayIncludes() {\n    if (Array.prototype.includes) {\n      return;\n    }\n    require(\"core-js/es/array/includes.js\");\n  })();\n\n  // Provides support for Array.from in legacy browsers.\n  // Support: IE\n  (function checkArrayFrom() {\n    if (Array.from) {\n      return;\n    }\n    require(\"core-js/es/array/from.js\");\n  })();\n\n  // Provides support for Object.assign in legacy browsers.\n  // Support: IE\n  (function checkObjectAssign() {\n    if (Object.assign) {\n      return;\n    }\n    require(\"core-js/es/object/assign.js\");\n  })();\n\n  // Provides support for Object.fromEntries in legacy browsers.\n  // Support: IE, Chrome<73\n  (function checkObjectFromEntries() {\n    if (Object.fromEntries) {\n      return;\n    }\n    require(\"core-js/es/object/from-entries.js\");\n  })();\n\n  // Provides support for Math.log2 in legacy browsers.\n  // Support: IE, Chrome<38\n  (function checkMathLog2() {\n    if (Math.log2) {\n      return;\n    }\n    Math.log2 = require(\"core-js/es/math/log2.js\");\n  })();\n\n  // Provides support for Number.isNaN in legacy browsers.\n  // Support: IE.\n  (function checkNumberIsNaN() {\n    if (Number.isNaN) {\n      return;\n    }\n    Number.isNaN = require(\"core-js/es/number/is-nan.js\");\n  })();\n\n  // Provides support for Number.isInteger in legacy browsers.\n  // Support: IE, Chrome<34\n  (function checkNumberIsInteger() {\n    if (Number.isInteger) {\n      return;\n    }\n    Number.isInteger = require(\"core-js/es/number/is-integer.js\");\n  })();\n\n  // Provides support for TypedArray.prototype.slice in legacy browsers.\n  // Support: IE\n  (function checkTypedArraySlice() {\n    if (Uint8Array.prototype.slice) {\n      return;\n    }\n    require(\"core-js/es/typed-array/slice\");\n  })();\n\n  // Support: IE, Safari<11, Chrome<63\n  (function checkPromise() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `Promise` shouldn't\n      // need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    if (globalThis.Promise && globalThis.Promise.allSettled) {\n      return;\n    }\n    globalThis.Promise = require(\"core-js/es/promise/index.js\");\n  })();\n\n  // Support: IE\n  (function checkURL() {\n    if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n      // Prevent \"require is not a function\" errors in development mode,\n      // since the `URL` constructor should be available in modern browers.\n      return;\n    } else if (!PDFJSDev.test(\"GENERIC\")) {\n      // The `URL` constructor is assumed to be available in the extension\n      // builds.\n      return;\n    } else if (PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders don't use the `URL` constructor, so it\n      // doesn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    globalThis.URL = require(\"core-js/web/url.js\");\n  })();\n\n  // Support: IE, Node.js\n  (function checkReadableStream() {\n    if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"IMAGE_DECODERS\")) {\n      // The current image decoders are synchronous, hence `ReadableStream`\n      // shouldn't need to be polyfilled for the IMAGE_DECODERS build target.\n      return;\n    }\n    let isReadableStreamSupported = false;\n\n    if (typeof ReadableStream !== \"undefined\") {\n      // MS Edge may say it has ReadableStream but they are not up to spec yet.\n      try {\n        // eslint-disable-next-line no-new\n        new ReadableStream({\n          start(controller) {\n            controller.close();\n          },\n        });\n        isReadableStreamSupported = true;\n      } catch (e) {\n        // The ReadableStream constructor cannot be used.\n      }\n    }\n    if (isReadableStreamSupported) {\n      return;\n    }\n    globalThis.ReadableStream = require(\"web-streams-polyfill/dist/ponyfill.js\").ReadableStream;\n  })();\n\n  // We want to support Map iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkMapEntries() {\n    if (globalThis.Map && globalThis.Map.prototype.entries) {\n      return;\n    }\n    globalThis.Map = require(\"core-js/es/map/index.js\");\n  })();\n\n  // We want to support Set iteration, but it doesn't seem possible to easily\n  // test for that specifically; hence using a similarly unsupported property.\n  // Support: IE11\n  (function checkSetEntries() {\n    if (globalThis.Set && globalThis.Set.prototype.entries) {\n      return;\n    }\n    globalThis.Set = require(\"core-js/es/set/index.js\");\n  })();\n\n  // Support: IE<11, Safari<8, Chrome<36\n  (function checkWeakMap() {\n    if (globalThis.WeakMap) {\n      return;\n    }\n    globalThis.WeakMap = require(\"core-js/es/weak-map/index.js\");\n  })();\n\n  // Support: IE11\n  (function checkWeakSet() {\n    if (globalThis.WeakSet) {\n      return;\n    }\n    globalThis.WeakSet = require(\"core-js/es/weak-set/index.js\");\n  })();\n\n  // Provides support for String.codePointAt in legacy browsers.\n  // Support: IE11.\n  (function checkStringCodePointAt() {\n    if (String.prototype.codePointAt) {\n      return;\n    }\n    require(\"core-js/es/string/code-point-at.js\");\n  })();\n\n  // Provides support for String.fromCodePoint in legacy browsers.\n  // Support: IE11.\n  (function checkStringFromCodePoint() {\n    if (String.fromCodePoint) {\n      return;\n    }\n    String.fromCodePoint = require(\"core-js/es/string/from-code-point.js\");\n  })();\n\n  // Support: IE\n  (function checkSymbol() {\n    if (globalThis.Symbol) {\n      return;\n    }\n    require(\"core-js/es/symbol/index.js\");\n  })();\n\n  // Provides support for String.prototype.padStart in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadStart() {\n    if (String.prototype.padStart) {\n      return;\n    }\n    require(\"core-js/es/string/pad-start.js\");\n  })();\n\n  // Provides support for String.prototype.padEnd in legacy browsers.\n  // Support: IE, Chrome<57\n  (function checkStringPadEnd() {\n    if (String.prototype.padEnd) {\n      return;\n    }\n    require(\"core-js/es/string/pad-end.js\");\n  })();\n\n  // Provides support for Object.values in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectValues() {\n    if (Object.values) {\n      return;\n    }\n    Object.values = require(\"core-js/es/object/values.js\");\n  })();\n\n  // Provides support for Object.entries in legacy browsers.\n  // Support: IE, Chrome<54\n  (function checkObjectEntries() {\n    if (Object.entries) {\n      return;\n    }\n    Object.entries = require(\"core-js/es/object/entries.js\");\n  })();\n}\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals process */\n\n// NW.js / Electron is a browser context, but copies some Node.js objects; see\n// http://docs.nwjs.io/en/latest/For%20Users/Advanced/JavaScript%20Contexts%20in%20NW.js/#access-nodejs-and-nwjs-api-in-browser-context\n// https://www.electronjs.org/docs/api/process#processversionselectron-readonly\n// https://www.electronjs.org/docs/api/process#processtype-readonly\nconst isNodeJS =\n  typeof process === \"object\" &&\n  process + \"\" === \"[object process]\" &&\n  !process.versions.nw &&\n  !(process.versions.electron && process.type && process.type !== \"browser\");\n\nexport { isNodeJS };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\n/**\n * @module pdfjsLib\n */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  getVerbosityLevel,\n  info,\n  InvalidPDFException,\n  isArrayBuffer,\n  isSameOrigin,\n  MissingPDFException,\n  PasswordException,\n  setVerbosityLevel,\n  shadow,\n  stringToBytes,\n  UnexpectedResponseException,\n  UnknownErrorException,\n  unreachable,\n  warn,\n} from \"../shared/util.js\";\nimport {\n  deprecated,\n  DOMCanvasFactory,\n  DOMCMapReaderFactory,\n  loadScript,\n  PageViewport,\n  RenderingCancelledException,\n  StatTimer,\n} from \"./display_utils.js\";\nimport { FontFaceObject, FontLoader } from \"./font_loader.js\";\nimport { NodeCanvasFactory, NodeCMapReaderFactory } from \"./node_utils.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\nimport { apiCompatibilityParams } from \"./api_compatibility.js\";\nimport { CanvasGraphics } from \"./canvas.js\";\nimport { GlobalWorkerOptions } from \"./worker_options.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { MessageHandler } from \"../shared/message_handler.js\";\nimport { Metadata } from \"./metadata.js\";\nimport { OptionalContentConfig } from \"./optional_content_config.js\";\nimport { PDFDataTransportStream } from \"./transport_stream.js\";\nimport { WebGLContext } from \"./webgl.js\";\n\nconst DEFAULT_RANGE_CHUNK_SIZE = 65536; // 2^16 = 65536\nconst RENDERING_CANCELLED_TIMEOUT = 100; // ms\n\nconst DefaultCanvasFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCanvasFactory\n    : DOMCanvasFactory;\nconst DefaultCMapReaderFactory =\n  (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS\n    ? NodeCMapReaderFactory\n    : DOMCMapReaderFactory;\n\n/**\n * @typedef {function} IPDFStreamFactory\n * @param {DocumentInitParameters} params - The document initialization\n *   parameters. The \"url\" key is always present.\n * @returns {Promise} A promise, which is resolved with an instance of\n *   {IPDFStream}.\n * @ignore\n */\n\n/**\n * @type IPDFStreamFactory\n * @private\n */\nlet createPDFNetworkStream;\n\n/**\n * Sets the function that instantiates an {IPDFStream} as an alternative PDF\n * data transport.\n *\n * @param {IPDFStreamFactory} pdfNetworkStreamFactory - The factory function\n *   that takes document initialization parameters (including a \"url\") and\n *   returns a promise which is resolved with an instance of {IPDFStream}.\n * @ignore\n */\nfunction setPDFNetworkStreamFactory(pdfNetworkStreamFactory) {\n  createPDFNetworkStream = pdfNetworkStreamFactory;\n}\n\n/**\n * @typedef { Int8Array | Uint8Array | Uint8ClampedArray |\n *            Int16Array | Uint16Array |\n *            Int32Array | Uint32Array | Float32Array |\n *            Float64Array\n * } TypedArray\n */\n\n/**\n * Document initialization / loading parameters object.\n *\n * @typedef {Object} DocumentInitParameters\n * @property {string} [url] - The URL of the PDF.\n * @property {TypedArray|Array<number>|string} [data] - Binary PDF data. Use\n *    typed arrays (Uint8Array) to improve the memory usage. If PDF data is\n *    BASE64-encoded, use `atob()` to convert it to a binary string first.\n * @property {Object} [httpHeaders] - Basic authentication headers.\n * @property {boolean} [withCredentials] - Indicates whether or not\n *   cross-site Access-Control requests should be made using credentials such\n *   as cookies or authorization headers. The default is `false`.\n * @property {string} [password] - For decrypting password-protected PDFs.\n * @property {TypedArray} [initialData] - A typed array with the first portion\n *   or all of the pdf data. Used by the extension since some data is already\n *   loaded before the switch to range requests.\n * @property {number} [length] - The PDF file length. It's used for progress\n *   reports and range requests operations.\n * @property {PDFDataRangeTransport} [range] - Allows for using a custom range\n *   transport implementation.\n * @property {number} [rangeChunkSize] - Specify maximum number of bytes fetched\n *   per range request. The default value is {@link DEFAULT_RANGE_CHUNK_SIZE}.\n * @property {PDFWorker} [worker] - The worker that will be used for loading and\n *   parsing the PDF data.\n * @property {number} [verbosity] - Controls the logging level; the constants\n *   from {@link VerbosityLevel} should be used.\n * @property {string} [docBaseUrl] - The base URL of the document, used when\n *   attempting to recover valid absolute URLs for annotations, and outline\n *   items, that (incorrectly) only specify relative URLs.\n * @property {string} [cMapUrl] - The URL where the predefined Adobe CMaps are\n *   located. Include the trailing slash.\n * @property {boolean} [cMapPacked] - Specifies if the Adobe CMaps are binary\n *   packed or not.\n * @property {Object} [CMapReaderFactory] - The factory that will be used when\n *   reading built-in CMap files. Providing a custom factory is useful for\n *   environments without Fetch API or `XMLHttpRequest` support, such as\n *   Node.js. The default value is {DOMCMapReaderFactory}.\n * @property {boolean} [stopAtErrors] - Reject certain promises, e.g.\n *   `getOperatorList`, `getTextContent`, and `RenderTask`, when the associated\n *   PDF data cannot be successfully parsed, instead of attempting to recover\n *   whatever possible of the data. The default value is `false`.\n * @property {number} [maxImageSize] - The maximum allowed image size in total\n *   pixels, i.e. width * height. Images above this value will not be rendered.\n *   Use -1 for no limit, which is also the default value.\n * @property {boolean} [isEvalSupported] - Determines if we can evaluate strings\n *   as JavaScript. Primarily used to improve performance of font rendering, and\n *   when parsing PDF functions. The default value is `true`.\n * @property {boolean} [disableFontFace] - By default fonts are converted to\n *   OpenType fonts and loaded via `@font-face` rules. If disabled, fonts will\n *   be rendered using a built-in font renderer that constructs the glyphs with\n *   primitive path commands. The default value is `false`.\n * @property {boolean} [fontExtraProperties] - Include additional properties,\n *   which are unused during rendering of PDF documents, when exporting the\n *   parsed font data from the worker-thread. This may be useful for debugging\n *   purposes (and backwards compatibility), but note that it will lead to\n *   increased memory usage. The default value is `false`.\n * @property {HTMLDocument} [ownerDocument] - Specify an explicit document\n *   context to create elements with and to load resources, such as fonts,\n *   into. Defaults to the current document.\n * @property {boolean} [disableRange] - Disable range request loading of PDF\n *   files. When enabled, and if the server supports partial content requests,\n *   then the PDF will be fetched in chunks. The default value is `false`.\n * @property {boolean} [disableStream] - Disable streaming of PDF file data.\n *   By default PDF.js attempts to load PDF files in chunks. The default value\n *   is `false`.\n * @property {boolean} [disableAutoFetch] - Disable pre-fetching of PDF file\n *   data. When range requests are enabled PDF.js will automatically keep\n *   fetching more data even if it isn't needed to display the current page.\n *   The default value is `false`.\n *\n *   NOTE: It is also necessary to disable streaming, see above, in order for\n *   disabling of pre-fetching to work correctly.\n * @property {boolean} [pdfBug] - Enables special hooks for debugging PDF.js\n *   (see `web/debugger.js`). The default value is `false`.\n */\n\n/**\n * @typedef {Object} PDFDocumentStats\n * @property {Object<string, boolean>} streamTypes - Used stream types in the\n *   document (an item is set to true if specific stream ID was used in the\n *   document).\n * @property {Object<string, boolean>} fontTypes - Used font types in the\n *   document (an item is set to true if specific font ID was used in the\n *   document).\n */\n\n/**\n * This is the main entry point for loading a PDF and interacting with it.\n *\n * NOTE: If a URL is used to fetch the PDF data a standard Fetch API call (or\n * XHR as fallback) is used, which means it must follow same origin rules,\n * e.g. no cross-domain requests without CORS.\n *\n * @param {string|TypedArray|DocumentInitParameters|PDFDataRangeTransport} src -\n *   Can be a URL to where a PDF file is located, a typed array (Uint8Array)\n *   already populated with data or parameter object.\n * @returns {PDFDocumentLoadingTask}\n */\nfunction getDocument(src) {\n  const task = new PDFDocumentLoadingTask();\n\n  let source;\n  if (typeof src === \"string\") {\n    source = { url: src };\n  } else if (isArrayBuffer(src)) {\n    source = { data: src };\n  } else if (src instanceof PDFDataRangeTransport) {\n    source = { range: src };\n  } else {\n    if (typeof src !== \"object\") {\n      throw new Error(\n        \"Invalid parameter in getDocument, \" +\n          \"need either Uint8Array, string or a parameter object\"\n      );\n    }\n    if (!src.url && !src.data && !src.range) {\n      throw new Error(\n        \"Invalid parameter object: need either .data, .range or .url\"\n      );\n    }\n    source = src;\n  }\n  const params = Object.create(null);\n  let rangeTransport = null,\n    worker = null;\n\n  for (const key in source) {\n    if (key === \"url\" && typeof window !== \"undefined\") {\n      // The full path is required in the 'url' field.\n      params[key] = new URL(source[key], window.location).href;\n      continue;\n    } else if (key === \"range\") {\n      rangeTransport = source[key];\n      continue;\n    } else if (key === \"worker\") {\n      worker = source[key];\n      continue;\n    } else if (key === \"data\" && !(source[key] instanceof Uint8Array)) {\n      // Converting string or array-like data to Uint8Array.\n      const pdfBytes = source[key];\n      if (typeof pdfBytes === \"string\") {\n        params[key] = stringToBytes(pdfBytes);\n      } else if (\n        typeof pdfBytes === \"object\" &&\n        pdfBytes !== null &&\n        !isNaN(pdfBytes.length)\n      ) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else if (isArrayBuffer(pdfBytes)) {\n        params[key] = new Uint8Array(pdfBytes);\n      } else {\n        throw new Error(\n          \"Invalid PDF binary data: either typed array, \" +\n            \"string or array-like object is expected in the \" +\n            \"data property.\"\n        );\n      }\n      continue;\n    }\n    params[key] = source[key];\n  }\n\n  params.rangeChunkSize = params.rangeChunkSize || DEFAULT_RANGE_CHUNK_SIZE;\n  params.CMapReaderFactory =\n    params.CMapReaderFactory || DefaultCMapReaderFactory;\n  params.ignoreErrors = params.stopAtErrors !== true;\n  params.fontExtraProperties = params.fontExtraProperties === true;\n  params.pdfBug = params.pdfBug === true;\n\n  if (!Number.isInteger(params.maxImageSize)) {\n    params.maxImageSize = -1;\n  }\n  if (typeof params.isEvalSupported !== \"boolean\") {\n    params.isEvalSupported = true;\n  }\n  if (typeof params.disableFontFace !== \"boolean\") {\n    params.disableFontFace = apiCompatibilityParams.disableFontFace || false;\n  }\n  if (typeof params.ownerDocument === \"undefined\") {\n    params.ownerDocument = globalThis.document;\n  }\n\n  if (typeof params.disableRange !== \"boolean\") {\n    params.disableRange = false;\n  }\n  if (typeof params.disableStream !== \"boolean\") {\n    params.disableStream = false;\n  }\n  if (typeof params.disableAutoFetch !== \"boolean\") {\n    params.disableAutoFetch = false;\n  }\n\n  // Set the main-thread verbosity level.\n  setVerbosityLevel(params.verbosity);\n\n  if (!worker) {\n    const workerParams = {\n      verbosity: params.verbosity,\n      port: GlobalWorkerOptions.workerPort,\n    };\n    // Worker was not provided -- creating and owning our own. If message port\n    // is specified in global worker options, using it.\n    worker = workerParams.port\n      ? PDFWorker.fromPort(workerParams)\n      : new PDFWorker(workerParams);\n    task._worker = worker;\n  }\n  const docId = task.docId;\n  worker.promise\n    .then(function () {\n      if (task.destroyed) {\n        throw new Error(\"Loading aborted\");\n      }\n\n      const workerIdPromise = _fetchDocument(\n        worker,\n        params,\n        rangeTransport,\n        docId\n      );\n      const networkStreamPromise = new Promise(function (resolve) {\n        let networkStream;\n        if (rangeTransport) {\n          networkStream = new PDFDataTransportStream(\n            {\n              length: params.length,\n              initialData: params.initialData,\n              progressiveDone: params.progressiveDone,\n              disableRange: params.disableRange,\n              disableStream: params.disableStream,\n            },\n            rangeTransport\n          );\n        } else if (!params.data) {\n          networkStream = createPDFNetworkStream({\n            url: params.url,\n            length: params.length,\n            httpHeaders: params.httpHeaders,\n            withCredentials: params.withCredentials,\n            rangeChunkSize: params.rangeChunkSize,\n            disableRange: params.disableRange,\n            disableStream: params.disableStream,\n          });\n        }\n        resolve(networkStream);\n      });\n\n      return Promise.all([workerIdPromise, networkStreamPromise]).then(\n        function ([workerId, networkStream]) {\n          if (task.destroyed) {\n            throw new Error(\"Loading aborted\");\n          }\n\n          const messageHandler = new MessageHandler(\n            docId,\n            workerId,\n            worker.port\n          );\n          messageHandler.postMessageTransfers = worker.postMessageTransfers;\n          const transport = new WorkerTransport(\n            messageHandler,\n            task,\n            networkStream,\n            params\n          );\n          task._transport = transport;\n          messageHandler.send(\"Ready\", null);\n        }\n      );\n    })\n    .catch(task._capability.reject);\n\n  return task;\n}\n\n/**\n * Starts fetching of specified PDF document/data.\n *\n * @param {PDFWorker} worker\n * @param {Object} source\n * @param {PDFDataRangeTransport} pdfDataRangeTransport\n * @param {string} docId - Unique document ID, used in `MessageHandler`.\n * @returns {Promise} A promise that is resolved when the worker ID of the\n *   `MessageHandler` is known.\n * @private\n */\nfunction _fetchDocument(worker, source, pdfDataRangeTransport, docId) {\n  if (worker.destroyed) {\n    return Promise.reject(new Error(\"Worker was destroyed\"));\n  }\n\n  if (pdfDataRangeTransport) {\n    source.length = pdfDataRangeTransport.length;\n    source.initialData = pdfDataRangeTransport.initialData;\n    source.progressiveDone = pdfDataRangeTransport.progressiveDone;\n  }\n  return worker.messageHandler\n    .sendWithPromise(\"GetDocRequest\", {\n      docId,\n      apiVersion:\n        typeof PDFJSDev !== \"undefined\" && !PDFJSDev.test(\"TESTING\")\n          ? PDFJSDev.eval(\"BUNDLE_VERSION\")\n          : null,\n      // Only send the required properties, and *not* the entire object.\n      source: {\n        data: source.data,\n        url: source.url,\n        password: source.password,\n        disableAutoFetch: source.disableAutoFetch,\n        rangeChunkSize: source.rangeChunkSize,\n        length: source.length,\n      },\n      maxImageSize: source.maxImageSize,\n      disableFontFace: source.disableFontFace,\n      postMessageTransfers: worker.postMessageTransfers,\n      docBaseUrl: source.docBaseUrl,\n      ignoreErrors: source.ignoreErrors,\n      isEvalSupported: source.isEvalSupported,\n      fontExtraProperties: source.fontExtraProperties,\n    })\n    .then(function (workerId) {\n      if (worker.destroyed) {\n        throw new Error(\"Worker was destroyed\");\n      }\n      return workerId;\n    });\n}\n\n/**\n * The loading task controls the operations required to load a PDF document\n * (such as network requests) and provides a way to listen for completion,\n * after which individual pages can be rendered.\n *\n * @typedef {Object} PDFDocumentLoadingTask\n * @property {string} docId - Unique identifier for the document loading task.\n * @property {boolean} destroyed - Whether the loading task is destroyed or not.\n * @property {function} [onPassword] - Callback to request a password if a wrong\n *   or no password was provided. The callback receives two parameters: a\n *   function that should be called with the new password, and a reason (see\n *   {@link PasswordResponses}).\n * @property {function} [onProgress] - Callback to be able to monitor the\n *   loading progress of the PDF file (necessary to implement e.g. a loading\n *   bar). The callback receives an {Object} with the properties `loaded`\n *   ({number}) and `total` ({number}) that indicate how many bytes are loaded.\n * @property {function} [onUnsupportedFeature] - Callback for when an\n *   unsupported feature is used in the PDF document. The callback receives an\n *   {@link UNSUPPORTED_FEATURES} argument.\n * @property {Promise<PDFDocumentProxy>} promise - Promise for document loading\n *   task completion.\n * @property {function} destroy - Abort all network requests and destroy\n *   the worker. Returns a promise that is resolved when destruction is\n *   completed.\n */\n\n/**\n * @type {any}\n * @ignore\n */\nconst PDFDocumentLoadingTask = (function PDFDocumentLoadingTaskClosure() {\n  let nextDocumentId = 0;\n\n  /**\n   * The loading task controls the operations required to load a PDF document\n   * (such as network requests) and provides a way to listen for completion,\n   * after which individual pages can be rendered.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFDocumentLoadingTask {\n    constructor() {\n      this._capability = createPromiseCapability();\n      this._transport = null;\n      this._worker = null;\n\n      /**\n       * Unique identifier for the document loading task.\n       * @type {string}\n       */\n      this.docId = \"d\" + nextDocumentId++;\n\n      /**\n       * Whether the loading task is destroyed or not.\n       * @type {boolean}\n       */\n      this.destroyed = false;\n\n      /**\n       * Callback to request a password if a wrong or no password was provided.\n       * The callback receives two parameters: a function that should be called\n       * with the new password, and a reason (see {@link PasswordResponses}).\n       * @type {function}\n       */\n      this.onPassword = null;\n\n      /**\n       * Callback to be able to monitor the loading progress of the PDF file\n       * (necessary to implement e.g. a loading bar). The callback receives\n       * an {Object} with the properties `loaded` ({number}) and `total`\n       * ({number}) that indicate how many bytes are loaded.\n       * @type {function}\n       */\n      this.onProgress = null;\n\n      /**\n       * Callback for when an unsupported feature is used in the PDF document.\n       * The callback receives an {@link UNSUPPORTED_FEATURES} argument.\n       * @type {function}\n       */\n      this.onUnsupportedFeature = null;\n    }\n\n    /**\n     * Promise for document loading task completion.\n     * @type {Promise<PDFDocumentProxy>}\n     */\n    get promise() {\n      return this._capability.promise;\n    }\n\n    /**\n     * @returns {Promise<void>} A promise that is resolved when destruction is\n     *   completed.\n     */\n    destroy() {\n      this.destroyed = true;\n\n      const transportDestroyed = !this._transport\n        ? Promise.resolve()\n        : this._transport.destroy();\n      return transportDestroyed.then(() => {\n        this._transport = null;\n        if (this._worker) {\n          this._worker.destroy();\n          this._worker = null;\n        }\n      });\n    }\n  }\n  return PDFDocumentLoadingTask;\n})();\n\n/**\n * Abstract class to support range requests file loading.\n */\nclass PDFDataRangeTransport {\n  /**\n   * @param {number} length\n   * @param {Uint8Array} initialData\n   * @param {boolean} [progressiveDone]\n   */\n  constructor(length, initialData, progressiveDone = false) {\n    this.length = length;\n    this.initialData = initialData;\n    this.progressiveDone = progressiveDone;\n\n    this._rangeListeners = [];\n    this._progressListeners = [];\n    this._progressiveReadListeners = [];\n    this._progressiveDoneListeners = [];\n    this._readyCapability = createPromiseCapability();\n  }\n\n  addRangeListener(listener) {\n    this._rangeListeners.push(listener);\n  }\n\n  addProgressListener(listener) {\n    this._progressListeners.push(listener);\n  }\n\n  addProgressiveReadListener(listener) {\n    this._progressiveReadListeners.push(listener);\n  }\n\n  addProgressiveDoneListener(listener) {\n    this._progressiveDoneListeners.push(listener);\n  }\n\n  onDataRange(begin, chunk) {\n    for (const listener of this._rangeListeners) {\n      listener(begin, chunk);\n    }\n  }\n\n  onDataProgress(loaded, total) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressListeners) {\n        listener(loaded, total);\n      }\n    });\n  }\n\n  onDataProgressiveRead(chunk) {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveReadListeners) {\n        listener(chunk);\n      }\n    });\n  }\n\n  onDataProgressiveDone() {\n    this._readyCapability.promise.then(() => {\n      for (const listener of this._progressiveDoneListeners) {\n        listener();\n      }\n    });\n  }\n\n  transportReady() {\n    this._readyCapability.resolve();\n  }\n\n  requestDataRange(begin, end) {\n    unreachable(\"Abstract method PDFDataRangeTransport.requestDataRange\");\n  }\n\n  abort() {}\n}\n\n/**\n * Proxy to a `PDFDocument` in the worker thread.\n */\nclass PDFDocumentProxy {\n  constructor(pdfInfo, transport) {\n    this._pdfInfo = pdfInfo;\n    this._transport = transport;\n  }\n\n  /**\n   * @type {AnnotationStorage} Storage for annotation data in forms.\n   */\n  get annotationStorage() {\n    return shadow(this, \"annotationStorage\", new AnnotationStorage());\n  }\n\n  /**\n   * @type {number} Total number of pages in the PDF file.\n   */\n  get numPages() {\n    return this._pdfInfo.numPages;\n  }\n\n  /**\n   * @type {string} A (not guaranteed to be) unique ID to identify a PDF.\n   */\n  get fingerprint() {\n    return this._pdfInfo.fingerprint;\n  }\n\n  /**\n   * @param {number} pageNumber - The page number to get. The first page is 1.\n   * @returns {Promise<PDFPageProxy>} A promise that is resolved with\n   *   a {@link PDFPageProxy} object.\n   */\n  getPage(pageNumber) {\n    return this._transport.getPage(pageNumber);\n  }\n\n  /**\n   * @param {{num: number, gen: number}} ref - The page reference. Must have\n   *   the `num` and `gen` properties.\n   * @returns {Promise<{num: number, gen: number}>} A promise that is resolved\n   *   with the page index (starting from zero) that is associated with the\n   *   reference.\n   */\n  getPageIndex(ref) {\n    return this._transport.getPageIndex(ref);\n  }\n\n  /**\n   * @returns {Promise<Object<string, Array<any>>>} A promise that is resolved\n   *   with a mapping from named destinations to references.\n   *\n   * This can be slow for large documents. Use `getDestination` instead.\n   */\n  getDestinations() {\n    return this._transport.getDestinations();\n  }\n\n  /**\n   * @param {string} id - The named destination to get.\n   * @returns {Promise<Array<any>>} A promise that is resolved with all\n   *   information of the given named destination.\n   */\n  getDestination(id) {\n    return this._transport.getDestination(id);\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} containing the page labels that correspond to the page\n   *   indexes, or `null` when no page labels are present in the PDF file.\n   */\n  getPageLabels() {\n    return this._transport.getPageLabels();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page layout name.\n   */\n  getPageLayout() {\n    return this._transport.getPageLayout();\n  }\n\n  /**\n   * @returns {Promise<string>} A promise that is resolved with a {string}\n   *   containing the page mode name.\n   */\n  getPageMode() {\n    return this._transport.getPageMode();\n  }\n\n  /**\n   * @returns {Promise<Object | null>} A promise that is resolved with an\n   *   {Object} containing the viewer preferences, or `null` when no viewer\n   *   preferences are present in the PDF file.\n   */\n  getViewerPreferences() {\n    return this._transport.getViewerPreferences();\n  }\n\n  /**\n   * @returns {Promise<any | null>} A promise that is resolved with an {Array}\n   *   containing the destination, or `null` when no open action is present\n   *   in the PDF.\n   */\n  getOpenAction() {\n    return this._transport.getOpenAction();\n  }\n\n  /**\n   * @returns {Promise<any>} A promise that is resolved with a lookup table\n   *   for mapping named attachments to their content.\n   */\n  getAttachments() {\n    return this._transport.getAttachments();\n  }\n\n  /**\n   * @returns {Promise<Array<string> | null>} A promise that is resolved with\n   *   an {Array} of all the JavaScript strings in the name tree, or `null`\n   *   if no JavaScript exists.\n   */\n  getJavaScript() {\n    return this._transport.getJavaScript();\n  }\n\n  /**\n   * @typedef {Object} OutlineNode\n   * @property {string} title\n   * @property {boolean} bold\n   * @property {boolean} italic\n   * @property {Uint8ClampedArray} color - The color in RGB format to use for\n   *   display purposes.\n   * @property {string | Array<any> | null} dest\n   * @property {string | null} url\n   * @property {string | undefined} unsafeUrl\n   * @property {boolean | undefined} newWindow\n   * @property {number | undefined} count\n   * @property {Array<OutlineNode>} items\n   */\n\n  /**\n   * @returns {Promise<Array<OutlineNode>>} A promise that is resolved with an\n   *   {Array} that is a tree outline (if it has one) of the PDF file.\n   */\n  getOutline() {\n    return this._transport.getOutline();\n  }\n\n  /**\n   * @returns {Promise<OptionalContentConfig>} A promise that is resolved with\n   *   an {@link OptionalContentConfig} that contains all the optional content\n   *   groups (assuming that the document has any).\n   */\n  getOptionalContentConfig() {\n    return this._transport.getOptionalContentConfig();\n  }\n\n  /**\n   * @returns {Promise<Array<number> | null>} A promise that is resolved with\n   *   an {Array} that contains the permission flags for the PDF document, or\n   *   `null` when no permissions are present in the PDF file.\n   */\n  getPermissions() {\n    return this._transport.getPermissions();\n  }\n\n  /**\n   * @returns {Promise<{ info: Object, metadata: Metadata }>} A promise that is\n   *   resolved with an {Object} that has `info` and `metadata` properties.\n   *   `info` is an {Object} filled with anything available in the information\n   *   dictionary and similarly `metadata` is a {Metadata} object with\n   *   information from the metadata section of the PDF.\n   */\n  getMetadata() {\n    return this._transport.getMetadata();\n  }\n\n  /**\n   * @returns {Promise<TypedArray>} A promise that is resolved with a\n   *   {TypedArray} that has the raw data from the PDF.\n   */\n  getData() {\n    return this._transport.getData();\n  }\n\n  /**\n   * @returns {Promise<{ length: number }>} A promise that is resolved when the\n   *   document's data is loaded. It is resolved with an {Object} that contains\n   *   the `length` property that indicates size of the PDF data in bytes.\n   */\n  getDownloadInfo() {\n    return this._transport.downloadInfoCapability.promise;\n  }\n\n  /**\n   * @returns {Promise<PDFDocumentStats>} A promise this is resolved with\n   *   current statistics about document structures (see\n   *   {@link PDFDocumentStats}).\n   */\n  getStats() {\n    return this._transport.getStats();\n  }\n\n  /**\n   * Cleans up resources allocated by the document on both the main and worker\n   * threads.\n   *\n   * NOTE: Do not, under any circumstances, call this method when rendering is\n   * currently ongoing since that may lead to rendering errors.\n   *\n   * @returns {Promise} A promise that is resolved when clean-up has finished.\n   */\n  cleanup() {\n    return this._transport.startCleanup();\n  }\n\n  /**\n   * Destroys the current document instance and terminates the worker.\n   */\n  destroy() {\n    return this.loadingTask.destroy();\n  }\n\n  /**\n   * @type {DocumentInitParameters} A subset of the current\n   *   {DocumentInitParameters}, which are either needed in the viewer and/or\n   *   whose default values may be affected by the `apiCompatibilityParams`.\n   */\n  get loadingParams() {\n    return this._transport.loadingParams;\n  }\n\n  /**\n   * @type {PDFDocumentLoadingTask} The loadingTask for the current document.\n   */\n  get loadingTask() {\n    return this._transport.loadingTask;\n  }\n\n  /**\n   * @param {AnnotationStorage} annotationStorage - Storage for annotation\n   *   data in forms.\n   * @returns {Promise<Uint8Array>} A promise that is resolved with a\n   *   {Uint8Array} containing the full data of the saved document.\n   */\n  saveDocument(annotationStorage) {\n    return this._transport.saveDocument(annotationStorage);\n  }\n}\n\n/**\n * Page getViewport parameters.\n *\n * @typedef {Object} GetViewportParameters\n * @property {number} scale - The desired scale of the viewport.\n * @property {number} [rotation] - The desired rotation, in degrees, of\n *   the viewport. If omitted it defaults to the page rotation.\n * @property {number} [offsetX] - The horizontal, i.e. x-axis, offset.\n *   The default value is `0`.\n * @property {number} [offsetY] - The vertical, i.e. y-axis, offset.\n *   The default value is `0`.\n * @property {boolean} [dontFlip] - If true, the y-axis will not be\n *   flipped. The default value is `false`.\n */\n\n/**\n * Page getTextContent parameters.\n *\n * @typedef {Object} getTextContentParameters\n * @property {boolean} normalizeWhitespace - Replaces all occurrences of\n *   whitespace with standard spaces (0x20). The default value is `false`.\n * @property {boolean} disableCombineTextItems - Do not attempt to combine\n *   same line {@link TextItem}'s. The default value is `false`.\n */\n\n/**\n * Page text content.\n *\n * @typedef {Object} TextContent\n * @property {Array<TextItem>} items - Array of {@link TextItem} objects.\n * @property {Object<string, TextStyle>} styles - {@link TextStyle} objects,\n *   indexed by font name.\n */\n\n/**\n * Page text content part.\n *\n * @typedef {Object} TextItem\n * @property {string} str - Text content.\n * @property {string} dir - Text direction: 'ttb', 'ltr' or 'rtl'.\n * @property {Array<any>} transform - Transformation matrix.\n * @property {number} width - Width in device space.\n * @property {number} height - Height in device space.\n * @property {string} fontName - Font name used by PDF.js for converted font.\n */\n\n/**\n * Text style.\n *\n * @typedef {Object} TextStyle\n * @property {number} ascent - Font ascent.\n * @property {number} descent - Font descent.\n * @property {boolean} vertical - Whether or not the text is in vertical mode.\n * @property {string} fontFamily - The possible font family.\n */\n\n/**\n * Page annotation parameters.\n *\n * @typedef {Object} GetAnnotationsParameters\n * @property {string} intent - Determines the annotations that will be fetched,\n *   can be either 'display' (viewable annotations) or 'print' (printable\n *   annotations). If the parameter is omitted, all annotations are fetched.\n */\n\n/**\n * Page render parameters.\n *\n * @typedef {Object} RenderParameters\n * @property {Object} canvasContext - A 2D context of a DOM Canvas object.\n * @property {PageViewport} viewport - Rendering viewport obtained by calling\n *   the `PDFPageProxy.getViewport` method.\n * @property {string} [intent] - Rendering intent, can be 'display' or 'print'.\n *   The default value is 'display'.\n * @property {boolean} [enableWebGL] - Enables WebGL accelerated rendering for\n *   some operations. The default value is `false`.\n * @property {boolean} [renderInteractiveForms] - Whether or not interactive\n *   form elements are rendered in the display layer. If so, we do not render\n *   them on the canvas as well.\n * @property {Array<any>} [transform] - Additional transform, applied just\n *   before viewport transform.\n * @property {Object} [imageLayer] - An object that has `beginLayout`,\n *   `endLayout` and `appendImage` functions.\n * @property {Object} [canvasFactory] - The factory instance that will be used\n *   when creating canvases. The default value is {new DOMCanvasFactory()}.\n * @property {Object | string} [background] - Background to use for the canvas.\n *   Any valid `canvas.fillStyle` can be used: a `DOMString` parsed as CSS\n *   <color> value, a `CanvasGradient` object (a linear or radial gradient) or\n *   a `CanvasPattern` object (a repetitive image). The default value is\n *   'rgb(255,255,255)'.\n * @property {AnnotationStorage} [annotationStorage] - Storage for annotation\n *   data in forms.\n * @property {Promise<OptionalContentConfig>} [optionalContentConfigPromise] -\n *   A promise that should resolve with an {@link OptionalContentConfig}\n *   created from `PDFDocumentProxy.getOptionalContentConfig`. If `null`,\n *   the configuration will be fetched automatically with the default visibility\n *   states set.\n */\n\n/**\n * PDF page operator list.\n *\n * @typedef {Object} PDFOperatorList\n * @property {Array<number>} fnArray - Array containing the operator functions.\n * @property {Array<any>} argsArray - Array containing the arguments of the\n *   functions.\n */\n\n/**\n * Proxy to a `PDFPage` in the worker thread.\n */\nclass PDFPageProxy {\n  constructor(pageIndex, pageInfo, transport, ownerDocument, pdfBug = false) {\n    this._pageIndex = pageIndex;\n    this._pageInfo = pageInfo;\n    this._ownerDocument = ownerDocument;\n    this._transport = transport;\n    this._stats = pdfBug ? new StatTimer() : null;\n    this._pdfBug = pdfBug;\n    this.commonObjs = transport.commonObjs;\n    this.objs = new PDFObjects();\n\n    this.cleanupAfterRender = false;\n    this.pendingCleanup = false;\n    this._intentStates = new Map();\n    this.destroyed = false;\n  }\n\n  /**\n   * @type {number} Page number of the page. First page is 1.\n   */\n  get pageNumber() {\n    return this._pageIndex + 1;\n  }\n\n  /**\n   * @type {number} The number of degrees the page is rotated clockwise.\n   */\n  get rotate() {\n    return this._pageInfo.rotate;\n  }\n\n  /**\n   * @type {Object} The reference that points to this page. It has `num` and\n   *   `gen` properties.\n   */\n  get ref() {\n    return this._pageInfo.ref;\n  }\n\n  /**\n   * @type {number} The default size of units in 1/72nds of an inch.\n   */\n  get userUnit() {\n    return this._pageInfo.userUnit;\n  }\n\n  /**\n   * @type {Array<number>} An array of the visible portion of the PDF page in\n   *   user space units [x1, y1, x2, y2].\n   */\n  get view() {\n    return this._pageInfo.view;\n  }\n\n  /**\n   * @param {GetViewportParameters} params - Viewport parameters.\n   * @returns {PageViewport} Contains 'width' and 'height' properties\n   *   along with transforms required for rendering.\n   */\n  getViewport({\n    scale,\n    rotation = this.rotate,\n    offsetX = 0,\n    offsetY = 0,\n    dontFlip = false,\n  } = {}) {\n    return new PageViewport({\n      viewBox: this.view,\n      scale,\n      rotation,\n      offsetX,\n      offsetY,\n      dontFlip,\n    });\n  }\n\n  /**\n   * @param {GetAnnotationsParameters} params - Annotation parameters.\n   * @returns {Promise<Array<any>>} A promise that is resolved with an\n   *   {Array} of the annotation objects.\n   */\n  getAnnotations({ intent = null } = {}) {\n    if (!this.annotationsPromise || this.annotationsIntent !== intent) {\n      this.annotationsPromise = this._transport.getAnnotations(\n        this._pageIndex,\n        intent\n      );\n      this.annotationsIntent = intent;\n    }\n    return this.annotationsPromise;\n  }\n\n  /**\n   * Begins the process of rendering a page to the desired context.\n   *\n   * @param {RenderParameters} params Page render parameters.\n   * @returns {RenderTask} An object that contains a promise that is\n   *   resolved when the page finishes rendering.\n   */\n  render({\n    canvasContext,\n    viewport,\n    intent = \"display\",\n    enableWebGL = false,\n    renderInteractiveForms = false,\n    transform = null,\n    imageLayer = null,\n    canvasFactory = null,\n    background = null,\n    annotationStorage = null,\n    optionalContentConfigPromise = null,\n  }) {\n    if (this._stats) {\n      this._stats.time(\"Overall\");\n    }\n\n    const renderingIntent = intent === \"print\" ? \"print\" : \"display\";\n    // If there was a pending destroy, cancel it so no cleanup happens during\n    // this call to render.\n    this.pendingCleanup = false;\n\n    if (!optionalContentConfigPromise) {\n      optionalContentConfigPromise = this._transport.getOptionalContentConfig();\n    }\n\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n\n    // Ensure that a pending `streamReader` cancel timeout is always aborted.\n    if (intentState.streamReaderCancelTimeout) {\n      clearTimeout(intentState.streamReaderCancelTimeout);\n      intentState.streamReaderCancelTimeout = null;\n    }\n\n    const canvasFactoryInstance =\n      canvasFactory ||\n      new DefaultCanvasFactory({ ownerDocument: this._ownerDocument });\n    const webGLContext = new WebGLContext({\n      enable: enableWebGL,\n    });\n\n    // If there's no displayReadyCapability yet, then the operatorList\n    // was never requested before. Make the request and create the promise.\n    if (!intentState.displayReadyCapability) {\n      intentState.displayReadyCapability = createPromiseCapability();\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n        renderInteractiveForms: renderInteractiveForms === true,\n        annotationStorage:\n          (annotationStorage && annotationStorage.getAll()) || null,\n      });\n    }\n\n    const complete = error => {\n      const i = intentState.renderTasks.indexOf(internalRenderTask);\n      if (i >= 0) {\n        intentState.renderTasks.splice(i, 1);\n      }\n\n      // Attempt to reduce memory usage during *printing*, by always running\n      // cleanup once rendering has finished (regardless of cleanupAfterRender).\n      if (this.cleanupAfterRender || renderingIntent === \"print\") {\n        this.pendingCleanup = true;\n      }\n      this._tryCleanup();\n\n      if (error) {\n        internalRenderTask.capability.reject(error);\n\n        this._abortOperatorList({\n          intentState,\n          reason: error,\n        });\n      } else {\n        internalRenderTask.capability.resolve();\n      }\n      if (this._stats) {\n        this._stats.timeEnd(\"Rendering\");\n        this._stats.timeEnd(\"Overall\");\n      }\n    };\n\n    const internalRenderTask = new InternalRenderTask({\n      callback: complete,\n      // Only include the required properties, and *not* the entire object.\n      params: {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      },\n      objs: this.objs,\n      commonObjs: this.commonObjs,\n      operatorList: intentState.operatorList,\n      pageIndex: this._pageIndex,\n      canvasFactory: canvasFactoryInstance,\n      webGLContext,\n      useRequestAnimationFrame: renderingIntent !== \"print\",\n      pdfBug: this._pdfBug,\n    });\n\n    if (!intentState.renderTasks) {\n      intentState.renderTasks = [];\n    }\n    intentState.renderTasks.push(internalRenderTask);\n    const renderTask = internalRenderTask.task;\n\n    Promise.all([\n      intentState.displayReadyCapability.promise,\n      optionalContentConfigPromise,\n    ])\n      .then(([transparency, optionalContentConfig]) => {\n        if (this.pendingCleanup) {\n          complete();\n          return;\n        }\n        if (this._stats) {\n          this._stats.time(\"Rendering\");\n        }\n        internalRenderTask.initializeGraphics({\n          transparency,\n          optionalContentConfig,\n        });\n        internalRenderTask.operatorListChanged();\n      })\n      .catch(complete);\n\n    return renderTask;\n  }\n\n  /**\n   * @returns {Promise<PDFOperatorList>} A promise resolved with an\n   *   {@link PDFOperatorList} object that represents page's operator list.\n   */\n  getOperatorList() {\n    function operatorListChanged() {\n      if (intentState.operatorList.lastChunk) {\n        intentState.opListReadCapability.resolve(intentState.operatorList);\n\n        const i = intentState.renderTasks.indexOf(opListTask);\n        if (i >= 0) {\n          intentState.renderTasks.splice(i, 1);\n        }\n      }\n    }\n\n    const renderingIntent = \"oplist\";\n    let intentState = this._intentStates.get(renderingIntent);\n    if (!intentState) {\n      intentState = Object.create(null);\n      this._intentStates.set(renderingIntent, intentState);\n    }\n    let opListTask;\n\n    if (!intentState.opListReadCapability) {\n      opListTask = Object.create(null);\n      opListTask.operatorListChanged = operatorListChanged;\n      intentState.opListReadCapability = createPromiseCapability();\n      intentState.renderTasks = [];\n      intentState.renderTasks.push(opListTask);\n      intentState.operatorList = {\n        fnArray: [],\n        argsArray: [],\n        lastChunk: false,\n      };\n\n      if (this._stats) {\n        this._stats.time(\"Page Request\");\n      }\n      this._pumpOperatorList({\n        pageIndex: this._pageIndex,\n        intent: renderingIntent,\n      });\n    }\n    return intentState.opListReadCapability.promise;\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {ReadableStream} Stream for reading text content chunks.\n   */\n  streamTextContent({\n    normalizeWhitespace = false,\n    disableCombineTextItems = false,\n  } = {}) {\n    const TEXT_CONTENT_CHUNK_SIZE = 100;\n\n    return this._transport.messageHandler.sendWithStream(\n      \"GetTextContent\",\n      {\n        pageIndex: this._pageIndex,\n        normalizeWhitespace: normalizeWhitespace === true,\n        combineTextItems: disableCombineTextItems !== true,\n      },\n      {\n        highWaterMark: TEXT_CONTENT_CHUNK_SIZE,\n        size(textContent) {\n          return textContent.items.length;\n        },\n      }\n    );\n  }\n\n  /**\n   * @param {getTextContentParameters} params - getTextContent parameters.\n   * @returns {Promise<TextContent>} A promise that is resolved with a\n   *   {@link TextContent} object that represents the page's text content.\n   */\n  getTextContent(params = {}) {\n    const readableStream = this.streamTextContent(params);\n\n    return new Promise(function (resolve, reject) {\n      function pump() {\n        reader.read().then(function ({ value, done }) {\n          if (done) {\n            resolve(textContent);\n            return;\n          }\n          Object.assign(textContent.styles, value.styles);\n          textContent.items.push(...value.items);\n          pump();\n        }, reject);\n      }\n\n      const reader = readableStream.getReader();\n      const textContent = {\n        items: [],\n        styles: Object.create(null),\n      };\n      pump();\n    });\n  }\n\n  /**\n   * Destroys the page object.\n   * @private\n   */\n  _destroy() {\n    this.destroyed = true;\n    this._transport.pageCache[this._pageIndex] = null;\n\n    const waitOn = [];\n    for (const [intent, intentState] of this._intentStates) {\n      this._abortOperatorList({\n        intentState,\n        reason: new Error(\"Page was destroyed.\"),\n        force: true,\n      });\n\n      if (intent === \"oplist\") {\n        // Avoid errors below, since the renderTasks are just stubs.\n        continue;\n      }\n      for (const internalRenderTask of intentState.renderTasks) {\n        waitOn.push(internalRenderTask.completed);\n        internalRenderTask.cancel();\n      }\n    }\n    this.objs.clear();\n    this.annotationsPromise = null;\n    this.pendingCleanup = false;\n    return Promise.all(waitOn);\n  }\n\n  /**\n   * Cleans up resources allocated by the page.\n   *\n   * @param {boolean} [resetStats] - Reset page stats, if enabled.\n   *   The default value is `false`.\n   * @returns {boolean} Indicates if clean-up was successfully run.\n   */\n  cleanup(resetStats = false) {\n    this.pendingCleanup = true;\n    return this._tryCleanup(resetStats);\n  }\n\n  /**\n   * Attempts to clean up if rendering is in a state where that's possible.\n   * @private\n   */\n  _tryCleanup(resetStats = false) {\n    if (!this.pendingCleanup) {\n      return false;\n    }\n    for (const { renderTasks, operatorList } of this._intentStates.values()) {\n      if (renderTasks.length !== 0 || !operatorList.lastChunk) {\n        return false;\n      }\n    }\n\n    this._intentStates.clear();\n    this.objs.clear();\n    this.annotationsPromise = null;\n    if (resetStats && this._stats) {\n      this._stats = new StatTimer();\n    }\n    this.pendingCleanup = false;\n    return true;\n  }\n\n  /**\n   * @private\n   */\n  _startRenderPage(transparency, intent) {\n    const intentState = this._intentStates.get(intent);\n    if (!intentState) {\n      return; // Rendering was cancelled.\n    }\n    if (this._stats) {\n      this._stats.timeEnd(\"Page Request\");\n    }\n    // TODO Refactor RenderPageRequest to separate rendering\n    // and operator list logic\n    if (intentState.displayReadyCapability) {\n      intentState.displayReadyCapability.resolve(transparency);\n    }\n  }\n\n  /**\n   * @private\n   */\n  _renderPageChunk(operatorListChunk, intentState) {\n    // Add the new chunk to the current operator list.\n    for (let i = 0, ii = operatorListChunk.length; i < ii; i++) {\n      intentState.operatorList.fnArray.push(operatorListChunk.fnArray[i]);\n      intentState.operatorList.argsArray.push(operatorListChunk.argsArray[i]);\n    }\n    intentState.operatorList.lastChunk = operatorListChunk.lastChunk;\n\n    // Notify all the rendering tasks there are more operators to be consumed.\n    for (let i = 0; i < intentState.renderTasks.length; i++) {\n      intentState.renderTasks[i].operatorListChanged();\n    }\n\n    if (operatorListChunk.lastChunk) {\n      this._tryCleanup();\n    }\n  }\n\n  /**\n   * @private\n   */\n  _pumpOperatorList(args) {\n    assert(\n      args.intent,\n      'PDFPageProxy._pumpOperatorList: Expected \"intent\" argument.'\n    );\n\n    const readableStream = this._transport.messageHandler.sendWithStream(\n      \"GetOperatorList\",\n      args\n    );\n    const reader = readableStream.getReader();\n\n    const intentState = this._intentStates.get(args.intent);\n    intentState.streamReader = reader;\n\n    const pump = () => {\n      reader.read().then(\n        ({ value, done }) => {\n          if (done) {\n            intentState.streamReader = null;\n            return;\n          }\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          this._renderPageChunk(value, intentState);\n          pump();\n        },\n        reason => {\n          intentState.streamReader = null;\n\n          if (this._transport.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          if (intentState.operatorList) {\n            // Mark operator list as complete.\n            intentState.operatorList.lastChunk = true;\n\n            for (let i = 0; i < intentState.renderTasks.length; i++) {\n              intentState.renderTasks[i].operatorListChanged();\n            }\n            this._tryCleanup();\n          }\n\n          if (intentState.displayReadyCapability) {\n            intentState.displayReadyCapability.reject(reason);\n          } else if (intentState.opListReadCapability) {\n            intentState.opListReadCapability.reject(reason);\n          } else {\n            throw reason;\n          }\n        }\n      );\n    };\n    pump();\n  }\n\n  /**\n   * @private\n   */\n  _abortOperatorList({ intentState, reason, force = false }) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'PDFPageProxy._abortOperatorList: Expected \"reason\" argument.'\n    );\n\n    if (!intentState.streamReader) {\n      return;\n    }\n    if (!force) {\n      // Ensure that an Error occurring in *only* one `InternalRenderTask`, e.g.\n      // multiple render() calls on the same canvas, won't break all rendering.\n      if (intentState.renderTasks.length !== 0) {\n        return;\n      }\n      // Don't immediately abort parsing on the worker-thread when rendering is\n      // cancelled, since that will unnecessarily delay re-rendering when (for\n      // partially parsed pages) e.g. zooming/rotation occurs in the viewer.\n      if (reason instanceof RenderingCancelledException) {\n        intentState.streamReaderCancelTimeout = setTimeout(() => {\n          this._abortOperatorList({ intentState, reason, force: true });\n          intentState.streamReaderCancelTimeout = null;\n        }, RENDERING_CANCELLED_TIMEOUT);\n        return;\n      }\n    }\n    intentState.streamReader.cancel(\n      new AbortException(reason && reason.message)\n    );\n    intentState.streamReader = null;\n\n    if (this._transport.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    // Remove the current `intentState`, since a cancelled `getOperatorList`\n    // call on the worker-thread cannot be re-started...\n    for (const [intent, curIntentState] of this._intentStates) {\n      if (curIntentState === intentState) {\n        this._intentStates.delete(intent);\n        break;\n      }\n    }\n    // ... and force clean-up to ensure that any old state is always removed.\n    this.cleanup();\n  }\n\n  /**\n   * @type {Object} Returns page stats, if enabled; returns `null` otherwise.\n   */\n  get stats() {\n    return this._stats;\n  }\n}\n\nclass LoopbackPort {\n  constructor(defer = true) {\n    this._listeners = [];\n    this._defer = defer;\n    this._deferred = Promise.resolve(undefined);\n  }\n\n  postMessage(obj, transfers) {\n    function cloneValue(value) {\n      // Trying to perform a structured clone close to the spec, including\n      // transfers.\n      if (typeof value !== \"object\" || value === null) {\n        return value;\n      }\n      if (cloned.has(value)) {\n        // already cloned the object\n        return cloned.get(value);\n      }\n      let buffer, result;\n      if ((buffer = value.buffer) && isArrayBuffer(buffer)) {\n        // We found object with ArrayBuffer (typed array).\n        const transferable = transfers && transfers.includes(buffer);\n        if (transferable) {\n          result = new value.constructor(\n            buffer,\n            value.byteOffset,\n            value.byteLength\n          );\n        } else {\n          result = new value.constructor(value);\n        }\n        cloned.set(value, result);\n        return result;\n      }\n      result = Array.isArray(value) ? [] : {};\n      cloned.set(value, result); // adding to cache now for cyclic references\n      // Cloning all value and object properties, however ignoring properties\n      // defined via getter.\n      for (const i in value) {\n        let desc,\n          p = value;\n        while (!(desc = Object.getOwnPropertyDescriptor(p, i))) {\n          p = Object.getPrototypeOf(p);\n        }\n        if (typeof desc.value === \"undefined\") {\n          continue;\n        }\n        if (typeof desc.value === \"function\") {\n          if (value.hasOwnProperty && value.hasOwnProperty(i)) {\n            throw new Error(\n              `LoopbackPort.postMessage - cannot clone: ${value[i]}`\n            );\n          }\n          continue;\n        }\n        result[i] = cloneValue(desc.value);\n      }\n      return result;\n    }\n\n    if (!this._defer) {\n      this._listeners.forEach(listener => {\n        listener.call(this, { data: obj });\n      });\n      return;\n    }\n\n    const cloned = new WeakMap();\n    const e = { data: cloneValue(obj) };\n    this._deferred.then(() => {\n      this._listeners.forEach(listener => {\n        listener.call(this, e);\n      });\n    });\n  }\n\n  addEventListener(name, listener) {\n    this._listeners.push(listener);\n  }\n\n  removeEventListener(name, listener) {\n    const i = this._listeners.indexOf(listener);\n    this._listeners.splice(i, 1);\n  }\n\n  terminate() {\n    this._listeners.length = 0;\n  }\n}\n\n/**\n * @typedef {Object} PDFWorkerParameters\n * @property {string} [name] - The name of the worker.\n * @property {Object} [port] - The `workerPort` object.\n * @property {number} [verbosity] - Controls the logging level; the\n *   constants from {@link VerbosityLevel} should be used.\n */\n\n/** @type {any} */\nconst PDFWorker = (function PDFWorkerClosure() {\n  const pdfWorkerPorts = new WeakMap();\n  let isWorkerDisabled = false;\n  let fallbackWorkerSrc;\n  let nextFakeWorkerId = 0;\n  let fakeWorkerCapability;\n\n  if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"GENERIC\")) {\n    // eslint-disable-next-line no-undef\n    if (isNodeJS && typeof __non_webpack_require__ === \"function\") {\n      // Workers aren't supported in Node.js, force-disabling them there.\n      isWorkerDisabled = true;\n\n      if (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"LIB\")) {\n        fallbackWorkerSrc = \"../pdf.worker.js\";\n      } else {\n        fallbackWorkerSrc = \"./pdf.worker.js\";\n      }\n    } else if (typeof document === \"object\" && \"currentScript\" in document) {\n      const pdfjsFilePath =\n        document.currentScript && document.currentScript.src;\n      if (pdfjsFilePath) {\n        fallbackWorkerSrc = pdfjsFilePath.replace(\n          /(\\.(?:min\\.)?js)(\\?.*)?$/i,\n          \".worker$1$2\"\n        );\n      }\n    }\n  }\n\n  function getWorkerSrc() {\n    if (GlobalWorkerOptions.workerSrc) {\n      return GlobalWorkerOptions.workerSrc;\n    }\n    if (typeof fallbackWorkerSrc !== \"undefined\") {\n      if (!isNodeJS) {\n        deprecated('No \"GlobalWorkerOptions.workerSrc\" specified.');\n      }\n      return fallbackWorkerSrc;\n    }\n    throw new Error('No \"GlobalWorkerOptions.workerSrc\" specified.');\n  }\n\n  function getMainThreadWorkerMessageHandler() {\n    let mainWorkerMessageHandler;\n    try {\n      mainWorkerMessageHandler =\n        globalThis.pdfjsWorker && globalThis.pdfjsWorker.WorkerMessageHandler;\n    } catch (ex) {\n      /* Ignore errors. */\n    }\n    return mainWorkerMessageHandler || null;\n  }\n\n  // Loads worker code into main thread.\n  function setupFakeWorkerGlobal() {\n    if (fakeWorkerCapability) {\n      return fakeWorkerCapability.promise;\n    }\n    fakeWorkerCapability = createPromiseCapability();\n\n    const loader = async function () {\n      const mainWorkerMessageHandler = getMainThreadWorkerMessageHandler();\n\n      if (mainWorkerMessageHandler) {\n        // The worker was already loaded using e.g. a `<script>` tag.\n        return mainWorkerMessageHandler;\n      }\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"PRODUCTION\")) {\n        if (typeof SystemJS !== \"object\") {\n          // Manually load SystemJS, since it's only necessary for fake workers.\n          await loadScript(\"../node_modules/systemjs/dist/system.js\");\n          await loadScript(\"../systemjs.config.js\");\n        }\n        const worker = await SystemJS.import(\"pdfjs/core/worker.js\");\n        return worker.WorkerMessageHandler;\n      }\n      if (\n        PDFJSDev.test(\"GENERIC\") &&\n        isNodeJS &&\n        // eslint-disable-next-line no-undef\n        typeof __non_webpack_require__ === \"function\"\n      ) {\n        // Since bundlers, such as Webpack, cannot be told to leave `require`\n        // statements alone we are thus forced to jump through hoops in order\n        // to prevent `Critical dependency: ...` warnings in third-party\n        // deployments of the built `pdf.js`/`pdf.worker.js` files; see\n        // https://github.com/webpack/webpack/issues/8826\n        //\n        // The following hack is based on the assumption that code running in\n        // Node.js won't ever be affected by e.g. Content Security Policies that\n        // prevent the use of `eval`. If that ever occurs, we should revert this\n        // to a normal `__non_webpack_require__` statement and simply document\n        // the Webpack warnings instead (telling users to ignore them).\n        //\n        // eslint-disable-next-line no-eval\n        const worker = eval(\"require\")(getWorkerSrc());\n        return worker.WorkerMessageHandler;\n      }\n      await loadScript(getWorkerSrc());\n      return window.pdfjsWorker.WorkerMessageHandler;\n    };\n    loader().then(fakeWorkerCapability.resolve, fakeWorkerCapability.reject);\n\n    return fakeWorkerCapability.promise;\n  }\n\n  function createCDNWrapper(url) {\n    // We will rely on blob URL's property to specify origin.\n    // We want this function to fail in case if createObjectURL or Blob do not\n    // exist or fail for some reason -- our Worker creation will fail anyway.\n    const wrapper = \"importScripts('\" + url + \"');\";\n    return URL.createObjectURL(new Blob([wrapper]));\n  }\n\n  /**\n   * PDF.js web worker abstraction that controls the instantiation of PDF\n   * documents. Message handlers are used to pass information from the main\n   * thread to the worker thread and vice versa. If the creation of a web\n   * worker is not possible, a \"fake\" worker will be used instead.\n   */\n  // eslint-disable-next-line no-shadow\n  class PDFWorker {\n    /**\n     * @param {PDFWorkerParameters} params - Worker initialization parameters.\n     */\n    constructor({\n      name = null,\n      port = null,\n      verbosity = getVerbosityLevel(),\n    } = {}) {\n      if (port && pdfWorkerPorts.has(port)) {\n        throw new Error(\"Cannot use more than one PDFWorker per port\");\n      }\n\n      this.name = name;\n      this.destroyed = false;\n      this.postMessageTransfers = true;\n      this.verbosity = verbosity;\n\n      this._readyCapability = createPromiseCapability();\n      this._port = null;\n      this._webWorker = null;\n      this._messageHandler = null;\n\n      if (port) {\n        pdfWorkerPorts.set(port, this);\n        this._initializeFromPort(port);\n        return;\n      }\n      this._initialize();\n    }\n\n    get promise() {\n      return this._readyCapability.promise;\n    }\n\n    get port() {\n      return this._port;\n    }\n\n    get messageHandler() {\n      return this._messageHandler;\n    }\n\n    _initializeFromPort(port) {\n      this._port = port;\n      this._messageHandler = new MessageHandler(\"main\", \"worker\", port);\n      this._messageHandler.on(\"ready\", function () {\n        // Ignoring 'ready' event -- MessageHandler shall be already initialized\n        // and ready to accept the messages.\n      });\n      this._readyCapability.resolve();\n    }\n\n    _initialize() {\n      // If worker support isn't disabled explicit and the browser has worker\n      // support, create a new web worker and test if it/the browser fulfills\n      // all requirements to run parts of pdf.js in a web worker.\n      // Right now, the requirement is, that an Uint8Array is still an\n      // Uint8Array as it arrives on the worker. (Chrome added this with v.15.)\n      if (\n        typeof Worker !== \"undefined\" &&\n        !isWorkerDisabled &&\n        !getMainThreadWorkerMessageHandler()\n      ) {\n        let workerSrc = getWorkerSrc();\n\n        try {\n          // Wraps workerSrc path into blob URL, if the former does not belong\n          // to the same origin.\n          if (\n            typeof PDFJSDev !== \"undefined\" &&\n            PDFJSDev.test(\"GENERIC\") &&\n            !isSameOrigin(window.location.href, workerSrc)\n          ) {\n            workerSrc = createCDNWrapper(\n              new URL(workerSrc, window.location).href\n            );\n          }\n\n          // Some versions of FF can't create a worker on localhost, see:\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=683280\n          const worker = new Worker(workerSrc);\n          const messageHandler = new MessageHandler(\"main\", \"worker\", worker);\n          const terminateEarly = () => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            messageHandler.destroy();\n            worker.terminate();\n            if (this.destroyed) {\n              this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            } else {\n              // Fall back to fake worker if the termination is caused by an\n              // error (e.g. NetworkError / SecurityError).\n              this._setupFakeWorker();\n            }\n          };\n\n          const onWorkerError = () => {\n            if (!this._webWorker) {\n              // Worker failed to initialize due to an error. Clean up and fall\n              // back to the fake worker.\n              terminateEarly();\n            }\n          };\n          worker.addEventListener(\"error\", onWorkerError);\n\n          messageHandler.on(\"test\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            if (data) {\n              // supportTypedArray\n              this._messageHandler = messageHandler;\n              this._port = worker;\n              this._webWorker = worker;\n              if (!data.supportTransfers) {\n                this.postMessageTransfers = false;\n              }\n              this._readyCapability.resolve();\n              // Send global setting, e.g. verbosity level.\n              messageHandler.send(\"configure\", {\n                verbosity: this.verbosity,\n              });\n            } else {\n              this._setupFakeWorker();\n              messageHandler.destroy();\n              worker.terminate();\n            }\n          });\n\n          messageHandler.on(\"ready\", data => {\n            worker.removeEventListener(\"error\", onWorkerError);\n            if (this.destroyed) {\n              terminateEarly();\n              return; // worker was destroyed\n            }\n            try {\n              sendTest();\n            } catch (e) {\n              // We need fallback to a faked worker.\n              this._setupFakeWorker();\n            }\n          });\n\n          const sendTest = () => {\n            const testObj = new Uint8Array([\n              this.postMessageTransfers ? 255 : 0,\n            ]);\n            // Some versions of Opera throw a DATA_CLONE_ERR on serializing the\n            // typed array. Also, checking if we can use transfers.\n            try {\n              messageHandler.send(\"test\", testObj, [testObj.buffer]);\n            } catch (ex) {\n              warn(\"Cannot use postMessage transfers.\");\n              testObj[0] = 0;\n              messageHandler.send(\"test\", testObj);\n            }\n          };\n\n          // It might take time for worker to initialize (especially when AMD\n          // loader is used). We will try to send test immediately, and then\n          // when 'ready' message will arrive. The worker shall process only\n          // first received 'test'.\n          sendTest();\n          return;\n        } catch (e) {\n          info(\"The worker has been disabled.\");\n        }\n      }\n      // Either workers are disabled, not supported or have thrown an exception.\n      // Thus, we fallback to a faked worker.\n      this._setupFakeWorker();\n    }\n\n    _setupFakeWorker() {\n      if (!isWorkerDisabled) {\n        warn(\"Setting up fake worker.\");\n        isWorkerDisabled = true;\n      }\n\n      setupFakeWorkerGlobal()\n        .then(WorkerMessageHandler => {\n          if (this.destroyed) {\n            this._readyCapability.reject(new Error(\"Worker was destroyed\"));\n            return;\n          }\n          const port = new LoopbackPort();\n          this._port = port;\n\n          // All fake workers use the same port, making id unique.\n          const id = \"fake\" + nextFakeWorkerId++;\n\n          // If the main thread is our worker, setup the handling for the\n          // messages -- the main thread sends to it self.\n          const workerHandler = new MessageHandler(id + \"_worker\", id, port);\n          WorkerMessageHandler.setup(workerHandler, port);\n\n          const messageHandler = new MessageHandler(id, id + \"_worker\", port);\n          this._messageHandler = messageHandler;\n          this._readyCapability.resolve();\n          // Send global setting, e.g. verbosity level.\n          messageHandler.send(\"configure\", {\n            verbosity: this.verbosity,\n          });\n        })\n        .catch(reason => {\n          this._readyCapability.reject(\n            new Error(`Setting up fake worker failed: \"${reason.message}\".`)\n          );\n        });\n    }\n\n    /**\n     * Destroys the worker instance.\n     */\n    destroy() {\n      this.destroyed = true;\n      if (this._webWorker) {\n        // We need to terminate only web worker created resource.\n        this._webWorker.terminate();\n        this._webWorker = null;\n      }\n      pdfWorkerPorts.delete(this._port);\n      this._port = null;\n      if (this._messageHandler) {\n        this._messageHandler.destroy();\n        this._messageHandler = null;\n      }\n    }\n\n    /**\n     * @param {PDFWorkerParameters} params - The worker initialization\n     *   parameters.\n     */\n    static fromPort(params) {\n      if (!params || !params.port) {\n        throw new Error(\"PDFWorker.fromPort - invalid method signature.\");\n      }\n      if (pdfWorkerPorts.has(params.port)) {\n        return pdfWorkerPorts.get(params.port);\n      }\n      return new PDFWorker(params);\n    }\n\n    static getWorkerSrc() {\n      return getWorkerSrc();\n    }\n  }\n  return PDFWorker;\n})();\n\n/**\n * For internal use only.\n * @ignore\n */\nclass WorkerTransport {\n  constructor(messageHandler, loadingTask, networkStream, params) {\n    this.messageHandler = messageHandler;\n    this.loadingTask = loadingTask;\n    this.commonObjs = new PDFObjects();\n    this.fontLoader = new FontLoader({\n      docId: loadingTask.docId,\n      onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n      ownerDocument: params.ownerDocument,\n    });\n    this._params = params;\n    this.CMapReaderFactory = new params.CMapReaderFactory({\n      baseUrl: params.cMapUrl,\n      isCompressed: params.cMapPacked,\n    });\n\n    this.destroyed = false;\n    this.destroyCapability = null;\n    this._passwordCapability = null;\n\n    this._networkStream = networkStream;\n    this._fullReader = null;\n    this._lastProgress = null;\n\n    this.pageCache = [];\n    this.pagePromises = [];\n    this.downloadInfoCapability = createPromiseCapability();\n\n    this.setupMessageHandler();\n  }\n\n  destroy() {\n    if (this.destroyCapability) {\n      return this.destroyCapability.promise;\n    }\n\n    this.destroyed = true;\n    this.destroyCapability = createPromiseCapability();\n\n    if (this._passwordCapability) {\n      this._passwordCapability.reject(\n        new Error(\"Worker was destroyed during onPassword callback\")\n      );\n    }\n\n    const waitOn = [];\n    // We need to wait for all renderings to be completed, e.g.\n    // timeout/rAF can take a long time.\n    this.pageCache.forEach(function (page) {\n      if (page) {\n        waitOn.push(page._destroy());\n      }\n    });\n    this.pageCache.length = 0;\n    this.pagePromises.length = 0;\n    // We also need to wait for the worker to finish its long running tasks.\n    const terminated = this.messageHandler.sendWithPromise(\"Terminate\", null);\n    waitOn.push(terminated);\n    Promise.all(waitOn).then(() => {\n      this.fontLoader.clear();\n      if (this._networkStream) {\n        this._networkStream.cancelAllRequests(\n          new AbortException(\"Worker was terminated.\")\n        );\n      }\n\n      if (this.messageHandler) {\n        this.messageHandler.destroy();\n        this.messageHandler = null;\n      }\n      this.destroyCapability.resolve();\n    }, this.destroyCapability.reject);\n    return this.destroyCapability.promise;\n  }\n\n  setupMessageHandler() {\n    const { messageHandler, loadingTask } = this;\n\n    messageHandler.on(\"GetReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetReader - no `IPDFStream` instance available.\"\n      );\n      this._fullReader = this._networkStream.getFullReader();\n      this._fullReader.onProgress = evt => {\n        this._lastProgress = {\n          loaded: evt.loaded,\n          total: evt.total,\n        };\n      };\n      sink.onPull = () => {\n        this._fullReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetReader - expected an ArrayBuffer.\"\n            );\n            // Enqueue data chunk into sink, and transfer it\n            // to other side as `Transferable` object.\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        this._fullReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"ReaderHeadersReady\", data => {\n      const headersCapability = createPromiseCapability();\n      const fullReader = this._fullReader;\n      fullReader.headersReady.then(() => {\n        // If stream or range are disabled, it's our only way to report\n        // loading progress.\n        if (!fullReader.isStreamingSupported || !fullReader.isRangeSupported) {\n          if (this._lastProgress && loadingTask.onProgress) {\n            loadingTask.onProgress(this._lastProgress);\n          }\n          fullReader.onProgress = evt => {\n            if (loadingTask.onProgress) {\n              loadingTask.onProgress({\n                loaded: evt.loaded,\n                total: evt.total,\n              });\n            }\n          };\n        }\n\n        headersCapability.resolve({\n          isStreamingSupported: fullReader.isStreamingSupported,\n          isRangeSupported: fullReader.isRangeSupported,\n          contentLength: fullReader.contentLength,\n        });\n      }, headersCapability.reject);\n\n      return headersCapability.promise;\n    });\n\n    messageHandler.on(\"GetRangeReader\", (data, sink) => {\n      assert(\n        this._networkStream,\n        \"GetRangeReader - no `IPDFStream` instance available.\"\n      );\n      const rangeReader = this._networkStream.getRangeReader(\n        data.begin,\n        data.end\n      );\n\n      // When streaming is enabled, it's possible that the data requested here\n      // has already been fetched via the `_fullRequestReader` implementation.\n      // However, given that the PDF data is loaded asynchronously on the\n      // main-thread and then sent via `postMessage` to the worker-thread,\n      // it may not have been available during parsing (hence the attempt to\n      // use range requests here).\n      //\n      // To avoid wasting time and resources here, we'll thus *not* dispatch\n      // range requests if the data was already loaded but has not been sent to\n      // the worker-thread yet (which will happen via the `_fullRequestReader`).\n      if (!rangeReader) {\n        sink.close();\n        return;\n      }\n\n      sink.onPull = () => {\n        rangeReader\n          .read()\n          .then(function ({ value, done }) {\n            if (done) {\n              sink.close();\n              return;\n            }\n            assert(\n              isArrayBuffer(value),\n              \"GetRangeReader - expected an ArrayBuffer.\"\n            );\n            sink.enqueue(new Uint8Array(value), 1, [value]);\n          })\n          .catch(reason => {\n            sink.error(reason);\n          });\n      };\n\n      sink.onCancel = reason => {\n        rangeReader.cancel(reason);\n\n        sink.ready.catch(readyReason => {\n          if (this.destroyed) {\n            return; // Ignore any pending requests if the worker was terminated.\n          }\n          throw readyReason;\n        });\n      };\n    });\n\n    messageHandler.on(\"GetDoc\", ({ pdfInfo }) => {\n      this._numPages = pdfInfo.numPages;\n      loadingTask._capability.resolve(new PDFDocumentProxy(pdfInfo, this));\n    });\n\n    messageHandler.on(\"DocException\", function (ex) {\n      let reason;\n      switch (ex.name) {\n        case \"PasswordException\":\n          reason = new PasswordException(ex.message, ex.code);\n          break;\n        case \"InvalidPDFException\":\n          reason = new InvalidPDFException(ex.message);\n          break;\n        case \"MissingPDFException\":\n          reason = new MissingPDFException(ex.message);\n          break;\n        case \"UnexpectedResponseException\":\n          reason = new UnexpectedResponseException(ex.message, ex.status);\n          break;\n        case \"UnknownErrorException\":\n          reason = new UnknownErrorException(ex.message, ex.details);\n          break;\n      }\n      if (!(reason instanceof Error)) {\n        const msg = \"DocException - expected a valid Error.\";\n        if (\n          typeof PDFJSDev === \"undefined\" ||\n          PDFJSDev.test(\"!PRODUCTION || TESTING\")\n        ) {\n          unreachable(msg);\n        } else {\n          warn(msg);\n        }\n      }\n      loadingTask._capability.reject(reason);\n    });\n\n    messageHandler.on(\"PasswordRequest\", exception => {\n      this._passwordCapability = createPromiseCapability();\n\n      if (loadingTask.onPassword) {\n        const updatePassword = password => {\n          this._passwordCapability.resolve({\n            password,\n          });\n        };\n        try {\n          loadingTask.onPassword(updatePassword, exception.code);\n        } catch (ex) {\n          this._passwordCapability.reject(ex);\n        }\n      } else {\n        this._passwordCapability.reject(\n          new PasswordException(exception.message, exception.code)\n        );\n      }\n      return this._passwordCapability.promise;\n    });\n\n    messageHandler.on(\"DataLoaded\", data => {\n      // For consistency: Ensure that progress is always reported when the\n      // entire PDF file has been loaded, regardless of how it was fetched.\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.length,\n          total: data.length,\n        });\n      }\n      this.downloadInfoCapability.resolve(data);\n    });\n\n    messageHandler.on(\"StartRenderPage\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const page = this.pageCache[data.pageIndex];\n      page._startRenderPage(data.transparency, data.intent);\n    });\n\n    messageHandler.on(\"commonobj\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      const [id, type, exportedData] = data;\n      if (this.commonObjs.has(id)) {\n        return;\n      }\n\n      switch (type) {\n        case \"Font\":\n          const params = this._params;\n\n          if (\"error\" in exportedData) {\n            const exportedError = exportedData.error;\n            warn(`Error during font loading: ${exportedError}`);\n            this.commonObjs.resolve(id, exportedError);\n            break;\n          }\n\n          let fontRegistry = null;\n          if (\n            params.pdfBug &&\n            globalThis.FontInspector &&\n            globalThis.FontInspector.enabled\n          ) {\n            fontRegistry = {\n              registerFont(font, url) {\n                globalThis.FontInspector.fontAdded(font, url);\n              },\n            };\n          }\n          const font = new FontFaceObject(exportedData, {\n            isEvalSupported: params.isEvalSupported,\n            disableFontFace: params.disableFontFace,\n            ignoreErrors: params.ignoreErrors,\n            onUnsupportedFeature: this._onUnsupportedFeature.bind(this),\n            fontRegistry,\n          });\n\n          this.fontLoader\n            .bind(font)\n            .catch(reason => {\n              return messageHandler.sendWithPromise(\"FontFallback\", { id });\n            })\n            .finally(() => {\n              if (!params.fontExtraProperties && font.data) {\n                // Immediately release the `font.data` property once the font\n                // has been attached to the DOM, since it's no longer needed,\n                // rather than waiting for a `PDFDocumentProxy.cleanup` call.\n                // Since `font.data` could be very large, e.g. in some cases\n                // multiple megabytes, this will help reduce memory usage.\n                font.data = null;\n              }\n              this.commonObjs.resolve(id, font);\n            });\n          break;\n        case \"FontPath\":\n        case \"Image\":\n          this.commonObjs.resolve(id, exportedData);\n          break;\n        default:\n          throw new Error(`Got unknown common object type ${type}`);\n      }\n    });\n\n    messageHandler.on(\"obj\", data => {\n      if (this.destroyed) {\n        // Ignore any pending requests if the worker was terminated.\n        return undefined;\n      }\n\n      const [id, pageIndex, type, imageData] = data;\n      const pageProxy = this.pageCache[pageIndex];\n      if (pageProxy.objs.has(id)) {\n        return undefined;\n      }\n\n      switch (type) {\n        case \"Image\":\n          pageProxy.objs.resolve(id, imageData);\n\n          // Heuristic that will allow us not to store large data.\n          const MAX_IMAGE_SIZE_TO_STORE = 8000000;\n          if (\n            imageData &&\n            \"data\" in imageData &&\n            imageData.data.length > MAX_IMAGE_SIZE_TO_STORE\n          ) {\n            pageProxy.cleanupAfterRender = true;\n          }\n          break;\n        default:\n          throw new Error(`Got unknown object type ${type}`);\n      }\n      return undefined;\n    });\n\n    messageHandler.on(\"DocProgress\", data => {\n      if (this.destroyed) {\n        return; // Ignore any pending requests if the worker was terminated.\n      }\n\n      if (loadingTask.onProgress) {\n        loadingTask.onProgress({\n          loaded: data.loaded,\n          total: data.total,\n        });\n      }\n    });\n\n    messageHandler.on(\n      \"UnsupportedFeature\",\n      this._onUnsupportedFeature.bind(this)\n    );\n\n    messageHandler.on(\"FetchBuiltInCMap\", (data, sink) => {\n      if (this.destroyed) {\n        sink.error(new Error(\"Worker was destroyed\"));\n        return;\n      }\n      let fetched = false;\n\n      sink.onPull = () => {\n        if (fetched) {\n          sink.close();\n          return;\n        }\n        fetched = true;\n\n        this.CMapReaderFactory.fetch(data)\n          .then(function (builtInCMap) {\n            sink.enqueue(builtInCMap, 1, [builtInCMap.cMapData.buffer]);\n          })\n          .catch(function (reason) {\n            sink.error(reason);\n          });\n      };\n    });\n  }\n\n  _onUnsupportedFeature({ featureId }) {\n    if (this.destroyed) {\n      return; // Ignore any pending requests if the worker was terminated.\n    }\n    if (this.loadingTask.onUnsupportedFeature) {\n      this.loadingTask.onUnsupportedFeature(featureId);\n    }\n  }\n\n  getData() {\n    return this.messageHandler.sendWithPromise(\"GetData\", null);\n  }\n\n  getPage(pageNumber) {\n    if (\n      !Number.isInteger(pageNumber) ||\n      pageNumber <= 0 ||\n      pageNumber > this._numPages\n    ) {\n      return Promise.reject(new Error(\"Invalid page request\"));\n    }\n\n    const pageIndex = pageNumber - 1;\n    if (pageIndex in this.pagePromises) {\n      return this.pagePromises[pageIndex];\n    }\n    const promise = this.messageHandler\n      .sendWithPromise(\"GetPage\", {\n        pageIndex,\n      })\n      .then(pageInfo => {\n        if (this.destroyed) {\n          throw new Error(\"Transport destroyed\");\n        }\n        const page = new PDFPageProxy(\n          pageIndex,\n          pageInfo,\n          this,\n          this._params.ownerDocument,\n          this._params.pdfBug\n        );\n        this.pageCache[pageIndex] = page;\n        return page;\n      });\n    this.pagePromises[pageIndex] = promise;\n    return promise;\n  }\n\n  getPageIndex(ref) {\n    return this.messageHandler\n      .sendWithPromise(\"GetPageIndex\", {\n        ref,\n      })\n      .catch(function (reason) {\n        return Promise.reject(new Error(reason));\n      });\n  }\n\n  getAnnotations(pageIndex, intent) {\n    return this.messageHandler.sendWithPromise(\"GetAnnotations\", {\n      pageIndex,\n      intent,\n    });\n  }\n\n  saveDocument(annotationStorage) {\n    return this.messageHandler\n      .sendWithPromise(\"SaveDocument\", {\n        numPages: this._numPages,\n        annotationStorage:\n          (annotationStorage && annotationStorage.getAll()) || null,\n        filename: this._fullReader ? this._fullReader.filename : null,\n      })\n      .finally(() => {\n        if (annotationStorage) {\n          annotationStorage.resetModified();\n        }\n      });\n  }\n\n  getDestinations() {\n    return this.messageHandler.sendWithPromise(\"GetDestinations\", null);\n  }\n\n  getDestination(id) {\n    if (typeof id !== \"string\") {\n      return Promise.reject(new Error(\"Invalid destination request.\"));\n    }\n    return this.messageHandler.sendWithPromise(\"GetDestination\", {\n      id,\n    });\n  }\n\n  getPageLabels() {\n    return this.messageHandler.sendWithPromise(\"GetPageLabels\", null);\n  }\n\n  getPageLayout() {\n    return this.messageHandler.sendWithPromise(\"GetPageLayout\", null);\n  }\n\n  getPageMode() {\n    return this.messageHandler.sendWithPromise(\"GetPageMode\", null);\n  }\n\n  getViewerPreferences() {\n    return this.messageHandler.sendWithPromise(\"GetViewerPreferences\", null);\n  }\n\n  getOpenAction() {\n    return this.messageHandler.sendWithPromise(\"GetOpenAction\", null);\n  }\n\n  getAttachments() {\n    return this.messageHandler.sendWithPromise(\"GetAttachments\", null);\n  }\n\n  getJavaScript() {\n    return this.messageHandler.sendWithPromise(\"GetJavaScript\", null);\n  }\n\n  getOutline() {\n    return this.messageHandler.sendWithPromise(\"GetOutline\", null);\n  }\n\n  getOptionalContentConfig() {\n    return this.messageHandler\n      .sendWithPromise(\"GetOptionalContentConfig\", null)\n      .then(results => {\n        return new OptionalContentConfig(results);\n      });\n  }\n\n  getPermissions() {\n    return this.messageHandler.sendWithPromise(\"GetPermissions\", null);\n  }\n\n  getMetadata() {\n    return this.messageHandler\n      .sendWithPromise(\"GetMetadata\", null)\n      .then(results => {\n        return {\n          info: results[0],\n          metadata: results[1] ? new Metadata(results[1]) : null,\n          contentDispositionFilename: this._fullReader\n            ? this._fullReader.filename\n            : null,\n        };\n      });\n  }\n\n  getStats() {\n    return this.messageHandler.sendWithPromise(\"GetStats\", null);\n  }\n\n  startCleanup() {\n    return this.messageHandler.sendWithPromise(\"Cleanup\", null).then(() => {\n      for (let i = 0, ii = this.pageCache.length; i < ii; i++) {\n        const page = this.pageCache[i];\n        if (page) {\n          const cleanupSuccessful = page.cleanup();\n\n          if (!cleanupSuccessful) {\n            throw new Error(\n              `startCleanup: Page ${i + 1} is currently rendering.`\n            );\n          }\n        }\n      }\n      this.commonObjs.clear();\n      this.fontLoader.clear();\n    });\n  }\n\n  get loadingParams() {\n    const params = this._params;\n    return shadow(this, \"loadingParams\", {\n      disableAutoFetch: params.disableAutoFetch,\n      disableFontFace: params.disableFontFace,\n    });\n  }\n}\n\n/**\n * A PDF document and page is built of many objects. E.g. there are objects for\n * fonts, images, rendering code, etc. These objects may get processed inside of\n * a worker. This class implements some basic methods to manage these objects.\n * @ignore\n */\nclass PDFObjects {\n  constructor() {\n    this._objs = Object.create(null);\n  }\n\n  /**\n   * Ensures there is an object defined for `objId`.\n   * @private\n   */\n  _ensureObj(objId) {\n    if (this._objs[objId]) {\n      return this._objs[objId];\n    }\n    return (this._objs[objId] = {\n      capability: createPromiseCapability(),\n      data: null,\n      resolved: false,\n    });\n  }\n\n  /**\n   * If called *without* callback, this returns the data of `objId` but the\n   * object needs to be resolved. If it isn't, this method throws.\n   *\n   * If called *with* a callback, the callback is called with the data of the\n   * object once the object is resolved. That means, if you call this method\n   * and the object is already resolved, the callback gets called right away.\n   */\n  get(objId, callback = null) {\n    // If there is a callback, then the get can be async and the object is\n    // not required to be resolved right now.\n    if (callback) {\n      this._ensureObj(objId).capability.promise.then(callback);\n      return null;\n    }\n    // If there isn't a callback, the user expects to get the resolved data\n    // directly.\n    const obj = this._objs[objId];\n    // If there isn't an object yet or the object isn't resolved, then the\n    // data isn't ready yet!\n    if (!obj || !obj.resolved) {\n      throw new Error(`Requesting object that isn't resolved yet ${objId}.`);\n    }\n    return obj.data;\n  }\n\n  has(objId) {\n    const obj = this._objs[objId];\n    return obj ? obj.resolved : false;\n  }\n\n  /**\n   * Resolves the object `objId` with optional `data`.\n   */\n  resolve(objId, data) {\n    const obj = this._ensureObj(objId);\n\n    obj.resolved = true;\n    obj.data = data;\n    obj.capability.resolve(data);\n  }\n\n  clear() {\n    this._objs = Object.create(null);\n  }\n}\n\n/**\n * Allows controlling of the rendering tasks.\n */\nclass RenderTask {\n  constructor(internalRenderTask) {\n    this._internalRenderTask = internalRenderTask;\n\n    /**\n     * Callback for incremental rendering -- a function that will be called\n     * each time the rendering is paused.  To continue rendering call the\n     * function that is the first argument to the callback.\n     * @type {function}\n     */\n    this.onContinue = null;\n  }\n\n  /**\n   * Promise for rendering task completion.\n   * @type {Promise<void>}\n   */\n  get promise() {\n    return this._internalRenderTask.capability.promise;\n  }\n\n  /**\n   * Cancels the rendering task. If the task is currently rendering it will\n   * not be cancelled until graphics pauses with a timeout. The promise that\n   * this object extends will be rejected when cancelled.\n   */\n  cancel() {\n    this._internalRenderTask.cancel();\n  }\n}\n\n/**\n * For internal use only.\n * @ignore\n */\nconst InternalRenderTask = (function InternalRenderTaskClosure() {\n  const canvasInRendering = new WeakSet();\n\n  // eslint-disable-next-line no-shadow\n  class InternalRenderTask {\n    constructor({\n      callback,\n      params,\n      objs,\n      commonObjs,\n      operatorList,\n      pageIndex,\n      canvasFactory,\n      webGLContext,\n      useRequestAnimationFrame = false,\n      pdfBug = false,\n    }) {\n      this.callback = callback;\n      this.params = params;\n      this.objs = objs;\n      this.commonObjs = commonObjs;\n      this.operatorListIdx = null;\n      this.operatorList = operatorList;\n      this._pageIndex = pageIndex;\n      this.canvasFactory = canvasFactory;\n      this.webGLContext = webGLContext;\n      this._pdfBug = pdfBug;\n\n      this.running = false;\n      this.graphicsReadyCallback = null;\n      this.graphicsReady = false;\n      this._useRequestAnimationFrame =\n        useRequestAnimationFrame === true && typeof window !== \"undefined\";\n      this.cancelled = false;\n      this.capability = createPromiseCapability();\n      this.task = new RenderTask(this);\n      // caching this-bound methods\n      this._continueBound = this._continue.bind(this);\n      this._scheduleNextBound = this._scheduleNext.bind(this);\n      this._nextBound = this._next.bind(this);\n      this._canvas = params.canvasContext.canvas;\n    }\n\n    get completed() {\n      return this.capability.promise.catch(function () {\n        // Ignoring errors, since we only want to know when rendering is\n        // no longer pending.\n      });\n    }\n\n    initializeGraphics({ transparency = false, optionalContentConfig }) {\n      if (this.cancelled) {\n        return;\n      }\n      if (this._canvas) {\n        if (canvasInRendering.has(this._canvas)) {\n          throw new Error(\n            \"Cannot use the same canvas during multiple render() operations. \" +\n              \"Use different canvas or ensure previous operations were \" +\n              \"cancelled or completed.\"\n          );\n        }\n        canvasInRendering.add(this._canvas);\n      }\n\n      if (\n        this._pdfBug &&\n        globalThis.StepperManager &&\n        globalThis.StepperManager.enabled\n      ) {\n        this.stepper = globalThis.StepperManager.create(this._pageIndex);\n        this.stepper.init(this.operatorList);\n        this.stepper.nextBreakPoint = this.stepper.getNextBreakPoint();\n      }\n      const {\n        canvasContext,\n        viewport,\n        transform,\n        imageLayer,\n        background,\n      } = this.params;\n\n      this.gfx = new CanvasGraphics(\n        canvasContext,\n        this.commonObjs,\n        this.objs,\n        this.canvasFactory,\n        this.webGLContext,\n        imageLayer,\n        optionalContentConfig\n      );\n      this.gfx.beginDrawing({\n        transform,\n        viewport,\n        transparency,\n        background,\n      });\n      this.operatorListIdx = 0;\n      this.graphicsReady = true;\n      if (this.graphicsReadyCallback) {\n        this.graphicsReadyCallback();\n      }\n    }\n\n    cancel(error = null) {\n      this.running = false;\n      this.cancelled = true;\n      if (this.gfx) {\n        this.gfx.endDrawing();\n      }\n      if (this._canvas) {\n        canvasInRendering.delete(this._canvas);\n      }\n      this.callback(\n        error ||\n          new RenderingCancelledException(\n            `Rendering cancelled, page ${this._pageIndex + 1}`,\n            \"canvas\"\n          )\n      );\n    }\n\n    operatorListChanged() {\n      if (!this.graphicsReady) {\n        if (!this.graphicsReadyCallback) {\n          this.graphicsReadyCallback = this._continueBound;\n        }\n        return;\n      }\n\n      if (this.stepper) {\n        this.stepper.updateOperatorList(this.operatorList);\n      }\n\n      if (this.running) {\n        return;\n      }\n      this._continue();\n    }\n\n    _continue() {\n      this.running = true;\n      if (this.cancelled) {\n        return;\n      }\n      if (this.task.onContinue) {\n        this.task.onContinue(this._scheduleNextBound);\n      } else {\n        this._scheduleNext();\n      }\n    }\n\n    _scheduleNext() {\n      if (this._useRequestAnimationFrame) {\n        window.requestAnimationFrame(() => {\n          this._nextBound().catch(this.cancel.bind(this));\n        });\n      } else {\n        Promise.resolve().then(this._nextBound).catch(this.cancel.bind(this));\n      }\n    }\n\n    async _next() {\n      if (this.cancelled) {\n        return;\n      }\n      this.operatorListIdx = this.gfx.executeOperatorList(\n        this.operatorList,\n        this.operatorListIdx,\n        this._continueBound,\n        this.stepper\n      );\n      if (this.operatorListIdx === this.operatorList.argsArray.length) {\n        this.running = false;\n        if (this.operatorList.lastChunk) {\n          this.gfx.endDrawing();\n          if (this._canvas) {\n            canvasInRendering.delete(this._canvas);\n          }\n          this.callback();\n        }\n      }\n    }\n  }\n  return InternalRenderTask;\n})();\n\n/** @type {string} */\nconst version =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_VERSION\") : null;\n/** @type {string} */\nconst build =\n  typeof PDFJSDev !== \"undefined\" ? PDFJSDev.eval(\"BUNDLE_BUILD\") : null;\n\nexport {\n  getDocument,\n  LoopbackPort,\n  PDFDataRangeTransport,\n  PDFWorker,\n  PDFDocumentProxy,\n  PDFPageProxy,\n  setPDFNetworkStreamFactory,\n  version,\n  build,\n};\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  bytesToString,\n  IsEvalSupportedCached,\n  shadow,\n  string32,\n  unreachable,\n  UNSUPPORTED_FEATURES,\n  warn,\n} from \"../shared/util.js\";\n\nclass BaseFontLoader {\n  constructor({\n    docId,\n    onUnsupportedFeature,\n    ownerDocument = globalThis.document,\n  }) {\n    if (this.constructor === BaseFontLoader) {\n      unreachable(\"Cannot initialize BaseFontLoader.\");\n    }\n    this.docId = docId;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this._document = ownerDocument;\n\n    this.nativeFontFaces = [];\n    this.styleElement = null;\n  }\n\n  addNativeFontFace(nativeFontFace) {\n    this.nativeFontFaces.push(nativeFontFace);\n    this._document.fonts.add(nativeFontFace);\n  }\n\n  insertRule(rule) {\n    let styleElement = this.styleElement;\n    if (!styleElement) {\n      styleElement = this.styleElement = this._document.createElement(\"style\");\n      styleElement.id = `PDFJS_FONT_STYLE_TAG_${this.docId}`;\n      this._document.documentElement\n        .getElementsByTagName(\"head\")[0]\n        .appendChild(styleElement);\n    }\n\n    const styleSheet = styleElement.sheet;\n    styleSheet.insertRule(rule, styleSheet.cssRules.length);\n  }\n\n  clear() {\n    this.nativeFontFaces.forEach(nativeFontFace => {\n      this._document.fonts.delete(nativeFontFace);\n    });\n    this.nativeFontFaces.length = 0;\n\n    if (this.styleElement) {\n      // Note: ChildNode.remove doesn't throw if the parentNode is undefined.\n      this.styleElement.remove();\n      this.styleElement = null;\n    }\n  }\n\n  async bind(font) {\n    // Add the font to the DOM only once; skip if the font is already loaded.\n    if (font.attached || font.missingFile) {\n      return;\n    }\n    font.attached = true;\n\n    if (this.isFontLoadingAPISupported) {\n      const nativeFontFace = font.createNativeFontFace();\n      if (nativeFontFace) {\n        this.addNativeFontFace(nativeFontFace);\n        try {\n          await nativeFontFace.loaded;\n        } catch (ex) {\n          this._onUnsupportedFeature({\n            featureId: UNSUPPORTED_FEATURES.errorFontLoadNative,\n          });\n          warn(`Failed to load font '${nativeFontFace.family}': '${ex}'.`);\n\n          // When font loading failed, fall back to the built-in font renderer.\n          font.disableFontFace = true;\n          throw ex;\n        }\n      }\n      return; // The font was, asynchronously, loaded.\n    }\n\n    // !this.isFontLoadingAPISupported\n    const rule = font.createFontFaceRule();\n    if (rule) {\n      this.insertRule(rule);\n\n      if (this.isSyncFontLoadingSupported) {\n        return; // The font was, synchronously, loaded.\n      }\n      await new Promise(resolve => {\n        const request = this._queueLoadingCallback(resolve);\n        this._prepareFontLoadEvent([rule], [font], request);\n      });\n      // The font was, asynchronously, loaded.\n    }\n  }\n\n  _queueLoadingCallback(callback) {\n    unreachable(\"Abstract method `_queueLoadingCallback`.\");\n  }\n\n  get isFontLoadingAPISupported() {\n    const supported =\n      typeof this._document !== \"undefined\" && !!this._document.fonts;\n    return shadow(this, \"isFontLoadingAPISupported\", supported);\n  }\n\n  // eslint-disable-next-line getter-return\n  get isSyncFontLoadingSupported() {\n    unreachable(\"Abstract method `isSyncFontLoadingSupported`.\");\n  }\n\n  // eslint-disable-next-line getter-return\n  get _loadTestFont() {\n    unreachable(\"Abstract method `_loadTestFont`.\");\n  }\n\n  _prepareFontLoadEvent(rules, fontsToLoad, request) {\n    unreachable(\"Abstract method `_prepareFontLoadEvent`.\");\n  }\n}\n\nlet FontLoader;\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  FontLoader = class MozcentralFontLoader extends BaseFontLoader {\n    get isSyncFontLoadingSupported() {\n      return shadow(this, \"isSyncFontLoadingSupported\", true);\n    }\n  };\n} else {\n  // PDFJSDev.test('CHROME || GENERIC')\n\n  FontLoader = class GenericFontLoader extends BaseFontLoader {\n    constructor(params) {\n      super(params);\n      this.loadingContext = {\n        requests: [],\n        nextRequestId: 0,\n      };\n      this.loadTestFontId = 0;\n    }\n\n    get isSyncFontLoadingSupported() {\n      let supported = false;\n      if (typeof PDFJSDev === \"undefined\" || !PDFJSDev.test(\"CHROME\")) {\n        if (typeof navigator === \"undefined\") {\n          // Node.js - we can pretend that sync font loading is supported.\n          supported = true;\n        } else {\n          // User agent string sniffing is bad, but there is no reliable way to\n          // tell if the font is fully loaded and ready to be used with canvas.\n          const m = /Mozilla\\/5.0.*?rv:(\\d+).*? Gecko/.exec(\n            navigator.userAgent\n          );\n          if (m && m[1] >= 14) {\n            supported = true;\n          }\n          // TODO - other browsers...\n        }\n      }\n      return shadow(this, \"isSyncFontLoadingSupported\", supported);\n    }\n\n    _queueLoadingCallback(callback) {\n      function completeRequest() {\n        assert(!request.done, \"completeRequest() cannot be called twice.\");\n        request.done = true;\n\n        // Sending all completed requests in order of how they were queued.\n        while (context.requests.length > 0 && context.requests[0].done) {\n          const otherRequest = context.requests.shift();\n          setTimeout(otherRequest.callback, 0);\n        }\n      }\n\n      const context = this.loadingContext;\n      const request = {\n        id: `pdfjs-font-loading-${context.nextRequestId++}`,\n        done: false,\n        complete: completeRequest,\n        callback,\n      };\n      context.requests.push(request);\n      return request;\n    }\n\n    get _loadTestFont() {\n      const getLoadTestFont = function () {\n        // This is a CFF font with 1 glyph for '.' that fills its entire width\n        // and height.\n        return atob(\n          \"T1RUTwALAIAAAwAwQ0ZGIDHtZg4AAAOYAAAAgUZGVE1lkzZwAAAEHAAAABxHREVGABQA\" +\n            \"FQAABDgAAAAeT1MvMlYNYwkAAAEgAAAAYGNtYXABDQLUAAACNAAAAUJoZWFk/xVFDQAA\" +\n            \"ALwAAAA2aGhlYQdkA+oAAAD0AAAAJGhtdHgD6AAAAAAEWAAAAAZtYXhwAAJQAAAAARgA\" +\n            \"AAAGbmFtZVjmdH4AAAGAAAAAsXBvc3T/hgAzAAADeAAAACAAAQAAAAEAALZRFsRfDzz1\" +\n            \"AAsD6AAAAADOBOTLAAAAAM4KHDwAAAAAA+gDIQAAAAgAAgAAAAAAAAABAAADIQAAAFoD\" +\n            \"6AAAAAAD6AABAAAAAAAAAAAAAAAAAAAAAQAAUAAAAgAAAAQD6AH0AAUAAAKKArwAAACM\" +\n            \"AooCvAAAAeAAMQECAAACAAYJAAAAAAAAAAAAAQAAAAAAAAAAAAAAAFBmRWQAwAAuAC4D\" +\n            \"IP84AFoDIQAAAAAAAQAAAAAAAAAAACAAIAABAAAADgCuAAEAAAAAAAAAAQAAAAEAAAAA\" +\n            \"AAEAAQAAAAEAAAAAAAIAAQAAAAEAAAAAAAMAAQAAAAEAAAAAAAQAAQAAAAEAAAAAAAUA\" +\n            \"AQAAAAEAAAAAAAYAAQAAAAMAAQQJAAAAAgABAAMAAQQJAAEAAgABAAMAAQQJAAIAAgAB\" +\n            \"AAMAAQQJAAMAAgABAAMAAQQJAAQAAgABAAMAAQQJAAUAAgABAAMAAQQJAAYAAgABWABY\" +\n            \"AAAAAAAAAwAAAAMAAAAcAAEAAAAAADwAAwABAAAAHAAEACAAAAAEAAQAAQAAAC7//wAA\" +\n            \"AC7////TAAEAAAAAAAABBgAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\" +\n            \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAAAAAAD/gwAyAAAAAQAAAAAAAAAAAAAAAAAA\" +\n            \"AAABAAQEAAEBAQJYAAEBASH4DwD4GwHEAvgcA/gXBIwMAYuL+nz5tQXkD5j3CBLnEQAC\" +\n            \"AQEBIVhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYWFhYAAABAQAADwACAQEEE/t3\" +\n            \"Dov6fAH6fAT+fPp8+nwHDosMCvm1Cvm1DAz6fBQAAAAAAAABAAAAAMmJbzEAAAAAzgTj\" +\n            \"FQAAAADOBOQpAAEAAAAAAAAADAAUAAQAAAABAAAAAgABAAAAAAAAAAAD6AAAAAAAAA==\"\n        );\n      };\n      return shadow(this, \"_loadTestFont\", getLoadTestFont());\n    }\n\n    _prepareFontLoadEvent(rules, fonts, request) {\n      /** Hack begin */\n      // There's currently no event when a font has finished downloading so the\n      // following code is a dirty hack to 'guess' when a font is ready.\n      // It's assumed fonts are loaded in order, so add a known test font after\n      // the desired fonts and then test for the loading of that test font.\n\n      function int32(data, offset) {\n        return (\n          (data.charCodeAt(offset) << 24) |\n          (data.charCodeAt(offset + 1) << 16) |\n          (data.charCodeAt(offset + 2) << 8) |\n          (data.charCodeAt(offset + 3) & 0xff)\n        );\n      }\n      function spliceString(s, offset, remove, insert) {\n        const chunk1 = s.substring(0, offset);\n        const chunk2 = s.substring(offset + remove);\n        return chunk1 + insert + chunk2;\n      }\n      let i, ii;\n\n      // The temporary canvas is used to determine if fonts are loaded.\n      const canvas = this._document.createElement(\"canvas\");\n      canvas.width = 1;\n      canvas.height = 1;\n      const ctx = canvas.getContext(\"2d\");\n\n      let called = 0;\n      function isFontReady(name, callback) {\n        called++;\n        // With setTimeout clamping this gives the font ~100ms to load.\n        if (called > 30) {\n          warn(\"Load test font never loaded.\");\n          callback();\n          return;\n        }\n        ctx.font = \"30px \" + name;\n        ctx.fillText(\".\", 0, 20);\n        const imageData = ctx.getImageData(0, 0, 1, 1);\n        if (imageData.data[3] > 0) {\n          callback();\n          return;\n        }\n        setTimeout(isFontReady.bind(null, name, callback));\n      }\n\n      const loadTestFontId = `lt${Date.now()}${this.loadTestFontId++}`;\n      // Chromium seems to cache fonts based on a hash of the actual font data,\n      // so the font must be modified for each load test else it will appear to\n      // be loaded already.\n      // TODO: This could maybe be made faster by avoiding the btoa of the full\n      // font by splitting it in chunks before hand and padding the font id.\n      let data = this._loadTestFont;\n      const COMMENT_OFFSET = 976; // has to be on 4 byte boundary (for checksum)\n      data = spliceString(\n        data,\n        COMMENT_OFFSET,\n        loadTestFontId.length,\n        loadTestFontId\n      );\n      // CFF checksum is important for IE, adjusting it\n      const CFF_CHECKSUM_OFFSET = 16;\n      const XXXX_VALUE = 0x58585858; // the \"comment\" filled with 'X'\n      let checksum = int32(data, CFF_CHECKSUM_OFFSET);\n      for (i = 0, ii = loadTestFontId.length - 3; i < ii; i += 4) {\n        checksum = (checksum - XXXX_VALUE + int32(loadTestFontId, i)) | 0;\n      }\n      if (i < loadTestFontId.length) {\n        // align to 4 bytes boundary\n        checksum =\n          (checksum - XXXX_VALUE + int32(loadTestFontId + \"XXX\", i)) | 0;\n      }\n      data = spliceString(data, CFF_CHECKSUM_OFFSET, 4, string32(checksum));\n\n      const url = `url(data:font/opentype;base64,${btoa(data)});`;\n      const rule = `@font-face {font-family:\"${loadTestFontId}\";src:${url}}`;\n      this.insertRule(rule);\n\n      const names = [];\n      for (i = 0, ii = fonts.length; i < ii; i++) {\n        names.push(fonts[i].loadedName);\n      }\n      names.push(loadTestFontId);\n\n      const div = this._document.createElement(\"div\");\n      div.style.visibility = \"hidden\";\n      div.style.width = div.style.height = \"10px\";\n      div.style.position = \"absolute\";\n      div.style.top = div.style.left = \"0px\";\n\n      for (i = 0, ii = names.length; i < ii; ++i) {\n        const span = this._document.createElement(\"span\");\n        span.textContent = \"Hi\";\n        span.style.fontFamily = names[i];\n        div.appendChild(span);\n      }\n      this._document.body.appendChild(div);\n\n      isFontReady(loadTestFontId, () => {\n        this._document.body.removeChild(div);\n        request.complete();\n      });\n      /** Hack end */\n    }\n  };\n} // End of PDFJSDev.test('CHROME || GENERIC')\n\nclass FontFaceObject {\n  constructor(\n    translatedData,\n    {\n      isEvalSupported = true,\n      disableFontFace = false,\n      ignoreErrors = false,\n      onUnsupportedFeature = null,\n      fontRegistry = null,\n    }\n  ) {\n    this.compiledGlyphs = Object.create(null);\n    // importing translated data\n    for (const i in translatedData) {\n      this[i] = translatedData[i];\n    }\n    this.isEvalSupported = isEvalSupported !== false;\n    this.disableFontFace = disableFontFace === true;\n    this.ignoreErrors = ignoreErrors === true;\n    this._onUnsupportedFeature = onUnsupportedFeature;\n    this.fontRegistry = fontRegistry;\n  }\n\n  createNativeFontFace() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const nativeFontFace = new FontFace(this.loadedName, this.data, {});\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this);\n    }\n    return nativeFontFace;\n  }\n\n  createFontFaceRule() {\n    if (!this.data || this.disableFontFace) {\n      return null;\n    }\n    const data = bytesToString(new Uint8Array(this.data));\n    // Add the @font-face rule to the document.\n    const url = `url(data:${this.mimetype};base64,${btoa(data)});`;\n    const rule = `@font-face {font-family:\"${this.loadedName}\";src:${url}}`;\n\n    if (this.fontRegistry) {\n      this.fontRegistry.registerFont(this, url);\n    }\n    return rule;\n  }\n\n  getPathGenerator(objs, character) {\n    if (this.compiledGlyphs[character] !== undefined) {\n      return this.compiledGlyphs[character];\n    }\n\n    let cmds, current;\n    try {\n      cmds = objs.get(this.loadedName + \"_path_\" + character);\n    } catch (ex) {\n      if (!this.ignoreErrors) {\n        throw ex;\n      }\n      if (this._onUnsupportedFeature) {\n        this._onUnsupportedFeature({\n          featureId: UNSUPPORTED_FEATURES.errorFontGetPath,\n        });\n      }\n      warn(`getPathGenerator - ignoring character: \"${ex}\".`);\n\n      return (this.compiledGlyphs[character] = function (c, size) {\n        // No-op function, to allow rendering to continue.\n      });\n    }\n\n    // If we can, compile cmds into JS for MAXIMUM SPEED...\n    if (this.isEvalSupported && IsEvalSupportedCached.value) {\n      let args,\n        js = \"\";\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.args !== undefined) {\n          args = current.args.join(\",\");\n        } else {\n          args = \"\";\n        }\n        js += \"c.\" + current.cmd + \"(\" + args + \");\\n\";\n      }\n      // eslint-disable-next-line no-new-func\n      return (this.compiledGlyphs[character] = new Function(\"c\", \"size\", js));\n    }\n    // ... but fall back on using Function.prototype.apply() if we're\n    // blocked from using eval() for whatever reason (like CSP policies).\n    return (this.compiledGlyphs[character] = function (c, size) {\n      for (let i = 0, ii = cmds.length; i < ii; i++) {\n        current = cmds[i];\n\n        if (current.cmd === \"scale\") {\n          current.args = [size, -size];\n        }\n        c[current.cmd].apply(c, current.args);\n      }\n    });\n  }\n}\n\nexport { FontFaceObject, FontLoader };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport { BaseCanvasFactory, BaseCMapReaderFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\nimport { unreachable } from \"../shared/util.js\";\n\nlet NodeCanvasFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCanvasFactory\");\n  }\n};\n\nlet NodeCMapReaderFactory = class {\n  constructor() {\n    unreachable(\"Not implemented: NodeCMapReaderFactory\");\n  }\n};\n\nif ((typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) && isNodeJS) {\n  NodeCanvasFactory = class extends BaseCanvasFactory {\n    create(width, height) {\n      if (width <= 0 || height <= 0) {\n        throw new Error(\"Invalid canvas size\");\n      }\n      const Canvas = __non_webpack_require__(\"canvas\");\n      const canvas = Canvas.createCanvas(width, height);\n      return {\n        canvas,\n        context: canvas.getContext(\"2d\"),\n      };\n    }\n  };\n\n  NodeCMapReaderFactory = class extends BaseCMapReaderFactory {\n    _fetchData(url, compressionType) {\n      return new Promise((resolve, reject) => {\n        const fs = __non_webpack_require__(\"fs\");\n        fs.readFile(url, (error, data) => {\n          if (error || !data) {\n            reject(new Error(error));\n            return;\n          }\n          resolve({ cMapData: new Uint8Array(data), compressionType });\n        });\n      });\n    }\n  };\n}\n\nexport { NodeCanvasFactory, NodeCMapReaderFactory };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Key/value storage for annotation data in forms.\n */\nclass AnnotationStorage {\n  constructor() {\n    this._storage = new Map();\n    this._modified = false;\n\n    // Callbacks to signal when the modification state is set or reset.\n    // This is used by the viewer to only bind on `beforeunload` if forms\n    // are actually edited to prevent doing so unconditionally since that\n    // can have undesirable efffects.\n    this.onSetModified = null;\n    this.onResetModified = null;\n  }\n\n  /**\n   * Get the value for a given key if it exists\n   * or store and return the default value\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} defaultValue\n   * @returns {Object}\n   */\n  getOrCreateValue(key, defaultValue) {\n    if (this._storage.has(key)) {\n      return this._storage.get(key);\n    }\n\n    this._storage.set(key, defaultValue);\n    return defaultValue;\n  }\n\n  /**\n   * Set the value for a given key\n   *\n   * @public\n   * @memberof AnnotationStorage\n   * @param {string} key\n   * @param {Object} value\n   */\n  setValue(key, value) {\n    if (this._storage.get(key) !== value) {\n      this._setModified();\n    }\n    this._storage.set(key, value);\n  }\n\n  getAll() {\n    if (this._storage.size === 0) {\n      return null;\n    }\n    return Object.fromEntries(this._storage);\n  }\n\n  get size() {\n    return this._storage.size;\n  }\n\n  /**\n   * @private\n   */\n  _setModified() {\n    if (!this._modified) {\n      this._modified = true;\n      if (typeof this.onSetModified === \"function\") {\n        this.onSetModified();\n      }\n    }\n  }\n\n  resetModified() {\n    if (this._modified) {\n      this._modified = false;\n      if (typeof this.onResetModified === \"function\") {\n        this.onResetModified();\n      }\n    }\n  }\n}\n\nexport { AnnotationStorage };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isNodeJS } from \"../shared/is_node.js\";\n\nconst compatibilityParams = Object.create(null);\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  // Support: Node.js\n  (function checkFontFace() {\n    // Node.js is missing native support for `@font-face`.\n    if (isNodeJS) {\n      compatibilityParams.disableFontFace = true;\n    }\n  })();\n}\nconst apiCompatibilityParams = Object.freeze(compatibilityParams);\n\nexport { apiCompatibilityParams };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  info,\n  IsLittleEndianCached,\n  isNum,\n  OPS,\n  shadow,\n  TextRenderingMode,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { getShadingPatternFromIR, TilingPattern } from \"./pattern_helper.js\";\n\n// <canvas> contexts store most of the state we need natively.\n// However, PDF needs a bit more state, which we store here.\n\n// Minimal font size that would be used during canvas fillText operations.\nvar MIN_FONT_SIZE = 16;\n// Maximum font size that would be used during canvas fillText operations.\nvar MAX_FONT_SIZE = 100;\nvar MAX_GROUP_SIZE = 4096;\n\n// Heuristic value used when enforcing minimum line widths.\nvar MIN_WIDTH_FACTOR = 0.65;\n\nvar COMPILE_TYPE3_GLYPHS = true;\nvar MAX_SIZE_TO_COMPILE = 1000;\n\nvar FULL_CHUNK_HEIGHT = 16;\n\nfunction addContextCurrentTransform(ctx) {\n  // If the context doesn't expose a `mozCurrentTransform`, add a JS based one.\n  if (!ctx.mozCurrentTransform) {\n    ctx._originalSave = ctx.save;\n    ctx._originalRestore = ctx.restore;\n    ctx._originalRotate = ctx.rotate;\n    ctx._originalScale = ctx.scale;\n    ctx._originalTranslate = ctx.translate;\n    ctx._originalTransform = ctx.transform;\n    ctx._originalSetTransform = ctx.setTransform;\n\n    ctx._transformMatrix = ctx._transformMatrix || [1, 0, 0, 1, 0, 0];\n    ctx._transformStack = [];\n\n    Object.defineProperty(ctx, \"mozCurrentTransform\", {\n      get: function getCurrentTransform() {\n        return this._transformMatrix;\n      },\n    });\n\n    Object.defineProperty(ctx, \"mozCurrentTransformInverse\", {\n      get: function getCurrentTransformInverse() {\n        // Calculation done using WolframAlpha:\n        // http://www.wolframalpha.com/input/?\n        //   i=Inverse+{{a%2C+c%2C+e}%2C+{b%2C+d%2C+f}%2C+{0%2C+0%2C+1}}\n\n        var m = this._transformMatrix;\n        var a = m[0],\n          b = m[1],\n          c = m[2],\n          d = m[3],\n          e = m[4],\n          f = m[5];\n\n        var ad_bc = a * d - b * c;\n        var bc_ad = b * c - a * d;\n\n        return [\n          d / ad_bc,\n          b / bc_ad,\n          c / bc_ad,\n          a / ad_bc,\n          (d * e - c * f) / bc_ad,\n          (b * e - a * f) / ad_bc,\n        ];\n      },\n    });\n\n    ctx.save = function ctxSave() {\n      var old = this._transformMatrix;\n      this._transformStack.push(old);\n      this._transformMatrix = old.slice(0, 6);\n\n      this._originalSave();\n    };\n\n    ctx.restore = function ctxRestore() {\n      var prev = this._transformStack.pop();\n      if (prev) {\n        this._transformMatrix = prev;\n        this._originalRestore();\n      }\n    };\n\n    ctx.translate = function ctxTranslate(x, y) {\n      var m = this._transformMatrix;\n      m[4] = m[0] * x + m[2] * y + m[4];\n      m[5] = m[1] * x + m[3] * y + m[5];\n\n      this._originalTranslate(x, y);\n    };\n\n    ctx.scale = function ctxScale(x, y) {\n      var m = this._transformMatrix;\n      m[0] = m[0] * x;\n      m[1] = m[1] * x;\n      m[2] = m[2] * y;\n      m[3] = m[3] * y;\n\n      this._originalScale(x, y);\n    };\n\n    ctx.transform = function ctxTransform(a, b, c, d, e, f) {\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * a + m[2] * b,\n        m[1] * a + m[3] * b,\n        m[0] * c + m[2] * d,\n        m[1] * c + m[3] * d,\n        m[0] * e + m[2] * f + m[4],\n        m[1] * e + m[3] * f + m[5],\n      ];\n\n      ctx._originalTransform(a, b, c, d, e, f);\n    };\n\n    ctx.setTransform = function ctxSetTransform(a, b, c, d, e, f) {\n      this._transformMatrix = [a, b, c, d, e, f];\n\n      ctx._originalSetTransform(a, b, c, d, e, f);\n    };\n\n    ctx.rotate = function ctxRotate(angle) {\n      var cosValue = Math.cos(angle);\n      var sinValue = Math.sin(angle);\n\n      var m = this._transformMatrix;\n      this._transformMatrix = [\n        m[0] * cosValue + m[2] * sinValue,\n        m[1] * cosValue + m[3] * sinValue,\n        m[0] * -sinValue + m[2] * cosValue,\n        m[1] * -sinValue + m[3] * cosValue,\n        m[4],\n        m[5],\n      ];\n\n      this._originalRotate(angle);\n    };\n  }\n}\n\nvar CachedCanvases = (function CachedCanvasesClosure() {\n  // eslint-disable-next-line no-shadow\n  function CachedCanvases(canvasFactory) {\n    this.canvasFactory = canvasFactory;\n    this.cache = Object.create(null);\n  }\n  CachedCanvases.prototype = {\n    getCanvas: function CachedCanvases_getCanvas(\n      id,\n      width,\n      height,\n      trackTransform\n    ) {\n      var canvasEntry;\n      if (this.cache[id] !== undefined) {\n        canvasEntry = this.cache[id];\n        this.canvasFactory.reset(canvasEntry, width, height);\n        // reset canvas transform for emulated mozCurrentTransform, if needed\n        canvasEntry.context.setTransform(1, 0, 0, 1, 0, 0);\n      } else {\n        canvasEntry = this.canvasFactory.create(width, height);\n        this.cache[id] = canvasEntry;\n      }\n      if (trackTransform) {\n        addContextCurrentTransform(canvasEntry.context);\n      }\n      return canvasEntry;\n    },\n    clear() {\n      for (var id in this.cache) {\n        var canvasEntry = this.cache[id];\n        this.canvasFactory.destroy(canvasEntry);\n        delete this.cache[id];\n      }\n    },\n  };\n  return CachedCanvases;\n})();\n\nfunction compileType3Glyph(imgData) {\n  var POINT_TO_PROCESS_LIMIT = 1000;\n\n  var width = imgData.width,\n    height = imgData.height;\n  var i,\n    j,\n    j0,\n    width1 = width + 1;\n  var points = new Uint8Array(width1 * (height + 1));\n  // prettier-ignore\n  var POINT_TYPES =\n      new Uint8Array([0, 2, 4, 0, 1, 0, 5, 4, 8, 10, 0, 8, 0, 2, 1, 0]);\n\n  // decodes bit-packed mask data\n  var lineSize = (width + 7) & ~7,\n    data0 = imgData.data;\n  var data = new Uint8Array(lineSize * height),\n    pos = 0,\n    ii;\n  for (i = 0, ii = data0.length; i < ii; i++) {\n    var mask = 128,\n      elem = data0[i];\n    while (mask > 0) {\n      data[pos++] = elem & mask ? 0 : 255;\n      mask >>= 1;\n    }\n  }\n\n  // finding interesting points: every point is located between mask pixels,\n  // so there will be points of the (width + 1)x(height + 1) grid. Every point\n  // will have flags assigned based on neighboring mask pixels:\n  //   4 | 8\n  //   --P--\n  //   2 | 1\n  // We are interested only in points with the flags:\n  //   - outside corners: 1, 2, 4, 8;\n  //   - inside corners: 7, 11, 13, 14;\n  //   - and, intersections: 5, 10.\n  var count = 0;\n  pos = 0;\n  if (data[pos] !== 0) {\n    points[0] = 1;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j] = data[pos] ? 2 : 1;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j] = 2;\n    ++count;\n  }\n  for (i = 1; i < height; i++) {\n    pos = i * lineSize;\n    j0 = i * width1;\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0] = data[pos] ? 1 : 8;\n      ++count;\n    }\n    // 'sum' is the position of the current pixel configuration in the 'TYPES'\n    // array (in order 8-1-2-4, so we can use '>>2' to shift the column).\n    var sum = (data[pos] ? 4 : 0) + (data[pos - lineSize] ? 8 : 0);\n    for (j = 1; j < width; j++) {\n      sum =\n        (sum >> 2) +\n        (data[pos + 1] ? 4 : 0) +\n        (data[pos - lineSize + 1] ? 8 : 0);\n      if (POINT_TYPES[sum]) {\n        points[j0 + j] = POINT_TYPES[sum];\n        ++count;\n      }\n      pos++;\n    }\n    if (data[pos - lineSize] !== data[pos]) {\n      points[j0 + j] = data[pos] ? 2 : 4;\n      ++count;\n    }\n\n    if (count > POINT_TO_PROCESS_LIMIT) {\n      return null;\n    }\n  }\n\n  pos = lineSize * (height - 1);\n  j0 = i * width1;\n  if (data[pos] !== 0) {\n    points[j0] = 8;\n    ++count;\n  }\n  for (j = 1; j < width; j++) {\n    if (data[pos] !== data[pos + 1]) {\n      points[j0 + j] = data[pos] ? 4 : 8;\n      ++count;\n    }\n    pos++;\n  }\n  if (data[pos] !== 0) {\n    points[j0 + j] = 4;\n    ++count;\n  }\n  if (count > POINT_TO_PROCESS_LIMIT) {\n    return null;\n  }\n\n  // building outlines\n  var steps = new Int32Array([0, width1, -1, 0, -width1, 0, 0, 0, 1]);\n  var outlines = [];\n  for (i = 0; count && i <= height; i++) {\n    var p = i * width1;\n    var end = p + width;\n    while (p < end && !points[p]) {\n      p++;\n    }\n    if (p === end) {\n      continue;\n    }\n    var coords = [p % width1, i];\n\n    var type = points[p],\n      p0 = p,\n      pp;\n    do {\n      var step = steps[type];\n      do {\n        p += step;\n      } while (!points[p]);\n\n      pp = points[p];\n      if (pp !== 5 && pp !== 10) {\n        // set new direction\n        type = pp;\n        // delete mark\n        points[p] = 0;\n      } else {\n        // type is 5 or 10, ie, a crossing\n        // set new direction\n        type = pp & ((0x33 * type) >> 4);\n        // set new type for \"future hit\"\n        points[p] &= (type >> 2) | (type << 2);\n      }\n\n      coords.push(p % width1);\n      coords.push((p / width1) | 0);\n\n      if (!points[p]) {\n        --count;\n      }\n    } while (p0 !== p);\n    outlines.push(coords);\n    --i;\n  }\n\n  var drawOutline = function (c) {\n    c.save();\n    // the path shall be painted in [0..1]x[0..1] space\n    c.scale(1 / width, -1 / height);\n    c.translate(0, -height);\n    c.beginPath();\n    for (let k = 0, kk = outlines.length; k < kk; k++) {\n      var o = outlines[k];\n      c.moveTo(o[0], o[1]);\n      for (let l = 2, ll = o.length; l < ll; l += 2) {\n        c.lineTo(o[l], o[l + 1]);\n      }\n    }\n    c.fill();\n    c.beginPath();\n    c.restore();\n  };\n\n  return drawOutline;\n}\n\nvar CanvasExtraState = (function CanvasExtraStateClosure() {\n  // eslint-disable-next-line no-shadow\n  function CanvasExtraState() {\n    // Are soft masks and alpha values shapes or opacities?\n    this.alphaIsShape = false;\n    this.fontSize = 0;\n    this.fontSizeScale = 1;\n    this.textMatrix = IDENTITY_MATRIX;\n    this.textMatrixScale = 1;\n    this.fontMatrix = FONT_IDENTITY_MATRIX;\n    this.leading = 0;\n    // Current point (in user coordinates)\n    this.x = 0;\n    this.y = 0;\n    // Start of text line (in text coordinates)\n    this.lineX = 0;\n    this.lineY = 0;\n    // Character and word spacing\n    this.charSpacing = 0;\n    this.wordSpacing = 0;\n    this.textHScale = 1;\n    this.textRenderingMode = TextRenderingMode.FILL;\n    this.textRise = 0;\n    // Default fore and background colors\n    this.fillColor = \"#000000\";\n    this.strokeColor = \"#000000\";\n    this.patternFill = false;\n    // Note: fill alpha applies to all non-stroking operations\n    this.fillAlpha = 1;\n    this.strokeAlpha = 1;\n    this.lineWidth = 1;\n    this.activeSMask = null;\n    this.resumeSMaskCtx = null; // nonclonable field (see the save method below)\n    this.transferMaps = null;\n  }\n\n  CanvasExtraState.prototype = {\n    clone: function CanvasExtraState_clone() {\n      return Object.create(this);\n    },\n    setCurrentPoint: function CanvasExtraState_setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    },\n  };\n  return CanvasExtraState;\n})();\n\n/**\n * @type {any}\n */\nvar CanvasGraphics = (function CanvasGraphicsClosure() {\n  // Defines the time the executeOperatorList is going to be executing\n  // before it stops and shedules a continue of execution.\n  var EXECUTION_TIME = 15;\n  // Defines the number of steps before checking the execution time\n  var EXECUTION_STEPS = 10;\n\n  // eslint-disable-next-line no-shadow\n  function CanvasGraphics(\n    canvasCtx,\n    commonObjs,\n    objs,\n    canvasFactory,\n    webGLContext,\n    imageLayer,\n    optionalContentConfig\n  ) {\n    this.ctx = canvasCtx;\n    this.current = new CanvasExtraState();\n    this.stateStack = [];\n    this.pendingClip = null;\n    this.pendingEOFill = false;\n    this.res = null;\n    this.xobjs = null;\n    this.commonObjs = commonObjs;\n    this.objs = objs;\n    this.canvasFactory = canvasFactory;\n    this.webGLContext = webGLContext;\n    this.imageLayer = imageLayer;\n    this.groupStack = [];\n    this.processingType3 = null;\n    // Patterns are painted relative to the initial page/form transform, see pdf\n    // spec 8.7.2 NOTE 1.\n    this.baseTransform = null;\n    this.baseTransformStack = [];\n    this.groupLevel = 0;\n    this.smaskStack = [];\n    this.smaskCounter = 0;\n    this.tempSMask = null;\n    this.contentVisible = true;\n    this.markedContentStack = [];\n    this.optionalContentConfig = optionalContentConfig;\n    this.cachedCanvases = new CachedCanvases(this.canvasFactory);\n    if (canvasCtx) {\n      // NOTE: if mozCurrentTransform is polyfilled, then the current state of\n      // the transformation must already be set in canvasCtx._transformMatrix.\n      addContextCurrentTransform(canvasCtx);\n    }\n    this._cachedGetSinglePixelWidth = null;\n  }\n\n  function putBinaryImageData(ctx, imgData, transferMaps = null) {\n    if (typeof ImageData !== \"undefined\" && imgData instanceof ImageData) {\n      ctx.putImageData(imgData, 0, 0);\n      return;\n    }\n\n    // Put the image data to the canvas in chunks, rather than putting the\n    // whole image at once.  This saves JS memory, because the ImageData object\n    // is smaller. It also possibly saves C++ memory within the implementation\n    // of putImageData(). (E.g. in Firefox we make two short-lived copies of\n    // the data passed to putImageData()). |n| shouldn't be too small, however,\n    // because too many putImageData() calls will slow things down.\n    //\n    // Note: as written, if the last chunk is partial, the putImageData() call\n    // will (conceptually) put pixels past the bounds of the canvas.  But\n    // that's ok; any such pixels are ignored.\n\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0,\n      destPos;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n    var i, j, thisChunkHeight, elemsInThisChunk;\n\n    let transferMapRed, transferMapGreen, transferMapBlue, transferMapGray;\n    if (transferMaps) {\n      switch (transferMaps.length) {\n        case 1:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[0];\n          transferMapBlue = transferMaps[0];\n          transferMapGray = transferMaps[0];\n          break;\n        case 4:\n          transferMapRed = transferMaps[0];\n          transferMapGreen = transferMaps[1];\n          transferMapBlue = transferMaps[2];\n          transferMapGray = transferMaps[3];\n          break;\n      }\n    }\n\n    // There are multiple forms in which the pixel data can be passed, and\n    // imgData.kind tells us which one this is.\n    if (imgData.kind === ImageKind.GRAYSCALE_1BPP) {\n      // Grayscale, 1 bit per pixel (i.e. black-and-white).\n      var srcLength = src.byteLength;\n      var dest32 = new Uint32Array(dest.buffer, 0, dest.byteLength >> 2);\n      var dest32DataLength = dest32.length;\n      var fullSrcDiff = (width + 7) >> 3;\n      var white = 0xffffffff;\n      var black = IsLittleEndianCached.value ? 0xff000000 : 0x000000ff;\n\n      if (transferMapGray) {\n        if (transferMapGray[0] === 0xff && transferMapGray[0xff] === 0) {\n          [white, black] = [black, white];\n        }\n      }\n\n      for (i = 0; i < totalChunks; i++) {\n        thisChunkHeight =\n          i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n        destPos = 0;\n        for (j = 0; j < thisChunkHeight; j++) {\n          var srcDiff = srcLength - srcPos;\n          let k = 0;\n          var kEnd = srcDiff > fullSrcDiff ? width : srcDiff * 8 - 7;\n          var kEndUnrolled = kEnd & ~7;\n          var mask = 0;\n          var srcByte = 0;\n          for (; k < kEndUnrolled; k += 8) {\n            srcByte = src[srcPos++];\n            dest32[destPos++] = srcByte & 128 ? white : black;\n            dest32[destPos++] = srcByte & 64 ? white : black;\n            dest32[destPos++] = srcByte & 32 ? white : black;\n            dest32[destPos++] = srcByte & 16 ? white : black;\n            dest32[destPos++] = srcByte & 8 ? white : black;\n            dest32[destPos++] = srcByte & 4 ? white : black;\n            dest32[destPos++] = srcByte & 2 ? white : black;\n            dest32[destPos++] = srcByte & 1 ? white : black;\n          }\n          for (; k < kEnd; k++) {\n            if (mask === 0) {\n              srcByte = src[srcPos++];\n              mask = 128;\n            }\n\n            dest32[destPos++] = srcByte & mask ? white : black;\n            mask >>= 1;\n          }\n        }\n        // We ran out of input. Make all remaining pixels transparent.\n        while (destPos < dest32DataLength) {\n          dest32[destPos++] = 0;\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else if (imgData.kind === ImageKind.RGBA_32BPP) {\n      // RGBA, 32-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      j = 0;\n      elemsInThisChunk = width * FULL_CHUNK_HEIGHT * 4;\n      for (i = 0; i < fullChunks; i++) {\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n        srcPos += elemsInThisChunk;\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n        j += FULL_CHUNK_HEIGHT;\n      }\n      if (i < totalChunks) {\n        elemsInThisChunk = width * partialChunkHeight * 4;\n        dest.set(src.subarray(srcPos, srcPos + elemsInThisChunk));\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < elemsInThisChunk; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, j);\n      }\n    } else if (imgData.kind === ImageKind.RGB_24BPP) {\n      // RGB, 24-bits per pixel.\n      const hasTransferMaps = !!(\n        transferMapRed ||\n        transferMapGreen ||\n        transferMapBlue\n      );\n\n      thisChunkHeight = FULL_CHUNK_HEIGHT;\n      elemsInThisChunk = width * thisChunkHeight;\n      for (i = 0; i < totalChunks; i++) {\n        if (i >= fullChunks) {\n          thisChunkHeight = partialChunkHeight;\n          elemsInThisChunk = width * thisChunkHeight;\n        }\n\n        destPos = 0;\n        for (j = elemsInThisChunk; j--; ) {\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = src[srcPos++];\n          dest[destPos++] = 255;\n        }\n\n        if (hasTransferMaps) {\n          for (let k = 0; k < destPos; k += 4) {\n            if (transferMapRed) {\n              dest[k + 0] = transferMapRed[dest[k + 0]];\n            }\n            if (transferMapGreen) {\n              dest[k + 1] = transferMapGreen[dest[k + 1]];\n            }\n            if (transferMapBlue) {\n              dest[k + 2] = transferMapBlue[dest[k + 2]];\n            }\n          }\n        }\n\n        ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n      }\n    } else {\n      throw new Error(`bad image kind: ${imgData.kind}`);\n    }\n  }\n\n  function putBinaryImageMask(ctx, imgData) {\n    var height = imgData.height,\n      width = imgData.width;\n    var partialChunkHeight = height % FULL_CHUNK_HEIGHT;\n    var fullChunks = (height - partialChunkHeight) / FULL_CHUNK_HEIGHT;\n    var totalChunks = partialChunkHeight === 0 ? fullChunks : fullChunks + 1;\n\n    var chunkImgData = ctx.createImageData(width, FULL_CHUNK_HEIGHT);\n    var srcPos = 0;\n    var src = imgData.data;\n    var dest = chunkImgData.data;\n\n    for (var i = 0; i < totalChunks; i++) {\n      var thisChunkHeight =\n        i < fullChunks ? FULL_CHUNK_HEIGHT : partialChunkHeight;\n\n      // Expand the mask so it can be used by the canvas.  Any required\n      // inversion has already been handled.\n      var destPos = 3; // alpha component offset\n      for (var j = 0; j < thisChunkHeight; j++) {\n        var mask = 0;\n        for (var k = 0; k < width; k++) {\n          if (!mask) {\n            var elem = src[srcPos++];\n            mask = 128;\n          }\n          dest[destPos] = elem & mask ? 0 : 255;\n          destPos += 4;\n          mask >>= 1;\n        }\n      }\n      ctx.putImageData(chunkImgData, 0, i * FULL_CHUNK_HEIGHT);\n    }\n  }\n\n  function copyCtxState(sourceCtx, destCtx) {\n    var properties = [\n      \"strokeStyle\",\n      \"fillStyle\",\n      \"fillRule\",\n      \"globalAlpha\",\n      \"lineWidth\",\n      \"lineCap\",\n      \"lineJoin\",\n      \"miterLimit\",\n      \"globalCompositeOperation\",\n      \"font\",\n    ];\n    for (var i = 0, ii = properties.length; i < ii; i++) {\n      var property = properties[i];\n      if (sourceCtx[property] !== undefined) {\n        destCtx[property] = sourceCtx[property];\n      }\n    }\n    if (sourceCtx.setLineDash !== undefined) {\n      destCtx.setLineDash(sourceCtx.getLineDash());\n      destCtx.lineDashOffset = sourceCtx.lineDashOffset;\n    }\n  }\n\n  function resetCtxToDefault(ctx) {\n    ctx.strokeStyle = \"#000000\";\n    ctx.fillStyle = \"#000000\";\n    ctx.fillRule = \"nonzero\";\n    ctx.globalAlpha = 1;\n    ctx.lineWidth = 1;\n    ctx.lineCap = \"butt\";\n    ctx.lineJoin = \"miter\";\n    ctx.miterLimit = 10;\n    ctx.globalCompositeOperation = \"source-over\";\n    ctx.font = \"10px sans-serif\";\n    if (ctx.setLineDash !== undefined) {\n      ctx.setLineDash([]);\n      ctx.lineDashOffset = 0;\n    }\n  }\n\n  function composeSMaskBackdrop(bytes, r0, g0, b0) {\n    var length = bytes.length;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = bytes[i];\n      if (alpha === 0) {\n        bytes[i - 3] = r0;\n        bytes[i - 2] = g0;\n        bytes[i - 1] = b0;\n      } else if (alpha < 255) {\n        var alpha_ = 255 - alpha;\n        bytes[i - 3] = (bytes[i - 3] * alpha + r0 * alpha_) >> 8;\n        bytes[i - 2] = (bytes[i - 2] * alpha + g0 * alpha_) >> 8;\n        bytes[i - 1] = (bytes[i - 1] * alpha + b0 * alpha_) >> 8;\n      }\n    }\n  }\n\n  function composeSMaskAlpha(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    var scale = 1 / 255;\n    for (var i = 3; i < length; i += 4) {\n      var alpha = transferMap ? transferMap[maskData[i]] : maskData[i];\n      layerData[i] = (layerData[i] * alpha * scale) | 0;\n    }\n  }\n\n  function composeSMaskLuminosity(maskData, layerData, transferMap) {\n    var length = maskData.length;\n    for (var i = 3; i < length; i += 4) {\n      var y =\n        maskData[i - 3] * 77 + // * 0.3 / 255 * 0x10000\n        maskData[i - 2] * 152 + // * 0.59 ....\n        maskData[i - 1] * 28; // * 0.11 ....\n      layerData[i] = transferMap\n        ? (layerData[i] * transferMap[y >> 8]) >> 8\n        : (layerData[i] * y) >> 16;\n    }\n  }\n\n  function genericComposeSMask(\n    maskCtx,\n    layerCtx,\n    width,\n    height,\n    subtype,\n    backdrop,\n    transferMap\n  ) {\n    var hasBackdrop = !!backdrop;\n    var r0 = hasBackdrop ? backdrop[0] : 0;\n    var g0 = hasBackdrop ? backdrop[1] : 0;\n    var b0 = hasBackdrop ? backdrop[2] : 0;\n\n    var composeFn;\n    if (subtype === \"Luminosity\") {\n      composeFn = composeSMaskLuminosity;\n    } else {\n      composeFn = composeSMaskAlpha;\n    }\n\n    // processing image in chunks to save memory\n    var PIXELS_TO_PROCESS = 1048576;\n    var chunkSize = Math.min(height, Math.ceil(PIXELS_TO_PROCESS / width));\n    for (var row = 0; row < height; row += chunkSize) {\n      var chunkHeight = Math.min(chunkSize, height - row);\n      var maskData = maskCtx.getImageData(0, row, width, chunkHeight);\n      var layerData = layerCtx.getImageData(0, row, width, chunkHeight);\n\n      if (hasBackdrop) {\n        composeSMaskBackdrop(maskData.data, r0, g0, b0);\n      }\n      composeFn(maskData.data, layerData.data, transferMap);\n\n      maskCtx.putImageData(layerData, 0, row);\n    }\n  }\n\n  function composeSMask(ctx, smask, layerCtx, webGLContext) {\n    var mask = smask.canvas;\n    var maskCtx = smask.context;\n\n    ctx.setTransform(\n      smask.scaleX,\n      0,\n      0,\n      smask.scaleY,\n      smask.offsetX,\n      smask.offsetY\n    );\n\n    var backdrop = smask.backdrop || null;\n    if (!smask.transferMap && webGLContext.isEnabled) {\n      const composed = webGLContext.composeSMask({\n        layer: layerCtx.canvas,\n        mask,\n        properties: {\n          subtype: smask.subtype,\n          backdrop,\n        },\n      });\n      ctx.setTransform(1, 0, 0, 1, 0, 0);\n      ctx.drawImage(composed, smask.offsetX, smask.offsetY);\n      return;\n    }\n    genericComposeSMask(\n      maskCtx,\n      layerCtx,\n      mask.width,\n      mask.height,\n      smask.subtype,\n      backdrop,\n      smask.transferMap\n    );\n    ctx.drawImage(mask, 0, 0);\n  }\n\n  var LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  var LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n  var NORMAL_CLIP = {};\n  var EO_CLIP = {};\n\n  CanvasGraphics.prototype = {\n    beginDrawing({\n      transform,\n      viewport,\n      transparency = false,\n      background = null,\n    }) {\n      // For pdfs that use blend modes we have to clear the canvas else certain\n      // blend modes can look wrong since we'd be blending with a white\n      // backdrop. The problem with a transparent backdrop though is we then\n      // don't get sub pixel anti aliasing on text, creating temporary\n      // transparent canvas when we have blend modes.\n      var width = this.ctx.canvas.width;\n      var height = this.ctx.canvas.height;\n\n      this.ctx.save();\n      this.ctx.fillStyle = background || \"rgb(255, 255, 255)\";\n      this.ctx.fillRect(0, 0, width, height);\n      this.ctx.restore();\n\n      if (transparency) {\n        var transparentCanvas = this.cachedCanvases.getCanvas(\n          \"transparent\",\n          width,\n          height,\n          true\n        );\n        this.compositeCtx = this.ctx;\n        this.transparentCanvas = transparentCanvas.canvas;\n        this.ctx = transparentCanvas.context;\n        this.ctx.save();\n        // The transform can be applied before rendering, transferring it to\n        // the new canvas.\n        this.ctx.transform.apply(\n          this.ctx,\n          this.compositeCtx.mozCurrentTransform\n        );\n      }\n\n      this.ctx.save();\n      resetCtxToDefault(this.ctx);\n      if (transform) {\n        this.ctx.transform.apply(this.ctx, transform);\n      }\n      this.ctx.transform.apply(this.ctx, viewport.transform);\n\n      this.baseTransform = this.ctx.mozCurrentTransform.slice();\n\n      if (this.imageLayer) {\n        this.imageLayer.beginLayout();\n      }\n    },\n\n    executeOperatorList: function CanvasGraphics_executeOperatorList(\n      operatorList,\n      executionStartIdx,\n      continueCallback,\n      stepper\n    ) {\n      var argsArray = operatorList.argsArray;\n      var fnArray = operatorList.fnArray;\n      var i = executionStartIdx || 0;\n      var argsArrayLen = argsArray.length;\n\n      // Sometimes the OperatorList to execute is empty.\n      if (argsArrayLen === i) {\n        return i;\n      }\n\n      var chunkOperations =\n        argsArrayLen - i > EXECUTION_STEPS &&\n        typeof continueCallback === \"function\";\n      var endTime = chunkOperations ? Date.now() + EXECUTION_TIME : 0;\n      var steps = 0;\n\n      var commonObjs = this.commonObjs;\n      var objs = this.objs;\n      var fnId;\n\n      while (true) {\n        if (stepper !== undefined && i === stepper.nextBreakPoint) {\n          stepper.breakIt(i, continueCallback);\n          return i;\n        }\n\n        fnId = fnArray[i];\n\n        if (fnId !== OPS.dependency) {\n          this[fnId].apply(this, argsArray[i]);\n        } else {\n          for (const depObjId of argsArray[i]) {\n            const objsPool = depObjId.startsWith(\"g_\") ? commonObjs : objs;\n\n            // If the promise isn't resolved yet, add the continueCallback\n            // to the promise and bail out.\n            if (!objsPool.has(depObjId)) {\n              objsPool.get(depObjId, continueCallback);\n              return i;\n            }\n          }\n        }\n\n        i++;\n\n        // If the entire operatorList was executed, stop as were done.\n        if (i === argsArrayLen) {\n          return i;\n        }\n\n        // If the execution took longer then a certain amount of time and\n        // `continueCallback` is specified, interrupt the execution.\n        if (chunkOperations && ++steps > EXECUTION_STEPS) {\n          if (Date.now() > endTime) {\n            continueCallback();\n            return i;\n          }\n          steps = 0;\n        }\n\n        // If the operatorList isn't executed completely yet OR the execution\n        // time was short enough, do another execution round.\n      }\n    },\n\n    endDrawing: function CanvasGraphics_endDrawing() {\n      // Finishing all opened operations such as SMask group painting.\n      if (this.current.activeSMask !== null) {\n        this.endSMaskGroup();\n      }\n\n      this.ctx.restore();\n\n      if (this.transparentCanvas) {\n        this.ctx = this.compositeCtx;\n        this.ctx.save();\n        this.ctx.setTransform(1, 0, 0, 1, 0, 0); // Avoid apply transform twice\n        this.ctx.drawImage(this.transparentCanvas, 0, 0);\n        this.ctx.restore();\n        this.transparentCanvas = null;\n      }\n\n      this.cachedCanvases.clear();\n      this.webGLContext.clear();\n\n      if (this.imageLayer) {\n        this.imageLayer.endLayout();\n      }\n    },\n\n    // Graphics state\n    setLineWidth: function CanvasGraphics_setLineWidth(width) {\n      this.current.lineWidth = width;\n      this.ctx.lineWidth = width;\n    },\n    setLineCap: function CanvasGraphics_setLineCap(style) {\n      this.ctx.lineCap = LINE_CAP_STYLES[style];\n    },\n    setLineJoin: function CanvasGraphics_setLineJoin(style) {\n      this.ctx.lineJoin = LINE_JOIN_STYLES[style];\n    },\n    setMiterLimit: function CanvasGraphics_setMiterLimit(limit) {\n      this.ctx.miterLimit = limit;\n    },\n    setDash: function CanvasGraphics_setDash(dashArray, dashPhase) {\n      var ctx = this.ctx;\n      if (ctx.setLineDash !== undefined) {\n        ctx.setLineDash(dashArray);\n        ctx.lineDashOffset = dashPhase;\n      }\n    },\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    },\n    setGState: function CanvasGraphics_setGState(states) {\n      for (var i = 0, ii = states.length; i < ii; i++) {\n        var state = states[i];\n        var key = state[0];\n        var value = state[1];\n\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value[0], value[1]);\n            break;\n          case \"CA\":\n            this.current.strokeAlpha = state[1];\n            break;\n          case \"ca\":\n            this.current.fillAlpha = state[1];\n            this.ctx.globalAlpha = state[1];\n            break;\n          case \"BM\":\n            this.ctx.globalCompositeOperation = value;\n            break;\n          case \"SMask\":\n            if (this.current.activeSMask) {\n              // If SMask is currrenly used, it needs to be suspended or\n              // finished. Suspend only makes sense when at least one save()\n              // was performed and state needs to be reverted on restore().\n              if (\n                this.stateStack.length > 0 &&\n                this.stateStack[this.stateStack.length - 1].activeSMask ===\n                  this.current.activeSMask\n              ) {\n                this.suspendSMaskGroup();\n              } else {\n                this.endSMaskGroup();\n              }\n            }\n            this.current.activeSMask = value ? this.tempSMask : null;\n            if (this.current.activeSMask) {\n              this.beginSMaskGroup();\n            }\n            this.tempSMask = null;\n            break;\n          case \"TR\":\n            this.current.transferMaps = value;\n        }\n      }\n    },\n    beginSMaskGroup: function CanvasGraphics_beginSMaskGroup() {\n      var activeSMask = this.current.activeSMask;\n      var drawnWidth = activeSMask.canvas.width;\n      var drawnHeight = activeSMask.canvas.height;\n      var cacheId = \"smaskGroupAt\" + this.groupLevel;\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n\n      var currentCtx = this.ctx;\n      var currentTransform = currentCtx.mozCurrentTransform;\n      this.ctx.save();\n\n      var groupCtx = scratchCanvas.context;\n      groupCtx.scale(1 / activeSMask.scaleX, 1 / activeSMask.scaleY);\n      groupCtx.translate(-activeSMask.offsetX, -activeSMask.offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      activeSMask.startTransformInverse = groupCtx.mozCurrentTransformInverse;\n\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    suspendSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Similar to endSMaskGroup, the intermediate canvas has to be composed\n      // and future ctx state restored.\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      this.ctx.save(); // save is needed since SMask will be resumed.\n      copyCtxState(groupCtx, this.ctx);\n\n      // Saving state for resuming.\n      this.current.resumeSMaskCtx = groupCtx;\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n\n      // SMask was composed, the results at the groupCtx can be cleared.\n      groupCtx.save();\n      groupCtx.setTransform(1, 0, 0, 1, 0, 0);\n      groupCtx.clearRect(0, 0, groupCtx.canvas.width, groupCtx.canvas.height);\n      groupCtx.restore();\n    },\n    resumeSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      // Resuming state saved by suspendSMaskGroup. We don't need to restore\n      // any groupCtx state since restore() command (the only caller) will do\n      // that for us. See also beginSMaskGroup.\n      var groupCtx = this.current.resumeSMaskCtx;\n      var currentCtx = this.ctx;\n      this.ctx = groupCtx;\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n    },\n    endSMaskGroup: function CanvasGraphics_endSMaskGroup() {\n      var groupCtx = this.ctx;\n      this.groupLevel--;\n      this.ctx = this.groupStack.pop();\n\n      composeSMask(\n        this.ctx,\n        this.current.activeSMask,\n        groupCtx,\n        this.webGLContext\n      );\n      this.ctx.restore();\n      copyCtxState(groupCtx, this.ctx);\n      // Transform was changed in the SMask canvas, reflecting this change on\n      // this.ctx.\n      var deltaTransform = Util.transform(\n        this.current.activeSMask.startTransformInverse,\n        groupCtx.mozCurrentTransform\n      );\n      this.ctx.transform.apply(this.ctx, deltaTransform);\n    },\n    save: function CanvasGraphics_save() {\n      this.ctx.save();\n      var old = this.current;\n      this.stateStack.push(old);\n      this.current = old.clone();\n      this.current.resumeSMaskCtx = null;\n    },\n    restore: function CanvasGraphics_restore() {\n      // SMask was suspended, we just need to resume it.\n      if (this.current.resumeSMaskCtx) {\n        this.resumeSMaskGroup();\n      }\n      // SMask has to be finished once there is no states that are using the\n      // same SMask.\n      if (\n        this.current.activeSMask !== null &&\n        (this.stateStack.length === 0 ||\n          this.stateStack[this.stateStack.length - 1].activeSMask !==\n            this.current.activeSMask)\n      ) {\n        this.endSMaskGroup();\n      }\n\n      if (this.stateStack.length !== 0) {\n        this.current = this.stateStack.pop();\n        this.ctx.restore();\n\n        // Ensure that the clipping path is reset (fixes issue6413.pdf).\n        this.pendingClip = null;\n\n        this._cachedGetSinglePixelWidth = null;\n      }\n    },\n    transform: function CanvasGraphics_transform(a, b, c, d, e, f) {\n      this.ctx.transform(a, b, c, d, e, f);\n\n      this._cachedGetSinglePixelWidth = null;\n    },\n\n    // Path\n    constructPath: function CanvasGraphics_constructPath(ops, args) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var x = current.x,\n        y = current.y;\n      for (var i = 0, j = 0, ii = ops.length; i < ii; i++) {\n        switch (ops[i] | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            var width = args[j++];\n            var height = args[j++];\n            if (width === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n              width = this.getSinglePixelWidth();\n            }\n            if (height === 0 && ctx.lineWidth < this.getSinglePixelWidth()) {\n              height = this.getSinglePixelWidth();\n            }\n            var xw = x + width;\n            var yh = y + height;\n            ctx.moveTo(x, y);\n            ctx.lineTo(xw, y);\n            ctx.lineTo(xw, yh);\n            ctx.lineTo(x, yh);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.moveTo(x, y);\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            ctx.lineTo(x, y);\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            ctx.bezierCurveTo(\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3],\n              x,\n              y\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            ctx.bezierCurveTo(\n              x,\n              y,\n              args[j],\n              args[j + 1],\n              args[j + 2],\n              args[j + 3]\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            ctx.bezierCurveTo(args[j], args[j + 1], x, y, x, y);\n            j += 4;\n            break;\n          case OPS.closePath:\n            ctx.closePath();\n            break;\n        }\n      }\n      current.setCurrentPoint(x, y);\n    },\n    closePath: function CanvasGraphics_closePath() {\n      this.ctx.closePath();\n    },\n    stroke: function CanvasGraphics_stroke(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var strokeColor = this.current.strokeColor;\n      // For stroke we want to temporarily change the global alpha to the\n      // stroking alpha.\n      ctx.globalAlpha = this.current.strokeAlpha;\n      if (this.contentVisible) {\n        if (\n          strokeColor &&\n          strokeColor.hasOwnProperty(\"type\") &&\n          strokeColor.type === \"Pattern\"\n        ) {\n          // for patterns, we transform to pattern space, calculate\n          // the pattern, call stroke, and restore to user space\n          ctx.save();\n          // The current transform will be replaced while building the pattern,\n          // but the line width needs to be adjusted by the current transform,\n          // so we must scale it. To properly fix this we should be using a\n          // pattern transform instead (see #10955).\n          const transform = ctx.mozCurrentTransform;\n          const scale = Util.singularValueDecompose2dScale(transform)[0];\n          ctx.strokeStyle = strokeColor.getPattern(ctx, this);\n          ctx.lineWidth = Math.max(\n            this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n            this.current.lineWidth * scale\n          );\n          ctx.stroke();\n          ctx.restore();\n        } else {\n          // Prevent drawing too thin lines by enforcing a minimum line width.\n          ctx.lineWidth = Math.max(\n            this.getSinglePixelWidth() * MIN_WIDTH_FACTOR,\n            this.current.lineWidth\n          );\n          ctx.stroke();\n        }\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n      // Restore the global alpha to the fill alpha\n      ctx.globalAlpha = this.current.fillAlpha;\n    },\n    closeStroke: function CanvasGraphics_closeStroke() {\n      this.closePath();\n      this.stroke();\n    },\n    fill: function CanvasGraphics_fill(consumePath) {\n      consumePath = typeof consumePath !== \"undefined\" ? consumePath : true;\n      var ctx = this.ctx;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      var needRestore = false;\n\n      if (isPatternFill) {\n        ctx.save();\n        if (this.baseTransform) {\n          ctx.setTransform.apply(ctx, this.baseTransform);\n        }\n        ctx.fillStyle = fillColor.getPattern(ctx, this);\n        needRestore = true;\n      }\n\n      if (this.contentVisible) {\n        if (this.pendingEOFill) {\n          ctx.fill(\"evenodd\");\n          this.pendingEOFill = false;\n        } else {\n          ctx.fill();\n        }\n      }\n\n      if (needRestore) {\n        ctx.restore();\n      }\n      if (consumePath) {\n        this.consumePath();\n      }\n    },\n    eoFill: function CanvasGraphics_eoFill() {\n      this.pendingEOFill = true;\n      this.fill();\n    },\n    fillStroke: function CanvasGraphics_fillStroke() {\n      this.fill(false);\n      this.stroke(false);\n\n      this.consumePath();\n    },\n    eoFillStroke: function CanvasGraphics_eoFillStroke() {\n      this.pendingEOFill = true;\n      this.fillStroke();\n    },\n    closeFillStroke: function CanvasGraphics_closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    },\n    closeEOFillStroke: function CanvasGraphics_closeEOFillStroke() {\n      this.pendingEOFill = true;\n      this.closePath();\n      this.fillStroke();\n    },\n    endPath: function CanvasGraphics_endPath() {\n      this.consumePath();\n    },\n\n    // Clipping\n    clip: function CanvasGraphics_clip() {\n      this.pendingClip = NORMAL_CLIP;\n    },\n    eoClip: function CanvasGraphics_eoClip() {\n      this.pendingClip = EO_CLIP;\n    },\n\n    // Text\n    beginText: function CanvasGraphics_beginText() {\n      this.current.textMatrix = IDENTITY_MATRIX;\n      this.current.textMatrixScale = 1;\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    endText: function CanvasGraphics_endText() {\n      var paths = this.pendingTextPaths;\n      var ctx = this.ctx;\n      if (paths === undefined) {\n        ctx.beginPath();\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      for (var i = 0; i < paths.length; i++) {\n        var path = paths[i];\n        ctx.setTransform.apply(ctx, path.transform);\n        ctx.translate(path.x, path.y);\n        path.addToPath(ctx, path.fontSize);\n      }\n      ctx.restore();\n      ctx.clip();\n      ctx.beginPath();\n      delete this.pendingTextPaths;\n    },\n    setCharSpacing: function CanvasGraphics_setCharSpacing(spacing) {\n      this.current.charSpacing = spacing;\n    },\n    setWordSpacing: function CanvasGraphics_setWordSpacing(spacing) {\n      this.current.wordSpacing = spacing;\n    },\n    setHScale: function CanvasGraphics_setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    },\n    setLeading: function CanvasGraphics_setLeading(leading) {\n      this.current.leading = -leading;\n    },\n    setFont: function CanvasGraphics_setFont(fontRefName, size) {\n      var fontObj = this.commonObjs.get(fontRefName);\n      var current = this.current;\n\n      if (!fontObj) {\n        throw new Error(`Can't find font for ${fontRefName}`);\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      // A valid matrix needs all main diagonal elements to be non-zero\n      // This also ensures we bypass FF bugzilla bug #719844.\n      if (current.fontMatrix[0] === 0 || current.fontMatrix[3] === 0) {\n        warn(\"Invalid font matrix for font \" + fontRefName);\n      }\n\n      // The spec for Tf (setFont) says that 'size' specifies the font 'scale',\n      // and in some docs this can be negative (inverted x-y axes).\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n\n      this.current.font = fontObj;\n      this.current.fontSize = size;\n\n      if (fontObj.isType3Font) {\n        return; // we don't need ctx.font for Type3 fonts\n      }\n\n      var name = fontObj.loadedName || \"sans-serif\";\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      var italic = fontObj.italic ? \"italic\" : \"normal\";\n      var typeface = `\"${name}\", ${fontObj.fallbackName}`;\n\n      // Some font backends cannot handle fonts below certain size.\n      // Keeping the font at minimal size and using the fontSizeScale to change\n      // the current transformation matrix before the fillText/strokeText.\n      // See https://bugzilla.mozilla.org/show_bug.cgi?id=726227\n      let browserFontSize = size;\n      if (size < MIN_FONT_SIZE) {\n        browserFontSize = MIN_FONT_SIZE;\n      } else if (size > MAX_FONT_SIZE) {\n        browserFontSize = MAX_FONT_SIZE;\n      }\n      this.current.fontSizeScale = size / browserFontSize;\n\n      this.ctx.font = `${italic} ${bold} ${browserFontSize}px ${typeface}`;\n    },\n    setTextRenderingMode: function CanvasGraphics_setTextRenderingMode(mode) {\n      this.current.textRenderingMode = mode;\n    },\n    setTextRise: function CanvasGraphics_setTextRise(rise) {\n      this.current.textRise = rise;\n    },\n    moveText: function CanvasGraphics_moveText(x, y) {\n      this.current.x = this.current.lineX += x;\n      this.current.y = this.current.lineY += y;\n    },\n    setLeadingMoveText: function CanvasGraphics_setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    },\n    setTextMatrix: function CanvasGraphics_setTextMatrix(a, b, c, d, e, f) {\n      this.current.textMatrix = [a, b, c, d, e, f];\n      this.current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      this.current.x = this.current.lineX = 0;\n      this.current.y = this.current.lineY = 0;\n    },\n    nextLine: function CanvasGraphics_nextLine() {\n      this.moveText(0, this.current.leading);\n    },\n\n    paintChar(character, x, y, patternTransform) {\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var textRenderingMode = current.textRenderingMode;\n      var fontSize = current.fontSize / current.fontSizeScale;\n      var fillStrokeMode =\n        textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      var isAddToPathSet = !!(\n        textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG\n      );\n      const patternFill = current.patternFill && !font.missingFile;\n\n      var addToPath;\n      if (font.disableFontFace || isAddToPathSet || patternFill) {\n        addToPath = font.getPathGenerator(this.commonObjs, character);\n      }\n\n      if (font.disableFontFace || patternFill) {\n        ctx.save();\n        ctx.translate(x, y);\n        ctx.beginPath();\n        addToPath(ctx, fontSize);\n        if (patternTransform) {\n          ctx.setTransform.apply(ctx, patternTransform);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fill();\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.stroke();\n        }\n        ctx.restore();\n      } else {\n        if (\n          fillStrokeMode === TextRenderingMode.FILL ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.fillText(character, x, y);\n        }\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          ctx.strokeText(character, x, y);\n        }\n      }\n\n      if (isAddToPathSet) {\n        var paths = this.pendingTextPaths || (this.pendingTextPaths = []);\n        paths.push({\n          transform: ctx.mozCurrentTransform,\n          x,\n          y,\n          fontSize,\n          addToPath,\n        });\n      }\n    },\n\n    get isFontSubpixelAAEnabled() {\n      // Checks if anti-aliasing is enabled when scaled text is painted.\n      // On Windows GDI scaled fonts looks bad.\n      const { context: ctx } = this.cachedCanvases.getCanvas(\n        \"isFontSubpixelAAEnabled\",\n        10,\n        10\n      );\n      ctx.scale(1.5, 1);\n      ctx.fillText(\"I\", 0, 10);\n      var data = ctx.getImageData(0, 0, 10, 10).data;\n      var enabled = false;\n      for (var i = 3; i < data.length; i += 4) {\n        if (data[i] > 0 && data[i] < 255) {\n          enabled = true;\n          break;\n        }\n      }\n      return shadow(this, \"isFontSubpixelAAEnabled\", enabled);\n    },\n\n    showText: function CanvasGraphics_showText(glyphs) {\n      var current = this.current;\n      var font = current.font;\n      if (font.isType3Font) {\n        return this.showType3Text(glyphs);\n      }\n\n      var fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return undefined;\n      }\n\n      var ctx = this.ctx;\n      var fontSizeScale = current.fontSizeScale;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var fontDirection = current.fontDirection;\n      var textHScale = current.textHScale * fontDirection;\n      var glyphsLength = glyphs.length;\n      var vertical = font.vertical;\n      var spacingDir = vertical ? 1 : -1;\n      var defaultVMetrics = font.defaultVMetrics;\n      var widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      var simpleFillText =\n        current.textRenderingMode === TextRenderingMode.FILL &&\n        !font.disableFontFace &&\n        !current.patternFill;\n\n      ctx.save();\n      let patternTransform;\n      if (current.patternFill) {\n        // TODO: Patterns are not applied correctly to text if a non-embedded\n        // font is used. E.g. issue 8111 and ShowText-ShadingPattern.pdf.\n        ctx.save();\n        const pattern = current.fillColor.getPattern(ctx, this);\n        patternTransform = ctx.mozCurrentTransform;\n        ctx.restore();\n        ctx.fillStyle = pattern;\n      }\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y + current.textRise);\n\n      if (fontDirection > 0) {\n        ctx.scale(textHScale, -1);\n      } else {\n        ctx.scale(textHScale, 1);\n      }\n\n      var lineWidth = current.lineWidth;\n      var scale = current.textMatrixScale;\n      if (scale === 0 || lineWidth === 0) {\n        var fillStrokeMode =\n          current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n        if (\n          fillStrokeMode === TextRenderingMode.STROKE ||\n          fillStrokeMode === TextRenderingMode.FILL_STROKE\n        ) {\n          this._cachedGetSinglePixelWidth = null;\n          lineWidth = this.getSinglePixelWidth() * MIN_WIDTH_FACTOR;\n        }\n      } else {\n        lineWidth /= scale;\n      }\n\n      if (fontSizeScale !== 1.0) {\n        ctx.scale(fontSizeScale, fontSizeScale);\n        lineWidth /= fontSizeScale;\n      }\n\n      ctx.lineWidth = lineWidth;\n\n      var x = 0,\n        i;\n      for (i = 0; i < glyphsLength; ++i) {\n        var glyph = glyphs[i];\n        if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        var restoreNeeded = false;\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var character = glyph.fontChar;\n        var accent = glyph.accent;\n        var scaledX, scaledY, scaledAccentX, scaledAccentY;\n        var width = glyph.width;\n        if (vertical) {\n          var vmetric, vx, vy;\n          vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (font.remeasure && width > 0) {\n          // Some standard fonts may not have the exact width: rescale per\n          // character if measured width is greater than expected glyph width\n          // and subpixel-aa is enabled, otherwise just center the glyph.\n          var measuredWidth =\n            ((ctx.measureText(character).width * 1000) / fontSize) *\n            fontSizeScale;\n          if (width < measuredWidth && this.isFontSubpixelAAEnabled) {\n            var characterScaleX = width / measuredWidth;\n            restoreNeeded = true;\n            ctx.save();\n            ctx.scale(characterScaleX, 1);\n            scaledX /= characterScaleX;\n          } else if (width !== measuredWidth) {\n            scaledX +=\n              (((width - measuredWidth) / 2000) * fontSize) / fontSizeScale;\n          }\n        }\n\n        // Only attempt to draw the glyph if it is actually in the embedded font\n        // file or if there isn't a font file so the fallback font is shown.\n        if (this.contentVisible && (glyph.isInFont || font.missingFile)) {\n          if (simpleFillText && !accent) {\n            // common case\n            ctx.fillText(character, scaledX, scaledY);\n          } else {\n            this.paintChar(character, scaledX, scaledY, patternTransform);\n            if (accent) {\n              scaledAccentX =\n                scaledX + (fontSize * accent.offset.x) / fontSizeScale;\n              scaledAccentY =\n                scaledY - (fontSize * accent.offset.y) / fontSizeScale;\n              this.paintChar(\n                accent.fontChar,\n                scaledAccentX,\n                scaledAccentY,\n                patternTransform\n              );\n            }\n          }\n        }\n\n        var charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n        x += charWidth;\n\n        if (restoreNeeded) {\n          ctx.restore();\n        }\n      }\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n      ctx.restore();\n    },\n\n    showType3Text: function CanvasGraphics_showType3Text(glyphs) {\n      // Type3 fonts - each glyph is a \"mini-PDF\"\n      var ctx = this.ctx;\n      var current = this.current;\n      var font = current.font;\n      var fontSize = current.fontSize;\n      var fontDirection = current.fontDirection;\n      var spacingDir = font.vertical ? 1 : -1;\n      var charSpacing = current.charSpacing;\n      var wordSpacing = current.wordSpacing;\n      var textHScale = current.textHScale * fontDirection;\n      var fontMatrix = current.fontMatrix || FONT_IDENTITY_MATRIX;\n      var glyphsLength = glyphs.length;\n      var isTextInvisible =\n        current.textRenderingMode === TextRenderingMode.INVISIBLE;\n      var i, glyph, width, spacingLength;\n\n      if (isTextInvisible || fontSize === 0) {\n        return;\n      }\n      this._cachedGetSinglePixelWidth = null;\n\n      ctx.save();\n      ctx.transform.apply(ctx, current.textMatrix);\n      ctx.translate(current.x, current.y);\n\n      ctx.scale(textHScale, fontDirection);\n\n      for (i = 0; i < glyphsLength; ++i) {\n        glyph = glyphs[i];\n        if (isNum(glyph)) {\n          spacingLength = (spacingDir * glyph * fontSize) / 1000;\n          this.ctx.translate(spacingLength, 0);\n          current.x += spacingLength * textHScale;\n          continue;\n        }\n\n        var spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        var operatorList = font.charProcOperatorList[glyph.operatorListId];\n        if (!operatorList) {\n          warn(`Type3 character \"${glyph.operatorListId}\" is not available.`);\n          continue;\n        }\n        if (this.contentVisible) {\n          this.processingType3 = glyph;\n          this.save();\n          ctx.scale(fontSize, fontSize);\n          ctx.transform.apply(ctx, fontMatrix);\n          this.executeOperatorList(operatorList);\n          this.restore();\n        }\n\n        var transformed = Util.applyTransform([glyph.width, 0], fontMatrix);\n        width = transformed[0] * fontSize + spacing;\n\n        ctx.translate(width, 0);\n        current.x += width * textHScale;\n      }\n      ctx.restore();\n      this.processingType3 = null;\n    },\n\n    // Type3 fonts\n    setCharWidth: function CanvasGraphics_setCharWidth(xWidth, yWidth) {\n      // We can safely ignore this since the width should be the same\n      // as the width in the Widths array.\n    },\n    setCharWidthAndBounds: function CanvasGraphics_setCharWidthAndBounds(\n      xWidth,\n      yWidth,\n      llx,\n      lly,\n      urx,\n      ury\n    ) {\n      // TODO According to the spec we're also suppose to ignore any operators\n      // that set color or include images while processing this type3 font.\n      this.ctx.rect(llx, lly, urx - llx, ury - lly);\n      this.clip();\n      this.endPath();\n    },\n\n    // Color\n    getColorN_Pattern: function CanvasGraphics_getColorN_Pattern(IR) {\n      var pattern;\n      if (IR[0] === \"TilingPattern\") {\n        var color = IR[1];\n        var baseTransform =\n          this.baseTransform || this.ctx.mozCurrentTransform.slice();\n        var canvasGraphicsFactory = {\n          createCanvasGraphics: ctx => {\n            return new CanvasGraphics(\n              ctx,\n              this.commonObjs,\n              this.objs,\n              this.canvasFactory,\n              this.webGLContext\n            );\n          },\n        };\n        pattern = new TilingPattern(\n          IR,\n          color,\n          this.ctx,\n          canvasGraphicsFactory,\n          baseTransform\n        );\n      } else {\n        pattern = getShadingPatternFromIR(IR);\n      }\n      return pattern;\n    },\n    setStrokeColorN: function CanvasGraphics_setStrokeColorN() {\n      this.current.strokeColor = this.getColorN_Pattern(arguments);\n    },\n    setFillColorN: function CanvasGraphics_setFillColorN() {\n      this.current.fillColor = this.getColorN_Pattern(arguments);\n      this.current.patternFill = true;\n    },\n    setStrokeRGBColor: function CanvasGraphics_setStrokeRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.strokeStyle = color;\n      this.current.strokeColor = color;\n    },\n    setFillRGBColor: function CanvasGraphics_setFillRGBColor(r, g, b) {\n      var color = Util.makeCssRgb(r, g, b);\n      this.ctx.fillStyle = color;\n      this.current.fillColor = color;\n      this.current.patternFill = false;\n    },\n\n    shadingFill: function CanvasGraphics_shadingFill(patternIR) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n\n      this.save();\n      var pattern = getShadingPatternFromIR(patternIR);\n      ctx.fillStyle = pattern.getPattern(ctx, this, true);\n\n      var inv = ctx.mozCurrentTransformInverse;\n      if (inv) {\n        var canvas = ctx.canvas;\n        var width = canvas.width;\n        var height = canvas.height;\n\n        var bl = Util.applyTransform([0, 0], inv);\n        var br = Util.applyTransform([0, height], inv);\n        var ul = Util.applyTransform([width, 0], inv);\n        var ur = Util.applyTransform([width, height], inv);\n\n        var x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n        var y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n        var x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n        var y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n        this.ctx.fillRect(x0, y0, x1 - x0, y1 - y0);\n      } else {\n        // HACK to draw the gradient onto an infinite rectangle.\n        // PDF gradients are drawn across the entire image while\n        // Canvas only allows gradients to be drawn in a rectangle\n        // The following bug should allow us to remove this.\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=664884\n\n        this.ctx.fillRect(-1e10, -1e10, 2e10, 2e10);\n      }\n\n      this.restore();\n    },\n\n    // Images\n    beginInlineImage: function CanvasGraphics_beginInlineImage() {\n      unreachable(\"Should not call beginInlineImage\");\n    },\n    beginImageData: function CanvasGraphics_beginImageData() {\n      unreachable(\"Should not call beginImageData\");\n    },\n\n    paintFormXObjectBegin: function CanvasGraphics_paintFormXObjectBegin(\n      matrix,\n      bbox\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.save();\n      this.baseTransformStack.push(this.baseTransform);\n\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform.apply(this, matrix);\n      }\n\n      this.baseTransform = this.ctx.mozCurrentTransform;\n\n      if (bbox) {\n        var width = bbox[2] - bbox[0];\n        var height = bbox[3] - bbox[1];\n        this.ctx.rect(bbox[0], bbox[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n    },\n\n    paintFormXObjectEnd: function CanvasGraphics_paintFormXObjectEnd() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.restore();\n      this.baseTransform = this.baseTransformStack.pop();\n    },\n\n    beginGroup: function CanvasGraphics_beginGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n\n      this.save();\n      var currentCtx = this.ctx;\n      // TODO non-isolated groups - according to Rik at adobe non-isolated\n      // group results aren't usually that different and they even have tools\n      // that ignore this setting. Notes from Rik on implementing:\n      // - When you encounter an transparency group, create a new canvas with\n      // the dimensions of the bbox\n      // - copy the content from the previous canvas to the new canvas\n      // - draw as usual\n      // - remove the backdrop alpha:\n      // alphaNew = 1 - (1 - alpha)/(1 - alphaBackdrop) with 'alpha' the alpha\n      // value of your transparency group and 'alphaBackdrop' the alpha of the\n      // backdrop\n      // - remove background color:\n      // colorNew = color - alphaNew *colorBackdrop /(1 - alphaNew)\n      if (!group.isolated) {\n        info(\"TODO: Support non-isolated groups.\");\n      }\n\n      // TODO knockout - supposedly possible with the clever use of compositing\n      // modes.\n      if (group.knockout) {\n        warn(\"Knockout groups not supported.\");\n      }\n\n      var currentTransform = currentCtx.mozCurrentTransform;\n      if (group.matrix) {\n        currentCtx.transform.apply(currentCtx, group.matrix);\n      }\n      if (!group.bbox) {\n        throw new Error(\"Bounding box is required.\");\n      }\n\n      // Based on the current transform figure out how big the bounding box\n      // will actually be.\n      var bounds = Util.getAxialAlignedBoundingBox(\n        group.bbox,\n        currentCtx.mozCurrentTransform\n      );\n      // Clip the bounding box to the current canvas.\n      var canvasBounds = [\n        0,\n        0,\n        currentCtx.canvas.width,\n        currentCtx.canvas.height,\n      ];\n      bounds = Util.intersect(bounds, canvasBounds) || [0, 0, 0, 0];\n      // Use ceil in case we're between sizes so we don't create canvas that is\n      // too small and make the canvas at least 1x1 pixels.\n      var offsetX = Math.floor(bounds[0]);\n      var offsetY = Math.floor(bounds[1]);\n      var drawnWidth = Math.max(Math.ceil(bounds[2]) - offsetX, 1);\n      var drawnHeight = Math.max(Math.ceil(bounds[3]) - offsetY, 1);\n      var scaleX = 1,\n        scaleY = 1;\n      if (drawnWidth > MAX_GROUP_SIZE) {\n        scaleX = drawnWidth / MAX_GROUP_SIZE;\n        drawnWidth = MAX_GROUP_SIZE;\n      }\n      if (drawnHeight > MAX_GROUP_SIZE) {\n        scaleY = drawnHeight / MAX_GROUP_SIZE;\n        drawnHeight = MAX_GROUP_SIZE;\n      }\n\n      var cacheId = \"groupAt\" + this.groupLevel;\n      if (group.smask) {\n        // Using two cache entries is case if masks are used one after another.\n        cacheId += \"_smask_\" + (this.smaskCounter++ % 2);\n      }\n      var scratchCanvas = this.cachedCanvases.getCanvas(\n        cacheId,\n        drawnWidth,\n        drawnHeight,\n        true\n      );\n      var groupCtx = scratchCanvas.context;\n\n      // Since we created a new canvas that is just the size of the bounding box\n      // we have to translate the group ctx.\n      groupCtx.scale(1 / scaleX, 1 / scaleY);\n      groupCtx.translate(-offsetX, -offsetY);\n      groupCtx.transform.apply(groupCtx, currentTransform);\n\n      if (group.smask) {\n        // Saving state and cached mask to be used in setGState.\n        this.smaskStack.push({\n          canvas: scratchCanvas.canvas,\n          context: groupCtx,\n          offsetX,\n          offsetY,\n          scaleX,\n          scaleY,\n          subtype: group.smask.subtype,\n          backdrop: group.smask.backdrop,\n          transferMap: group.smask.transferMap || null,\n          startTransformInverse: null, // used during suspend operation\n        });\n      } else {\n        // Setup the current ctx so when the group is popped we draw it at the\n        // right location.\n        currentCtx.setTransform(1, 0, 0, 1, 0, 0);\n        currentCtx.translate(offsetX, offsetY);\n        currentCtx.scale(scaleX, scaleY);\n      }\n      // The transparency group inherits all off the current graphics state\n      // except the blend mode, soft mask, and alpha constants.\n      copyCtxState(currentCtx, groupCtx);\n      this.ctx = groupCtx;\n      this.setGState([\n        [\"BM\", \"source-over\"],\n        [\"ca\", 1],\n        [\"CA\", 1],\n      ]);\n      this.groupStack.push(currentCtx);\n      this.groupLevel++;\n\n      // Reseting mask state, masks will be applied on restore of the group.\n      this.current.activeSMask = null;\n    },\n\n    endGroup: function CanvasGraphics_endGroup(group) {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.groupLevel--;\n      var groupCtx = this.ctx;\n      this.ctx = this.groupStack.pop();\n      // Turn off image smoothing to avoid sub pixel interpolation which can\n      // look kind of blurry for some pdfs.\n      if (this.ctx.imageSmoothingEnabled !== undefined) {\n        this.ctx.imageSmoothingEnabled = false;\n      } else {\n        this.ctx.mozImageSmoothingEnabled = false;\n      }\n      if (group.smask) {\n        this.tempSMask = this.smaskStack.pop();\n      } else {\n        this.ctx.drawImage(groupCtx.canvas, 0, 0);\n      }\n      this.restore();\n    },\n\n    beginAnnotations: function CanvasGraphics_beginAnnotations() {\n      this.save();\n      if (this.baseTransform) {\n        this.ctx.setTransform.apply(this.ctx, this.baseTransform);\n      }\n    },\n\n    endAnnotations: function CanvasGraphics_endAnnotations() {\n      this.restore();\n    },\n\n    beginAnnotation: function CanvasGraphics_beginAnnotation(\n      rect,\n      transform,\n      matrix\n    ) {\n      this.save();\n      resetCtxToDefault(this.ctx);\n      this.current = new CanvasExtraState();\n\n      if (Array.isArray(rect) && rect.length === 4) {\n        var width = rect[2] - rect[0];\n        var height = rect[3] - rect[1];\n        this.ctx.rect(rect[0], rect[1], width, height);\n        this.clip();\n        this.endPath();\n      }\n\n      this.transform.apply(this, transform);\n      this.transform.apply(this, matrix);\n    },\n\n    endAnnotation: function CanvasGraphics_endAnnotation() {\n      this.restore();\n    },\n\n    paintImageMaskXObject: function CanvasGraphics_paintImageMaskXObject(img) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n      var width = img.width,\n        height = img.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var glyph = this.processingType3;\n\n      if (COMPILE_TYPE3_GLYPHS && glyph && glyph.compiled === undefined) {\n        if (width <= MAX_SIZE_TO_COMPILE && height <= MAX_SIZE_TO_COMPILE) {\n          glyph.compiled = compileType3Glyph({ data: img.data, width, height });\n        } else {\n          glyph.compiled = null;\n        }\n      }\n\n      if (glyph && glyph.compiled) {\n        glyph.compiled(ctx);\n        return;\n      }\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, img);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      this.paintInlineImageXObject(maskCanvas.canvas);\n    },\n\n    paintImageMaskXObjectRepeat(\n      imgData,\n      scaleX,\n      skewX = 0,\n      skewY = 0,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var width = imgData.width;\n      var height = imgData.height;\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n\n      var maskCanvas = this.cachedCanvases.getCanvas(\n        \"maskCanvas\",\n        width,\n        height\n      );\n      var maskCtx = maskCanvas.context;\n      maskCtx.save();\n\n      putBinaryImageMask(maskCtx, imgData);\n\n      maskCtx.globalCompositeOperation = \"source-in\";\n\n      maskCtx.fillStyle = isPatternFill\n        ? fillColor.getPattern(maskCtx, this)\n        : fillColor;\n      maskCtx.fillRect(0, 0, width, height);\n\n      maskCtx.restore();\n\n      var ctx = this.ctx;\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        ctx.save();\n        ctx.transform(\n          scaleX,\n          skewX,\n          skewY,\n          scaleY,\n          positions[i],\n          positions[i + 1]\n        );\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageMaskXObjectGroup: function CanvasGraphics_paintImageMaskXObjectGroup(\n      images\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n\n      var fillColor = this.current.fillColor;\n      var isPatternFill = this.current.patternFill;\n      for (var i = 0, ii = images.length; i < ii; i++) {\n        var image = images[i];\n        var width = image.width,\n          height = image.height;\n\n        var maskCanvas = this.cachedCanvases.getCanvas(\n          \"maskCanvas\",\n          width,\n          height\n        );\n        var maskCtx = maskCanvas.context;\n        maskCtx.save();\n\n        putBinaryImageMask(maskCtx, image);\n\n        maskCtx.globalCompositeOperation = \"source-in\";\n\n        maskCtx.fillStyle = isPatternFill\n          ? fillColor.getPattern(maskCtx, this)\n          : fillColor;\n        maskCtx.fillRect(0, 0, width, height);\n\n        maskCtx.restore();\n\n        ctx.save();\n        ctx.transform.apply(ctx, image.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(maskCanvas.canvas, 0, 0, width, height, 0, -1, 1, 1);\n        ctx.restore();\n      }\n    },\n\n    paintImageXObject: function CanvasGraphics_paintImageXObject(objId) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      this.paintInlineImageXObject(imgData);\n    },\n\n    paintImageXObjectRepeat: function CanvasGraphics_paintImageXObjectRepeat(\n      objId,\n      scaleX,\n      scaleY,\n      positions\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(\"Dependent image isn't ready yet\");\n        return;\n      }\n\n      var width = imgData.width;\n      var height = imgData.height;\n      var map = [];\n      for (var i = 0, ii = positions.length; i < ii; i += 2) {\n        map.push({\n          transform: [scaleX, 0, 0, scaleY, positions[i], positions[i + 1]],\n          x: 0,\n          y: 0,\n          w: width,\n          h: height,\n        });\n      }\n      this.paintInlineImageXObjectGroup(imgData, map);\n    },\n\n    paintInlineImageXObject: function CanvasGraphics_paintInlineImageXObject(\n      imgData\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var width = imgData.width;\n      var height = imgData.height;\n      var ctx = this.ctx;\n\n      this.save();\n      // scale the image to the unit square\n      ctx.scale(1 / width, -1 / height);\n\n      var currentTransform = ctx.mozCurrentTransformInverse;\n      var a = currentTransform[0],\n        b = currentTransform[1];\n      var widthScale = Math.max(Math.sqrt(a * a + b * b), 1);\n      var c = currentTransform[2],\n        d = currentTransform[3];\n      var heightScale = Math.max(Math.sqrt(c * c + d * d), 1);\n\n      var imgToPaint, tmpCanvas;\n      // typeof check is needed due to node.js support, see issue #8489\n      if (\n        (typeof HTMLElement === \"function\" && imgData instanceof HTMLElement) ||\n        !imgData.data\n      ) {\n        imgToPaint = imgData;\n      } else {\n        tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", width, height);\n        var tmpCtx = tmpCanvas.context;\n        putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n        imgToPaint = tmpCanvas.canvas;\n      }\n\n      var paintWidth = width,\n        paintHeight = height;\n      var tmpCanvasId = \"prescale1\";\n      // Vertical or horizontal scaling shall not be more than 2 to not lose the\n      // pixels during drawImage operation, painting on the temporary canvas(es)\n      // that are twice smaller in size.\n      while (\n        (widthScale > 2 && paintWidth > 1) ||\n        (heightScale > 2 && paintHeight > 1)\n      ) {\n        var newWidth = paintWidth,\n          newHeight = paintHeight;\n        if (widthScale > 2 && paintWidth > 1) {\n          newWidth = Math.ceil(paintWidth / 2);\n          widthScale /= paintWidth / newWidth;\n        }\n        if (heightScale > 2 && paintHeight > 1) {\n          newHeight = Math.ceil(paintHeight / 2);\n          heightScale /= paintHeight / newHeight;\n        }\n        tmpCanvas = this.cachedCanvases.getCanvas(\n          tmpCanvasId,\n          newWidth,\n          newHeight\n        );\n        tmpCtx = tmpCanvas.context;\n        tmpCtx.clearRect(0, 0, newWidth, newHeight);\n        tmpCtx.drawImage(\n          imgToPaint,\n          0,\n          0,\n          paintWidth,\n          paintHeight,\n          0,\n          0,\n          newWidth,\n          newHeight\n        );\n        imgToPaint = tmpCanvas.canvas;\n        paintWidth = newWidth;\n        paintHeight = newHeight;\n        tmpCanvasId = tmpCanvasId === \"prescale1\" ? \"prescale2\" : \"prescale1\";\n      }\n      ctx.drawImage(\n        imgToPaint,\n        0,\n        0,\n        paintWidth,\n        paintHeight,\n        0,\n        -height,\n        width,\n        height\n      );\n\n      if (this.imageLayer) {\n        var position = this.getCanvasPosition(0, -height);\n        this.imageLayer.appendImage({\n          imgData,\n          left: position[0],\n          top: position[1],\n          width: width / currentTransform[0],\n          height: height / currentTransform[3],\n        });\n      }\n      this.restore();\n    },\n\n    paintInlineImageXObjectGroup: function CanvasGraphics_paintInlineImageXObjectGroup(\n      imgData,\n      map\n    ) {\n      if (!this.contentVisible) {\n        return;\n      }\n      var ctx = this.ctx;\n      var w = imgData.width;\n      var h = imgData.height;\n\n      var tmpCanvas = this.cachedCanvases.getCanvas(\"inlineImage\", w, h);\n      var tmpCtx = tmpCanvas.context;\n      putBinaryImageData(tmpCtx, imgData, this.current.transferMaps);\n\n      for (var i = 0, ii = map.length; i < ii; i++) {\n        var entry = map[i];\n        ctx.save();\n        ctx.transform.apply(ctx, entry.transform);\n        ctx.scale(1, -1);\n        ctx.drawImage(\n          tmpCanvas.canvas,\n          entry.x,\n          entry.y,\n          entry.w,\n          entry.h,\n          0,\n          -1,\n          1,\n          1\n        );\n        if (this.imageLayer) {\n          var position = this.getCanvasPosition(entry.x, entry.y);\n          this.imageLayer.appendImage({\n            imgData,\n            left: position[0],\n            top: position[1],\n            width: w,\n            height: h,\n          });\n        }\n        ctx.restore();\n      }\n    },\n\n    paintSolidColorImageMask: function CanvasGraphics_paintSolidColorImageMask() {\n      if (!this.contentVisible) {\n        return;\n      }\n      this.ctx.fillRect(0, 0, 1, 1);\n    },\n\n    // Marked content\n\n    markPoint: function CanvasGraphics_markPoint(tag) {\n      // TODO Marked content.\n    },\n    markPointProps: function CanvasGraphics_markPointProps(tag, properties) {\n      // TODO Marked content.\n    },\n    beginMarkedContent: function CanvasGraphics_beginMarkedContent(tag) {\n      this.markedContentStack.push({\n        visible: true,\n      });\n    },\n    beginMarkedContentProps: function CanvasGraphics_beginMarkedContentProps(\n      tag,\n      properties\n    ) {\n      if (tag === \"OC\") {\n        this.markedContentStack.push({\n          visible: this.optionalContentConfig.isVisible(properties),\n        });\n      } else {\n        this.markedContentStack.push({\n          visible: true,\n        });\n      }\n      this.contentVisible = this.isContentVisible();\n    },\n    endMarkedContent: function CanvasGraphics_endMarkedContent() {\n      this.markedContentStack.pop();\n      this.contentVisible = this.isContentVisible();\n    },\n\n    // Compatibility\n\n    beginCompat: function CanvasGraphics_beginCompat() {\n      // TODO ignore undefined operators (should we do that anyway?)\n    },\n    endCompat: function CanvasGraphics_endCompat() {\n      // TODO stop ignoring undefined operators\n    },\n\n    // Helper functions\n\n    consumePath: function CanvasGraphics_consumePath() {\n      var ctx = this.ctx;\n      if (this.pendingClip) {\n        if (this.pendingClip === EO_CLIP) {\n          ctx.clip(\"evenodd\");\n        } else {\n          ctx.clip();\n        }\n        this.pendingClip = null;\n      }\n      ctx.beginPath();\n    },\n    getSinglePixelWidth(scale) {\n      if (this._cachedGetSinglePixelWidth === null) {\n        const inverse = this.ctx.mozCurrentTransformInverse;\n        // max of the current horizontal and vertical scale\n        this._cachedGetSinglePixelWidth = Math.sqrt(\n          Math.max(\n            inverse[0] * inverse[0] + inverse[1] * inverse[1],\n            inverse[2] * inverse[2] + inverse[3] * inverse[3]\n          )\n        );\n      }\n      return this._cachedGetSinglePixelWidth;\n    },\n    getCanvasPosition: function CanvasGraphics_getCanvasPosition(x, y) {\n      var transform = this.ctx.mozCurrentTransform;\n      return [\n        transform[0] * x + transform[2] * y + transform[4],\n        transform[1] * x + transform[3] * y + transform[5],\n      ];\n    },\n\n    isContentVisible: function CanvasGraphics_isContentVisible() {\n      for (let i = this.markedContentStack.length - 1; i >= 0; i--) {\n        if (!this.markedContentStack[i].visible) {\n          return false;\n        }\n      }\n      return true;\n    },\n  };\n\n  for (var op in OPS) {\n    CanvasGraphics.prototype[OPS[op]] = CanvasGraphics.prototype[op];\n  }\n\n  return CanvasGraphics;\n})();\n\nexport { CanvasGraphics };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { FormatError, info, Util } from \"../shared/util.js\";\n\nvar ShadingIRs = {};\n\nfunction applyBoundingBox(ctx, bbox) {\n  if (!bbox || typeof Path2D === \"undefined\") {\n    return;\n  }\n  const width = bbox[2] - bbox[0];\n  const height = bbox[3] - bbox[1];\n  const region = new Path2D();\n  region.rect(bbox[0], bbox[1], width, height);\n  ctx.clip(region);\n}\n\nShadingIRs.RadialAxial = {\n  fromIR: function RadialAxial_fromIR(raw) {\n    var type = raw[1];\n    var bbox = raw[2];\n    var colorStops = raw[3];\n    var p0 = raw[4];\n    var p1 = raw[5];\n    var r0 = raw[6];\n    var r1 = raw[7];\n    return {\n      type: \"Pattern\",\n      getPattern: function RadialAxial_getPattern(ctx) {\n        applyBoundingBox(ctx, bbox);\n        var grad;\n        if (type === \"axial\") {\n          grad = ctx.createLinearGradient(p0[0], p0[1], p1[0], p1[1]);\n        } else if (type === \"radial\") {\n          grad = ctx.createRadialGradient(p0[0], p0[1], r0, p1[0], p1[1], r1);\n        }\n\n        for (var i = 0, ii = colorStops.length; i < ii; ++i) {\n          var c = colorStops[i];\n          grad.addColorStop(c[0], c[1]);\n        }\n        return grad;\n      },\n    };\n  },\n};\n\nvar createMeshCanvas = (function createMeshCanvasClosure() {\n  function drawTriangle(data, context, p1, p2, p3, c1, c2, c3) {\n    // Very basic Gouraud-shaded triangle rasterization algorithm.\n    var coords = context.coords,\n      colors = context.colors;\n    var bytes = data.data,\n      rowSize = data.width * 4;\n    var tmp;\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    if (coords[p2 + 1] > coords[p3 + 1]) {\n      tmp = p2;\n      p2 = p3;\n      p3 = tmp;\n      tmp = c2;\n      c2 = c3;\n      c3 = tmp;\n    }\n    if (coords[p1 + 1] > coords[p2 + 1]) {\n      tmp = p1;\n      p1 = p2;\n      p2 = tmp;\n      tmp = c1;\n      c1 = c2;\n      c2 = tmp;\n    }\n    var x1 = (coords[p1] + context.offsetX) * context.scaleX;\n    var y1 = (coords[p1 + 1] + context.offsetY) * context.scaleY;\n    var x2 = (coords[p2] + context.offsetX) * context.scaleX;\n    var y2 = (coords[p2 + 1] + context.offsetY) * context.scaleY;\n    var x3 = (coords[p3] + context.offsetX) * context.scaleX;\n    var y3 = (coords[p3 + 1] + context.offsetY) * context.scaleY;\n    if (y1 >= y3) {\n      return;\n    }\n    var c1r = colors[c1],\n      c1g = colors[c1 + 1],\n      c1b = colors[c1 + 2];\n    var c2r = colors[c2],\n      c2g = colors[c2 + 1],\n      c2b = colors[c2 + 2];\n    var c3r = colors[c3],\n      c3g = colors[c3 + 1],\n      c3b = colors[c3 + 2];\n\n    var minY = Math.round(y1),\n      maxY = Math.round(y3);\n    var xa, car, cag, cab;\n    var xb, cbr, cbg, cbb;\n    for (var y = minY; y <= maxY; y++) {\n      if (y < y2) {\n        let k;\n        if (y < y1) {\n          k = 0;\n        } else if (y1 === y2) {\n          k = 1;\n        } else {\n          k = (y1 - y) / (y1 - y2);\n        }\n        xa = x1 - (x1 - x2) * k;\n        car = c1r - (c1r - c2r) * k;\n        cag = c1g - (c1g - c2g) * k;\n        cab = c1b - (c1b - c2b) * k;\n      } else {\n        let k;\n        if (y > y3) {\n          k = 1;\n        } else if (y2 === y3) {\n          k = 0;\n        } else {\n          k = (y2 - y) / (y2 - y3);\n        }\n        xa = x2 - (x2 - x3) * k;\n        car = c2r - (c2r - c3r) * k;\n        cag = c2g - (c2g - c3g) * k;\n        cab = c2b - (c2b - c3b) * k;\n      }\n\n      let k;\n      if (y < y1) {\n        k = 0;\n      } else if (y > y3) {\n        k = 1;\n      } else {\n        k = (y1 - y) / (y1 - y3);\n      }\n      xb = x1 - (x1 - x3) * k;\n      cbr = c1r - (c1r - c3r) * k;\n      cbg = c1g - (c1g - c3g) * k;\n      cbb = c1b - (c1b - c3b) * k;\n      var x1_ = Math.round(Math.min(xa, xb));\n      var x2_ = Math.round(Math.max(xa, xb));\n      var j = rowSize * y + x1_ * 4;\n      for (var x = x1_; x <= x2_; x++) {\n        k = (xa - x) / (xa - xb);\n        if (k < 0) {\n          k = 0;\n        } else if (k > 1) {\n          k = 1;\n        }\n        bytes[j++] = (car - (car - cbr) * k) | 0;\n        bytes[j++] = (cag - (cag - cbg) * k) | 0;\n        bytes[j++] = (cab - (cab - cbb) * k) | 0;\n        bytes[j++] = 255;\n      }\n    }\n  }\n\n  function drawFigure(data, figure, context) {\n    var ps = figure.coords;\n    var cs = figure.colors;\n    var i, ii;\n    switch (figure.type) {\n      case \"lattice\":\n        var verticesPerRow = figure.verticesPerRow;\n        var rows = Math.floor(ps.length / verticesPerRow) - 1;\n        var cols = verticesPerRow - 1;\n        for (i = 0; i < rows; i++) {\n          var q = i * verticesPerRow;\n          for (var j = 0; j < cols; j++, q++) {\n            drawTriangle(\n              data,\n              context,\n              ps[q],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n            drawTriangle(\n              data,\n              context,\n              ps[q + verticesPerRow + 1],\n              ps[q + 1],\n              ps[q + verticesPerRow],\n              cs[q + verticesPerRow + 1],\n              cs[q + 1],\n              cs[q + verticesPerRow]\n            );\n          }\n        }\n        break;\n      case \"triangles\":\n        for (i = 0, ii = ps.length; i < ii; i += 3) {\n          drawTriangle(\n            data,\n            context,\n            ps[i],\n            ps[i + 1],\n            ps[i + 2],\n            cs[i],\n            cs[i + 1],\n            cs[i + 2]\n          );\n        }\n        break;\n      default:\n        throw new Error(\"illegal figure\");\n    }\n  }\n\n  // eslint-disable-next-line no-shadow\n  function createMeshCanvas(\n    bounds,\n    combinesScale,\n    coords,\n    colors,\n    figures,\n    backgroundColor,\n    cachedCanvases,\n    webGLContext\n  ) {\n    // we will increase scale on some weird factor to let antialiasing take\n    // care of \"rough\" edges\n    var EXPECTED_SCALE = 1.1;\n    // MAX_PATTERN_SIZE is used to avoid OOM situation.\n    var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n    // We need to keep transparent border around our pattern for fill():\n    // createPattern with 'no-repeat' will bleed edges across entire area.\n    var BORDER_SIZE = 2;\n\n    var offsetX = Math.floor(bounds[0]);\n    var offsetY = Math.floor(bounds[1]);\n    var boundsWidth = Math.ceil(bounds[2]) - offsetX;\n    var boundsHeight = Math.ceil(bounds[3]) - offsetY;\n\n    var width = Math.min(\n      Math.ceil(Math.abs(boundsWidth * combinesScale[0] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var height = Math.min(\n      Math.ceil(Math.abs(boundsHeight * combinesScale[1] * EXPECTED_SCALE)),\n      MAX_PATTERN_SIZE\n    );\n    var scaleX = boundsWidth / width;\n    var scaleY = boundsHeight / height;\n\n    var context = {\n      coords,\n      colors,\n      offsetX: -offsetX,\n      offsetY: -offsetY,\n      scaleX: 1 / scaleX,\n      scaleY: 1 / scaleY,\n    };\n\n    var paddedWidth = width + BORDER_SIZE * 2;\n    var paddedHeight = height + BORDER_SIZE * 2;\n\n    var canvas, tmpCanvas, i, ii;\n    if (webGLContext.isEnabled) {\n      canvas = webGLContext.drawFigures({\n        width,\n        height,\n        backgroundColor,\n        figures,\n        context,\n      });\n      // https://bugzilla.mozilla.org/show_bug.cgi?id=972126\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      tmpCanvas.context.drawImage(canvas, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    } else {\n      tmpCanvas = cachedCanvases.getCanvas(\n        \"mesh\",\n        paddedWidth,\n        paddedHeight,\n        false\n      );\n      var tmpCtx = tmpCanvas.context;\n\n      var data = tmpCtx.createImageData(width, height);\n      if (backgroundColor) {\n        var bytes = data.data;\n        for (i = 0, ii = bytes.length; i < ii; i += 4) {\n          bytes[i] = backgroundColor[0];\n          bytes[i + 1] = backgroundColor[1];\n          bytes[i + 2] = backgroundColor[2];\n          bytes[i + 3] = 255;\n        }\n      }\n      for (i = 0; i < figures.length; i++) {\n        drawFigure(data, figures[i], context);\n      }\n      tmpCtx.putImageData(data, BORDER_SIZE, BORDER_SIZE);\n      canvas = tmpCanvas.canvas;\n    }\n\n    return {\n      canvas,\n      offsetX: offsetX - BORDER_SIZE * scaleX,\n      offsetY: offsetY - BORDER_SIZE * scaleY,\n      scaleX,\n      scaleY,\n    };\n  }\n  return createMeshCanvas;\n})();\n\nShadingIRs.Mesh = {\n  fromIR: function Mesh_fromIR(raw) {\n    // var type = raw[1];\n    var coords = raw[2];\n    var colors = raw[3];\n    var figures = raw[4];\n    var bounds = raw[5];\n    var matrix = raw[6];\n    var bbox = raw[7];\n    var background = raw[8];\n    return {\n      type: \"Pattern\",\n      getPattern: function Mesh_getPattern(ctx, owner, shadingFill) {\n        applyBoundingBox(ctx, bbox);\n        var scale;\n        if (shadingFill) {\n          scale = Util.singularValueDecompose2dScale(ctx.mozCurrentTransform);\n        } else {\n          // Obtain scale from matrix and current transformation matrix.\n          scale = Util.singularValueDecompose2dScale(owner.baseTransform);\n          if (matrix) {\n            var matrixScale = Util.singularValueDecompose2dScale(matrix);\n            scale = [scale[0] * matrixScale[0], scale[1] * matrixScale[1]];\n          }\n        }\n\n        // Rasterizing on the main thread since sending/queue large canvases\n        // might cause OOM.\n        var temporaryPatternCanvas = createMeshCanvas(\n          bounds,\n          scale,\n          coords,\n          colors,\n          figures,\n          shadingFill ? null : background,\n          owner.cachedCanvases,\n          owner.webGLContext\n        );\n\n        if (!shadingFill) {\n          ctx.setTransform.apply(ctx, owner.baseTransform);\n          if (matrix) {\n            ctx.transform.apply(ctx, matrix);\n          }\n        }\n\n        ctx.translate(\n          temporaryPatternCanvas.offsetX,\n          temporaryPatternCanvas.offsetY\n        );\n        ctx.scale(temporaryPatternCanvas.scaleX, temporaryPatternCanvas.scaleY);\n\n        return ctx.createPattern(temporaryPatternCanvas.canvas, \"no-repeat\");\n      },\n    };\n  },\n};\n\nShadingIRs.Dummy = {\n  fromIR: function Dummy_fromIR() {\n    return {\n      type: \"Pattern\",\n      getPattern: function Dummy_fromIR_getPattern() {\n        return \"hotpink\";\n      },\n    };\n  },\n};\n\nfunction getShadingPatternFromIR(raw) {\n  var shadingIR = ShadingIRs[raw[0]];\n  if (!shadingIR) {\n    throw new Error(`Unknown IR type: ${raw[0]}`);\n  }\n  return shadingIR.fromIR(raw);\n}\n\n/**\n * @type {any}\n */\nvar TilingPattern = (function TilingPatternClosure() {\n  var PaintType = {\n    COLORED: 1,\n    UNCOLORED: 2,\n  };\n\n  var MAX_PATTERN_SIZE = 3000; // 10in @ 300dpi shall be enough\n\n  // eslint-disable-next-line no-shadow\n  function TilingPattern(IR, color, ctx, canvasGraphicsFactory, baseTransform) {\n    this.operatorList = IR[2];\n    this.matrix = IR[3] || [1, 0, 0, 1, 0, 0];\n    this.bbox = IR[4];\n    this.xstep = IR[5];\n    this.ystep = IR[6];\n    this.paintType = IR[7];\n    this.tilingType = IR[8];\n    this.color = color;\n    this.canvasGraphicsFactory = canvasGraphicsFactory;\n    this.baseTransform = baseTransform;\n    this.type = \"Pattern\";\n    this.ctx = ctx;\n  }\n\n  TilingPattern.prototype = {\n    createPatternCanvas: function TilinPattern_createPatternCanvas(owner) {\n      var operatorList = this.operatorList;\n      var bbox = this.bbox;\n      var xstep = this.xstep;\n      var ystep = this.ystep;\n      var paintType = this.paintType;\n      var tilingType = this.tilingType;\n      var color = this.color;\n      var canvasGraphicsFactory = this.canvasGraphicsFactory;\n\n      info(\"TilingType: \" + tilingType);\n\n      // A tiling pattern as defined by PDF spec 8.7.2 is a cell whose size is\n      // described by bbox, and may repeat regularly by shifting the cell by\n      // xstep and ystep.\n      // Because the HTML5 canvas API does not support pattern repetition with\n      // gaps in between, we use the xstep/ystep instead of the bbox's size.\n      //\n      // This has the following consequences (similarly for ystep):\n      //\n      // - If xstep is the same as bbox, then there is no observable difference.\n      //\n      // - If xstep is larger than bbox, then the pattern canvas is partially\n      //   empty: the area bounded by bbox is painted, the outside area is void.\n      //\n      // - If xstep is smaller than bbox, then the pixels between xstep and the\n      //   bbox boundary will be missing. This is INCORRECT behavior.\n      //   \"Figures on adjacent tiles should not overlap\" (PDF spec 8.7.3.1),\n      //   but overlapping cells without common pixels are still valid.\n      //   TODO: Fix the implementation, to allow this scenario to be painted\n      //   correctly.\n\n      var x0 = bbox[0],\n        y0 = bbox[1],\n        x1 = bbox[2],\n        y1 = bbox[3];\n\n      // Obtain scale from matrix and current transformation matrix.\n      var matrixScale = Util.singularValueDecompose2dScale(this.matrix);\n      var curMatrixScale = Util.singularValueDecompose2dScale(\n        this.baseTransform\n      );\n      var combinedScale = [\n        matrixScale[0] * curMatrixScale[0],\n        matrixScale[1] * curMatrixScale[1],\n      ];\n\n      // Use width and height values that are as close as possible to the end\n      // result when the pattern is used. Too low value makes the pattern look\n      // blurry. Too large value makes it look too crispy.\n      var dimx = this.getSizeAndScale(\n        xstep,\n        this.ctx.canvas.width,\n        combinedScale[0]\n      );\n      var dimy = this.getSizeAndScale(\n        ystep,\n        this.ctx.canvas.height,\n        combinedScale[1]\n      );\n\n      var tmpCanvas = owner.cachedCanvases.getCanvas(\n        \"pattern\",\n        dimx.size,\n        dimy.size,\n        true\n      );\n      var tmpCtx = tmpCanvas.context;\n      var graphics = canvasGraphicsFactory.createCanvasGraphics(tmpCtx);\n      graphics.groupLevel = owner.groupLevel;\n\n      this.setFillAndStrokeStyleToContext(graphics, paintType, color);\n\n      graphics.transform(dimx.scale, 0, 0, dimy.scale, 0, 0);\n\n      // transform coordinates to pattern space\n      graphics.transform(1, 0, 0, 1, -x0, -y0);\n\n      this.clipBbox(graphics, bbox, x0, y0, x1, y1);\n\n      graphics.executeOperatorList(operatorList);\n\n      this.ctx.transform(1, 0, 0, 1, x0, y0);\n\n      // Rescale canvas so that the ctx.createPattern call generates a pattern\n      // with the desired size.\n      this.ctx.scale(1 / dimx.scale, 1 / dimy.scale);\n      return tmpCanvas.canvas;\n    },\n\n    getSizeAndScale: function TilingPattern_getSizeAndScale(\n      step,\n      realOutputSize,\n      scale\n    ) {\n      // xstep / ystep may be negative -- normalize.\n      step = Math.abs(step);\n      // MAX_PATTERN_SIZE is used to avoid OOM situation.\n      // Use the destination canvas's size if it is bigger than the hard-coded\n      // limit of MAX_PATTERN_SIZE to avoid clipping patterns that cover the\n      // whole canvas.\n      var maxSize = Math.max(MAX_PATTERN_SIZE, realOutputSize);\n      var size = Math.ceil(step * scale);\n      if (size >= maxSize) {\n        size = maxSize;\n      } else {\n        scale = size / step;\n      }\n      return { scale, size };\n    },\n\n    clipBbox: function clipBbox(graphics, bbox, x0, y0, x1, y1) {\n      if (Array.isArray(bbox) && bbox.length === 4) {\n        var bboxWidth = x1 - x0;\n        var bboxHeight = y1 - y0;\n        graphics.ctx.rect(x0, y0, bboxWidth, bboxHeight);\n        graphics.clip();\n        graphics.endPath();\n      }\n    },\n\n    setFillAndStrokeStyleToContext: function setFillAndStrokeStyleToContext(\n      graphics,\n      paintType,\n      color\n    ) {\n      const context = graphics.ctx,\n        current = graphics.current;\n      switch (paintType) {\n        case PaintType.COLORED:\n          var ctx = this.ctx;\n          context.fillStyle = ctx.fillStyle;\n          context.strokeStyle = ctx.strokeStyle;\n          current.fillColor = ctx.fillStyle;\n          current.strokeColor = ctx.strokeStyle;\n          break;\n        case PaintType.UNCOLORED:\n          var cssColor = Util.makeCssRgb(color[0], color[1], color[2]);\n          context.fillStyle = cssColor;\n          context.strokeStyle = cssColor;\n          // Set color needed by image masks (fixes issues 3226 and 8741).\n          current.fillColor = cssColor;\n          current.strokeColor = cssColor;\n          break;\n        default:\n          throw new FormatError(`Unsupported paint type: ${paintType}`);\n      }\n    },\n\n    getPattern: function TilingPattern_getPattern(ctx, owner) {\n      ctx = this.ctx;\n      // PDF spec 8.7.2 NOTE 1: pattern's matrix is relative to initial matrix.\n      ctx.setTransform.apply(ctx, this.baseTransform);\n      ctx.transform.apply(ctx, this.matrix);\n\n      var temporaryPatternCanvas = this.createPatternCanvas(owner);\n\n      return ctx.createPattern(temporaryPatternCanvas, \"repeat\");\n    },\n  };\n\n  return TilingPattern;\n})();\n\nexport { getShadingPatternFromIR, TilingPattern };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @typedef {Object} GlobalWorkerOptionsType\n * @property {Worker | null} workerPort - Defines global port for worker\n *   process. Overrides the `workerSrc` option.\n * @property {string} workerSrc - A string containing the path and filename\n *   of the worker file.\n *\n *   NOTE: The `workerSrc` option should always be set, in order to prevent any\n *         issues when using the PDF.js library.\n */\n\n/** @type {GlobalWorkerOptionsType} */\nconst GlobalWorkerOptions = Object.create(null);\n\nGlobalWorkerOptions.workerPort =\n  GlobalWorkerOptions.workerPort === undefined\n    ? null\n    : GlobalWorkerOptions.workerPort;\n\nGlobalWorkerOptions.workerSrc =\n  GlobalWorkerOptions.workerSrc === undefined\n    ? \"\"\n    : GlobalWorkerOptions.workerSrc;\n\nexport { GlobalWorkerOptions };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error, prefer-const: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n  UnexpectedResponseException,\n  UnknownErrorException,\n} from \"./util.js\";\n\nconst CallbackKind = {\n  UNKNOWN: 0,\n  DATA: 1,\n  ERROR: 2,\n};\n\nconst StreamKind = {\n  UNKNOWN: 0,\n  CANCEL: 1,\n  CANCEL_COMPLETE: 2,\n  CLOSE: 3,\n  ENQUEUE: 4,\n  ERROR: 5,\n  PULL: 6,\n  PULL_COMPLETE: 7,\n  START_COMPLETE: 8,\n};\n\nfunction wrapReason(reason) {\n  if (\n    typeof PDFJSDev === \"undefined\" ||\n    PDFJSDev.test(\"!PRODUCTION || TESTING\")\n  ) {\n    assert(\n      reason instanceof Error ||\n        (typeof reason === \"object\" && reason !== null),\n      'wrapReason: Expected \"reason\" to be a (possibly cloned) Error.'\n    );\n  } else {\n    if (typeof reason !== \"object\" || reason === null) {\n      return reason;\n    }\n  }\n  switch (reason.name) {\n    case \"AbortException\":\n      return new AbortException(reason.message);\n    case \"MissingPDFException\":\n      return new MissingPDFException(reason.message);\n    case \"UnexpectedResponseException\":\n      return new UnexpectedResponseException(reason.message, reason.status);\n    case \"UnknownErrorException\":\n      return new UnknownErrorException(reason.message, reason.details);\n    default:\n      return new UnknownErrorException(reason.message, reason.toString());\n  }\n}\n\nclass MessageHandler {\n  constructor(sourceName, targetName, comObj) {\n    this.sourceName = sourceName;\n    this.targetName = targetName;\n    this.comObj = comObj;\n    this.callbackId = 1;\n    this.streamId = 1;\n    this.postMessageTransfers = true;\n    this.streamSinks = Object.create(null);\n    this.streamControllers = Object.create(null);\n    this.callbackCapabilities = Object.create(null);\n    this.actionHandler = Object.create(null);\n\n    this._onComObjOnMessage = event => {\n      const data = event.data;\n      if (data.targetName !== this.sourceName) {\n        return;\n      }\n      if (data.stream) {\n        this._processStreamMessage(data);\n        return;\n      }\n      if (data.callback) {\n        const callbackId = data.callbackId;\n        const capability = this.callbackCapabilities[callbackId];\n        if (!capability) {\n          throw new Error(`Cannot resolve callback ${callbackId}`);\n        }\n        delete this.callbackCapabilities[callbackId];\n\n        if (data.callback === CallbackKind.DATA) {\n          capability.resolve(data.data);\n        } else if (data.callback === CallbackKind.ERROR) {\n          capability.reject(wrapReason(data.reason));\n        } else {\n          throw new Error(\"Unexpected callback case\");\n        }\n        return;\n      }\n      const action = this.actionHandler[data.action];\n      if (!action) {\n        throw new Error(`Unknown action from worker: ${data.action}`);\n      }\n      if (data.callbackId) {\n        const cbSourceName = this.sourceName;\n        const cbTargetName = data.sourceName;\n        new Promise(function (resolve) {\n          resolve(action(data.data));\n        }).then(\n          function (result) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.DATA,\n              callbackId: data.callbackId,\n              data: result,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName: cbSourceName,\n              targetName: cbTargetName,\n              callback: CallbackKind.ERROR,\n              callbackId: data.callbackId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        return;\n      }\n      if (data.streamId) {\n        this._createStreamSink(data);\n        return;\n      }\n      action(data.data);\n    };\n    comObj.addEventListener(\"message\", this._onComObjOnMessage);\n  }\n\n  on(actionName, handler) {\n    if (\n      typeof PDFJSDev === \"undefined\" ||\n      PDFJSDev.test(\"!PRODUCTION || TESTING\")\n    ) {\n      assert(\n        typeof handler === \"function\",\n        'MessageHandler.on: Expected \"handler\" to be a function.'\n      );\n    }\n    const ah = this.actionHandler;\n    if (ah[actionName]) {\n      throw new Error(`There is already an actionName called \"${actionName}\"`);\n    }\n    ah[actionName] = handler;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   */\n  send(actionName, data, transfers) {\n    this._postMessage(\n      {\n        sourceName: this.sourceName,\n        targetName: this.targetName,\n        action: actionName,\n        data,\n      },\n      transfers\n    );\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expects that the other side will callback with the response.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {Promise} Promise to be resolved with response data.\n   */\n  sendWithPromise(actionName, data, transfers) {\n    const callbackId = this.callbackId++;\n    const capability = createPromiseCapability();\n    this.callbackCapabilities[callbackId] = capability;\n    try {\n      this._postMessage(\n        {\n          sourceName: this.sourceName,\n          targetName: this.targetName,\n          action: actionName,\n          callbackId,\n          data,\n        },\n        transfers\n      );\n    } catch (ex) {\n      capability.reject(ex);\n    }\n    return capability.promise;\n  }\n\n  /**\n   * Sends a message to the comObj to invoke the action with the supplied data.\n   * Expect that the other side will callback to signal 'start_complete'.\n   * @param {string} actionName - Action to call.\n   * @param {JSON} data - JSON data to send.\n   * @param {Object} queueingStrategy - Strategy to signal backpressure based on\n   *                 internal queue.\n   * @param {Array} [transfers] - List of transfers/ArrayBuffers.\n   * @returns {ReadableStream} ReadableStream to read data in chunks.\n   */\n  sendWithStream(actionName, data, queueingStrategy, transfers) {\n    const streamId = this.streamId++;\n    const sourceName = this.sourceName;\n    const targetName = this.targetName;\n    const comObj = this.comObj;\n\n    return new ReadableStream(\n      {\n        start: controller => {\n          const startCapability = createPromiseCapability();\n          this.streamControllers[streamId] = {\n            controller,\n            startCall: startCapability,\n            pullCall: null,\n            cancelCall: null,\n            isClosed: false,\n          };\n          this._postMessage(\n            {\n              sourceName,\n              targetName,\n              action: actionName,\n              streamId,\n              data,\n              desiredSize: controller.desiredSize,\n            },\n            transfers\n          );\n          // Return Promise for Async process, to signal success/failure.\n          return startCapability.promise;\n        },\n\n        pull: controller => {\n          const pullCapability = createPromiseCapability();\n          this.streamControllers[streamId].pullCall = pullCapability;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL,\n            streamId,\n            desiredSize: controller.desiredSize,\n          });\n          // Returning Promise will not call \"pull\"\n          // again until current pull is resolved.\n          return pullCapability.promise;\n        },\n\n        cancel: reason => {\n          assert(reason instanceof Error, \"cancel must have a valid reason\");\n          const cancelCapability = createPromiseCapability();\n          this.streamControllers[streamId].cancelCall = cancelCapability;\n          this.streamControllers[streamId].isClosed = true;\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.CANCEL,\n            streamId,\n            reason: wrapReason(reason),\n          });\n          // Return Promise to signal success or failure.\n          return cancelCapability.promise;\n        },\n      },\n      queueingStrategy\n    );\n  }\n\n  /**\n   * @private\n   */\n  _createStreamSink(data) {\n    const self = this;\n    const action = this.actionHandler[data.action];\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    const streamSink = {\n      enqueue(chunk, size = 1, transfers) {\n        if (this.isCancelled) {\n          return;\n        }\n        const lastDesiredSize = this.desiredSize;\n        this.desiredSize -= size;\n        // Enqueue decreases the desiredSize property of sink,\n        // so when it changes from positive to negative,\n        // set ready as unresolved promise.\n        if (lastDesiredSize > 0 && this.desiredSize <= 0) {\n          this.sinkCapability = createPromiseCapability();\n          this.ready = this.sinkCapability.promise;\n        }\n        self._postMessage(\n          {\n            sourceName,\n            targetName,\n            stream: StreamKind.ENQUEUE,\n            streamId,\n            chunk,\n          },\n          transfers\n        );\n      },\n\n      close() {\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.CLOSE,\n          streamId,\n        });\n        delete self.streamSinks[streamId];\n      },\n\n      error(reason) {\n        assert(reason instanceof Error, \"error must have a valid reason\");\n        if (this.isCancelled) {\n          return;\n        }\n        this.isCancelled = true;\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.ERROR,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      },\n\n      sinkCapability: createPromiseCapability(),\n      onPull: null,\n      onCancel: null,\n      isCancelled: false,\n      desiredSize: data.desiredSize,\n      ready: null,\n    };\n\n    streamSink.sinkCapability.resolve();\n    streamSink.ready = streamSink.sinkCapability.promise;\n    this.streamSinks[streamId] = streamSink;\n    new Promise(function (resolve) {\n      resolve(action(data.data, streamSink));\n    }).then(\n      function () {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          success: true,\n        });\n      },\n      function (reason) {\n        comObj.postMessage({\n          sourceName,\n          targetName,\n          stream: StreamKind.START_COMPLETE,\n          streamId,\n          reason: wrapReason(reason),\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   */\n  _processStreamMessage(data) {\n    const streamId = data.streamId;\n    const sourceName = this.sourceName;\n    const targetName = data.sourceName;\n    const comObj = this.comObj;\n\n    switch (data.stream) {\n      case StreamKind.START_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].startCall.resolve();\n        } else {\n          this.streamControllers[streamId].startCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].pullCall.resolve();\n        } else {\n          this.streamControllers[streamId].pullCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        break;\n      case StreamKind.PULL:\n        // Ignore any pull after close is called.\n        if (!this.streamSinks[streamId]) {\n          comObj.postMessage({\n            sourceName,\n            targetName,\n            stream: StreamKind.PULL_COMPLETE,\n            streamId,\n            success: true,\n          });\n          break;\n        }\n        // Pull increases the desiredSize property of sink,\n        // so when it changes from negative to positive,\n        // set ready property as resolved promise.\n        if (\n          this.streamSinks[streamId].desiredSize <= 0 &&\n          data.desiredSize > 0\n        ) {\n          this.streamSinks[streamId].sinkCapability.resolve();\n        }\n        // Reset desiredSize property of sink on every pull.\n        this.streamSinks[streamId].desiredSize = data.desiredSize;\n        const { onPull } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onPull && onPull());\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.PULL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        break;\n      case StreamKind.ENQUEUE:\n        assert(\n          this.streamControllers[streamId],\n          \"enqueue should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].controller.enqueue(data.chunk);\n        break;\n      case StreamKind.CLOSE:\n        assert(\n          this.streamControllers[streamId],\n          \"close should have stream controller\"\n        );\n        if (this.streamControllers[streamId].isClosed) {\n          break;\n        }\n        this.streamControllers[streamId].isClosed = true;\n        this.streamControllers[streamId].controller.close();\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.ERROR:\n        assert(\n          this.streamControllers[streamId],\n          \"error should have stream controller\"\n        );\n        this.streamControllers[streamId].controller.error(\n          wrapReason(data.reason)\n        );\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL_COMPLETE:\n        if (data.success) {\n          this.streamControllers[streamId].cancelCall.resolve();\n        } else {\n          this.streamControllers[streamId].cancelCall.reject(\n            wrapReason(data.reason)\n          );\n        }\n        this._deleteStreamController(streamId);\n        break;\n      case StreamKind.CANCEL:\n        if (!this.streamSinks[streamId]) {\n          break;\n        }\n        const { onCancel } = this.streamSinks[data.streamId];\n        new Promise(function (resolve) {\n          resolve(onCancel && onCancel(wrapReason(data.reason)));\n        }).then(\n          function () {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              success: true,\n            });\n          },\n          function (reason) {\n            comObj.postMessage({\n              sourceName,\n              targetName,\n              stream: StreamKind.CANCEL_COMPLETE,\n              streamId,\n              reason: wrapReason(reason),\n            });\n          }\n        );\n        this.streamSinks[streamId].sinkCapability.reject(\n          wrapReason(data.reason)\n        );\n        this.streamSinks[streamId].isCancelled = true;\n        delete this.streamSinks[streamId];\n        break;\n      default:\n        throw new Error(\"Unexpected stream case\");\n    }\n  }\n\n  /**\n   * @private\n   */\n  async _deleteStreamController(streamId) {\n    // Delete the `streamController` only when the start, pull, and cancel\n    // capabilities have settled, to prevent `TypeError`s.\n    await Promise.allSettled(\n      [\n        this.streamControllers[streamId].startCall,\n        this.streamControllers[streamId].pullCall,\n        this.streamControllers[streamId].cancelCall,\n      ].map(function (capability) {\n        return capability && capability.promise;\n      })\n    );\n    delete this.streamControllers[streamId];\n  }\n\n  /**\n   * Sends raw message to the comObj.\n   * @param {Object} message - Raw message.\n   * @param transfers List of transfers/ArrayBuffers, or undefined.\n   * @private\n   */\n  _postMessage(message, transfers) {\n    if (transfers && this.postMessageTransfers) {\n      this.comObj.postMessage(message, transfers);\n    } else {\n      this.comObj.postMessage(message);\n    }\n  }\n\n  destroy() {\n    this.comObj.removeEventListener(\"message\", this._onComObjOnMessage);\n  }\n}\n\nexport { MessageHandler };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { assert } from \"../shared/util.js\";\nimport { SimpleXMLParser } from \"./xml_parser.js\";\n\nclass Metadata {\n  constructor(data) {\n    assert(typeof data === \"string\", \"Metadata: input is not a string\");\n\n    // Ghostscript may produce invalid metadata, so try to repair that first.\n    data = this._repair(data);\n\n    // Convert the string to an XML document.\n    const parser = new SimpleXMLParser();\n    const xmlDocument = parser.parseFromString(data);\n\n    this._metadataMap = new Map();\n\n    if (xmlDocument) {\n      this._parse(xmlDocument);\n    }\n  }\n\n  _repair(data) {\n    // Start by removing any \"junk\" before the first tag (see issue 10395).\n    return data\n      .replace(/^[^<]+/, \"\")\n      .replace(/>\\\\376\\\\377([^<]+)/g, function (all, codes) {\n        const bytes = codes\n          .replace(/\\\\([0-3])([0-7])([0-7])/g, function (code, d1, d2, d3) {\n            return String.fromCharCode(d1 * 64 + d2 * 8 + d3 * 1);\n          })\n          .replace(/&(amp|apos|gt|lt|quot);/g, function (str, name) {\n            switch (name) {\n              case \"amp\":\n                return \"&\";\n              case \"apos\":\n                return \"'\";\n              case \"gt\":\n                return \">\";\n              case \"lt\":\n                return \"<\";\n              case \"quot\":\n                return '\"';\n            }\n            throw new Error(`_repair: ${name} isn't defined.`);\n          });\n\n        let chars = \"\";\n        for (let i = 0, ii = bytes.length; i < ii; i += 2) {\n          const code = bytes.charCodeAt(i) * 256 + bytes.charCodeAt(i + 1);\n          if (\n            code >= /* Space = */ 32 &&\n            code < /* Delete = */ 127 &&\n            code !== /* '<' = */ 60 &&\n            code !== /* '>' = */ 62 &&\n            code !== /* '&' = */ 38\n          ) {\n            chars += String.fromCharCode(code);\n          } else {\n            chars += \"&#x\" + (0x10000 + code).toString(16).substring(1) + \";\";\n          }\n        }\n\n        return \">\" + chars;\n      });\n  }\n\n  _parse(xmlDocument) {\n    let rdf = xmlDocument.documentElement;\n\n    if (rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n      // Wrapped in <xmpmeta>\n      rdf = rdf.firstChild;\n      while (rdf && rdf.nodeName.toLowerCase() !== \"rdf:rdf\") {\n        rdf = rdf.nextSibling;\n      }\n    }\n\n    const nodeName = rdf ? rdf.nodeName.toLowerCase() : null;\n    if (!rdf || nodeName !== \"rdf:rdf\" || !rdf.hasChildNodes()) {\n      return;\n    }\n\n    const children = rdf.childNodes;\n    for (let i = 0, ii = children.length; i < ii; i++) {\n      const desc = children[i];\n      if (desc.nodeName.toLowerCase() !== \"rdf:description\") {\n        continue;\n      }\n\n      for (let j = 0, jj = desc.childNodes.length; j < jj; j++) {\n        if (desc.childNodes[j].nodeName.toLowerCase() !== \"#text\") {\n          const entry = desc.childNodes[j];\n          const name = entry.nodeName.toLowerCase();\n\n          this._metadataMap.set(name, entry.textContent.trim());\n        }\n      }\n    }\n  }\n\n  get(name) {\n    return this._metadataMap.has(name) ? this._metadataMap.get(name) : null;\n  }\n\n  getAll() {\n    return Object.fromEntries(this._metadataMap);\n  }\n\n  has(name) {\n    return this._metadataMap.has(name);\n  }\n}\n\nexport { Metadata };\n","/* Copyright 2018 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// The code for XMLParserBase copied from\n// https://github.com/mozilla/shumway/blob/16451d8836fa85f4b16eeda8b4bda2fa9e2b22b0/src/avm2/natives/xml.ts\n\nconst XMLParserErrorCode = {\n  NoError: 0,\n  EndOfDocument: -1,\n  UnterminatedCdat: -2,\n  UnterminatedXmlDeclaration: -3,\n  UnterminatedDoctypeDeclaration: -4,\n  UnterminatedComment: -5,\n  MalformedElement: -6,\n  OutOfMemory: -7,\n  UnterminatedAttributeValue: -8,\n  UnterminatedElement: -9,\n  ElementNeverBegun: -10,\n};\n\nfunction isWhitespace(s, index) {\n  const ch = s[index];\n  return ch === \" \" || ch === \"\\n\" || ch === \"\\r\" || ch === \"\\t\";\n}\n\nfunction isWhitespaceString(s) {\n  for (let i = 0, ii = s.length; i < ii; i++) {\n    if (!isWhitespace(s, i)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nclass XMLParserBase {\n  _resolveEntities(s) {\n    return s.replace(/&([^;]+);/g, (all, entity) => {\n      if (entity.substring(0, 2) === \"#x\") {\n        return String.fromCharCode(parseInt(entity.substring(2), 16));\n      } else if (entity.substring(0, 1) === \"#\") {\n        return String.fromCharCode(parseInt(entity.substring(1), 10));\n      }\n      switch (entity) {\n        case \"lt\":\n          return \"<\";\n        case \"gt\":\n          return \">\";\n        case \"amp\":\n          return \"&\";\n        case \"quot\":\n          return '\"';\n      }\n      return this.onResolveEntity(entity);\n    });\n  }\n\n  _parseContent(s, start) {\n    const attributes = [];\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    while (\n      pos < s.length &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\" &&\n      s[pos] !== \"?\"\n    ) {\n      skipWs();\n      let attrName = \"\",\n        attrValue = \"\";\n      while (pos < s.length && !isWhitespace(s, pos) && s[pos] !== \"=\") {\n        attrName += s[pos];\n        ++pos;\n      }\n      skipWs();\n      if (s[pos] !== \"=\") {\n        return null;\n      }\n      ++pos;\n      skipWs();\n      const attrEndChar = s[pos];\n      if (attrEndChar !== '\"' && attrEndChar !== \"'\") {\n        return null;\n      }\n      const attrEndIndex = s.indexOf(attrEndChar, ++pos);\n      if (attrEndIndex < 0) {\n        return null;\n      }\n      attrValue = s.substring(pos, attrEndIndex);\n      attributes.push({\n        name: attrName,\n        value: this._resolveEntities(attrValue),\n      });\n      pos = attrEndIndex + 1;\n      skipWs();\n    }\n    return {\n      name,\n      attributes,\n      parsed: pos - start,\n    };\n  }\n\n  _parseProcessingInstruction(s, start) {\n    let pos = start;\n\n    function skipWs() {\n      while (pos < s.length && isWhitespace(s, pos)) {\n        ++pos;\n      }\n    }\n\n    while (\n      pos < s.length &&\n      !isWhitespace(s, pos) &&\n      s[pos] !== \">\" &&\n      s[pos] !== \"/\"\n    ) {\n      ++pos;\n    }\n    const name = s.substring(start, pos);\n    skipWs();\n    const attrStart = pos;\n    while (pos < s.length && (s[pos] !== \"?\" || s[pos + 1] !== \">\")) {\n      ++pos;\n    }\n    const value = s.substring(attrStart, pos);\n    return {\n      name,\n      value,\n      parsed: pos - start,\n    };\n  }\n\n  parseXml(s) {\n    let i = 0;\n    while (i < s.length) {\n      const ch = s[i];\n      let j = i;\n      if (ch === \"<\") {\n        ++j;\n        const ch2 = s[j];\n        let q;\n        switch (ch2) {\n          case \"/\":\n            ++j;\n            q = s.indexOf(\">\", j);\n            if (q < 0) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onEndElement(s.substring(j, q));\n            j = q + 1;\n            break;\n          case \"?\":\n            ++j;\n            const pi = this._parseProcessingInstruction(s, j);\n            if (s.substring(j + pi.parsed, j + pi.parsed + 2) !== \"?>\") {\n              this.onError(XMLParserErrorCode.UnterminatedXmlDeclaration);\n              return;\n            }\n            this.onPi(pi.name, pi.value);\n            j += pi.parsed + 2;\n            break;\n          case \"!\":\n            if (s.substring(j + 1, j + 3) === \"--\") {\n              q = s.indexOf(\"-->\", j + 3);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedComment);\n                return;\n              }\n              this.onComment(s.substring(j + 3, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"[CDATA[\") {\n              q = s.indexOf(\"]]>\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedCdat);\n                return;\n              }\n              this.onCdata(s.substring(j + 8, q));\n              j = q + 3;\n            } else if (s.substring(j + 1, j + 8) === \"DOCTYPE\") {\n              const q2 = s.indexOf(\"[\", j + 8);\n              let complexDoctype = false;\n              q = s.indexOf(\">\", j + 8);\n              if (q < 0) {\n                this.onError(XMLParserErrorCode.UnterminatedDoctypeDeclaration);\n                return;\n              }\n              if (q2 > 0 && q > q2) {\n                q = s.indexOf(\"]>\", j + 8);\n                if (q < 0) {\n                  this.onError(\n                    XMLParserErrorCode.UnterminatedDoctypeDeclaration\n                  );\n                  return;\n                }\n                complexDoctype = true;\n              }\n              const doctypeContent = s.substring(\n                j + 8,\n                q + (complexDoctype ? 1 : 0)\n              );\n              this.onDoctype(doctypeContent);\n              j = q + (complexDoctype ? 2 : 1);\n            } else {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            break;\n          default:\n            const content = this._parseContent(s, j);\n            if (content === null) {\n              this.onError(XMLParserErrorCode.MalformedElement);\n              return;\n            }\n            let isClosed = false;\n            if (\n              s.substring(j + content.parsed, j + content.parsed + 2) === \"/>\"\n            ) {\n              isClosed = true;\n            } else if (\n              s.substring(j + content.parsed, j + content.parsed + 1) !== \">\"\n            ) {\n              this.onError(XMLParserErrorCode.UnterminatedElement);\n              return;\n            }\n            this.onBeginElement(content.name, content.attributes, isClosed);\n            j += content.parsed + (isClosed ? 2 : 1);\n            break;\n        }\n      } else {\n        while (j < s.length && s[j] !== \"<\") {\n          j++;\n        }\n        const text = s.substring(i, j);\n        this.onText(this._resolveEntities(text));\n      }\n      i = j;\n    }\n  }\n\n  onResolveEntity(name) {\n    return `&${name};`;\n  }\n\n  onPi(name, value) {}\n\n  onComment(text) {}\n\n  onCdata(text) {}\n\n  onDoctype(doctypeContent) {}\n\n  onText(text) {}\n\n  onBeginElement(name, attributes, isEmpty) {}\n\n  onEndElement(name) {}\n\n  onError(code) {}\n}\n\nclass SimpleDOMNode {\n  constructor(nodeName, nodeValue) {\n    this.nodeName = nodeName;\n    this.nodeValue = nodeValue;\n\n    Object.defineProperty(this, \"parentNode\", { value: null, writable: true });\n  }\n\n  get firstChild() {\n    return this.childNodes && this.childNodes[0];\n  }\n\n  get nextSibling() {\n    const childNodes = this.parentNode.childNodes;\n    if (!childNodes) {\n      return undefined;\n    }\n    const index = childNodes.indexOf(this);\n    if (index === -1) {\n      return undefined;\n    }\n    return childNodes[index + 1];\n  }\n\n  get textContent() {\n    if (!this.childNodes) {\n      return this.nodeValue || \"\";\n    }\n    return this.childNodes\n      .map(function (child) {\n        return child.textContent;\n      })\n      .join(\"\");\n  }\n\n  hasChildNodes() {\n    return this.childNodes && this.childNodes.length > 0;\n  }\n}\n\nclass SimpleXMLParser extends XMLParserBase {\n  constructor() {\n    super();\n    this._currentFragment = null;\n    this._stack = null;\n    this._errorCode = XMLParserErrorCode.NoError;\n  }\n\n  parseFromString(data) {\n    this._currentFragment = [];\n    this._stack = [];\n    this._errorCode = XMLParserErrorCode.NoError;\n\n    this.parseXml(data);\n\n    if (this._errorCode !== XMLParserErrorCode.NoError) {\n      return undefined; // return undefined on error\n    }\n\n    // We should only have one root.\n    const [documentElement] = this._currentFragment;\n    if (!documentElement) {\n      return undefined; // Return undefined if no root was found.\n    }\n    return { documentElement };\n  }\n\n  onResolveEntity(name) {\n    switch (name) {\n      case \"apos\":\n        return \"'\";\n    }\n    return super.onResolveEntity(name);\n  }\n\n  onText(text) {\n    if (isWhitespaceString(text)) {\n      return;\n    }\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onCdata(text) {\n    const node = new SimpleDOMNode(\"#text\", text);\n    this._currentFragment.push(node);\n  }\n\n  onBeginElement(name, attributes, isEmpty) {\n    const node = new SimpleDOMNode(name);\n    node.childNodes = [];\n    this._currentFragment.push(node);\n    if (isEmpty) {\n      return;\n    }\n    this._stack.push(this._currentFragment);\n    this._currentFragment = node.childNodes;\n  }\n\n  onEndElement(name) {\n    this._currentFragment = this._stack.pop() || [];\n    const lastElement = this._currentFragment[this._currentFragment.length - 1];\n    if (!lastElement) {\n      return;\n    }\n    for (let i = 0, ii = lastElement.childNodes.length; i < ii; i++) {\n      lastElement.childNodes[i].parentNode = lastElement;\n    }\n  }\n\n  onError(code) {\n    this._errorCode = code;\n  }\n}\n\nexport { SimpleXMLParser };\n","/* Copyright 2020 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { warn } from \"../shared/util.js\";\n\nclass OptionalContentGroup {\n  constructor(name, intent) {\n    this.visible = true;\n    this.name = name;\n    this.intent = intent;\n  }\n}\n\nclass OptionalContentConfig {\n  constructor(data) {\n    this.name = null;\n    this.creator = null;\n    this._order = null;\n    this._groups = new Map();\n\n    if (data === null) {\n      return;\n    }\n    this.name = data.name;\n    this.creator = data.creator;\n    this._order = data.order;\n    for (const group of data.groups) {\n      this._groups.set(\n        group.id,\n        new OptionalContentGroup(group.name, group.intent)\n      );\n    }\n\n    if (data.baseState === \"OFF\") {\n      for (const group of this._groups) {\n        group.visible = false;\n      }\n    }\n\n    for (const on of data.on) {\n      this._groups.get(on).visible = true;\n    }\n\n    for (const off of data.off) {\n      this._groups.get(off).visible = false;\n    }\n  }\n\n  isVisible(group) {\n    if (group.type === \"OCG\") {\n      if (!this._groups.has(group.id)) {\n        warn(`Optional content group not found: ${group.id}`);\n        return true;\n      }\n      return this._groups.get(group.id).visible;\n    } else if (group.type === \"OCMD\") {\n      // Per the spec, the expression should be preferred if available. Until\n      // we implement this, just fallback to using the group policy for now.\n      if (group.expression) {\n        warn(\"Visibility expression not supported yet.\");\n      }\n      if (!group.policy || group.policy === \"AnyOn\") {\n        // Default\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOn\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      } else if (group.policy === \"AnyOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (!this._groups.get(id).visible) {\n            return true;\n          }\n        }\n        return false;\n      } else if (group.policy === \"AllOff\") {\n        for (const id of group.ids) {\n          if (!this._groups.has(id)) {\n            warn(`Optional content group not found: ${id}`);\n            return true;\n          }\n          if (this._groups.get(id).visible) {\n            return false;\n          }\n        }\n        return true;\n      }\n      warn(`Unknown optional content policy ${group.policy}.`);\n      return true;\n    }\n    warn(`Unknown group type ${group.type}.`);\n    return true;\n  }\n\n  setVisibility(id, visible = true) {\n    if (!this._groups.has(id)) {\n      warn(`Optional content group not found: ${id}`);\n      return;\n    }\n    this._groups.get(id).visible = !!visible;\n  }\n\n  getOrder() {\n    if (!this._groups.size) {\n      return null;\n    }\n    if (this._order) {\n      return this._order.slice();\n    }\n    return Array.from(this._groups.keys());\n  }\n\n  getGroups() {\n    if (!this._groups.size) {\n      return null;\n    }\n    return Object.fromEntries(this._groups);\n  }\n\n  getGroup(id) {\n    return this._groups.get(id) || null;\n  }\n}\n\nexport { OptionalContentConfig };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport { assert, createPromiseCapability } from \"../shared/util.js\";\n\n/** @implements {IPDFStream} */\nclass PDFDataTransportStream {\n  constructor(params, pdfDataRangeTransport) {\n    assert(\n      pdfDataRangeTransport,\n      'PDFDataTransportStream - missing required \"pdfDataRangeTransport\" argument.'\n    );\n\n    this._queuedChunks = [];\n    this._progressiveDone = params.progressiveDone || false;\n\n    const initialData = params.initialData;\n    if (initialData && initialData.length > 0) {\n      const buffer = new Uint8Array(initialData).buffer;\n      this._queuedChunks.push(buffer);\n    }\n\n    this._pdfDataRangeTransport = pdfDataRangeTransport;\n    this._isStreamingSupported = !params.disableStream;\n    this._isRangeSupported = !params.disableRange;\n    this._contentLength = params.length;\n\n    this._fullRequestReader = null;\n    this._rangeReaders = [];\n\n    this._pdfDataRangeTransport.addRangeListener((begin, chunk) => {\n      this._onReceiveData({ begin, chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressListener((loaded, total) => {\n      this._onProgress({ loaded, total });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveReadListener(chunk => {\n      this._onReceiveData({ chunk });\n    });\n\n    this._pdfDataRangeTransport.addProgressiveDoneListener(() => {\n      this._onProgressiveDone();\n    });\n\n    this._pdfDataRangeTransport.transportReady();\n  }\n\n  _onReceiveData(args) {\n    const buffer = new Uint8Array(args.chunk).buffer;\n    if (args.begin === undefined) {\n      if (this._fullRequestReader) {\n        this._fullRequestReader._enqueue(buffer);\n      } else {\n        this._queuedChunks.push(buffer);\n      }\n    } else {\n      const found = this._rangeReaders.some(function (rangeReader) {\n        if (rangeReader._begin !== args.begin) {\n          return false;\n        }\n        rangeReader._enqueue(buffer);\n        return true;\n      });\n      assert(\n        found,\n        \"_onReceiveData - no `PDFDataTransportStreamRangeReader` instance found.\"\n      );\n    }\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  _onProgress(evt) {\n    if (evt.total === undefined) {\n      // Reporting to first range reader, if it exists.\n      const firstReader = this._rangeReaders[0];\n      if (firstReader && firstReader.onProgress) {\n        firstReader.onProgress({ loaded: evt.loaded });\n      }\n    } else {\n      const fullReader = this._fullRequestReader;\n      if (fullReader && fullReader.onProgress) {\n        fullReader.onProgress({ loaded: evt.loaded, total: evt.total });\n      }\n    }\n  }\n\n  _onProgressiveDone() {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.progressiveDone();\n    }\n    this._progressiveDone = true;\n  }\n\n  _removeRangeReader(reader) {\n    const i = this._rangeReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFDataTransportStream.getFullReader can only be called once.\"\n    );\n    const queuedChunks = this._queuedChunks;\n    this._queuedChunks = null;\n    return new PDFDataTransportStreamReader(\n      this,\n      queuedChunks,\n      this._progressiveDone\n    );\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFDataTransportStreamRangeReader(this, begin, end);\n    this._pdfDataRangeTransport.requestDataRange(begin, end);\n    this._rangeReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeReaders.slice(0);\n    readers.forEach(function (rangeReader) {\n      rangeReader.cancel(reason);\n    });\n    this._pdfDataRangeTransport.abort();\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFDataTransportStreamReader {\n  constructor(stream, queuedChunks, progressiveDone = false) {\n    this._stream = stream;\n    this._done = progressiveDone || false;\n    this._filename = null;\n    this._queuedChunks = queuedChunks || [];\n    this._loaded = 0;\n    for (const chunk of this._queuedChunks) {\n      this._loaded += chunk.byteLength;\n    }\n    this._requests = [];\n    this._headersReady = Promise.resolve();\n    stream._fullRequestReader = this;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // Ignore new data.\n    }\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunks.push(chunk);\n    }\n    this._loaded += chunk.byteLength;\n  }\n\n  get headersReady() {\n    return this._headersReady;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._stream._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._stream._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._stream._contentLength;\n  }\n\n  async read() {\n    if (this._queuedChunks.length > 0) {\n      const chunk = this._queuedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  progressiveDone() {\n    if (this._done) {\n      return;\n    }\n    this._done = true;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFDataTransportStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._begin = begin;\n    this._end = end;\n    this._queuedChunk = null;\n    this._requests = [];\n    this._done = false;\n\n    this.onProgress = null;\n  }\n\n  _enqueue(chunk) {\n    if (this._done) {\n      return; // ignore new data\n    }\n    if (this._requests.length === 0) {\n      this._queuedChunk = chunk;\n    } else {\n      const requestsCapability = this._requests.shift();\n      requestsCapability.resolve({ value: chunk, done: false });\n      this._requests.forEach(function (requestCapability) {\n        requestCapability.resolve({ value: undefined, done: true });\n      });\n      this._requests = [];\n    }\n    this._done = true;\n    this._stream._removeRangeReader(this);\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._stream._removeRangeReader(this);\n  }\n}\n\nexport { PDFDataTransportStream };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable no-multi-str */\n\nimport { shadow } from \"../shared/util.js\";\n\nclass WebGLContext {\n  constructor({ enable = false }) {\n    this._enabled = enable === true;\n  }\n\n  get isEnabled() {\n    let enabled = this._enabled;\n    if (enabled) {\n      enabled = WebGLUtils.tryInitGL();\n    }\n    return shadow(this, \"isEnabled\", enabled);\n  }\n\n  composeSMask({ layer, mask, properties }) {\n    return WebGLUtils.composeSMask(layer, mask, properties);\n  }\n\n  drawFigures({ width, height, backgroundColor, figures, context }) {\n    return WebGLUtils.drawFigures(\n      width,\n      height,\n      backgroundColor,\n      figures,\n      context\n    );\n  }\n\n  clear() {\n    WebGLUtils.cleanup();\n  }\n}\n\nvar WebGLUtils = (function WebGLUtilsClosure() {\n  function loadShader(gl, code, shaderType) {\n    var shader = gl.createShader(shaderType);\n    gl.shaderSource(shader, code);\n    gl.compileShader(shader);\n    var compiled = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (!compiled) {\n      var errorMsg = gl.getShaderInfoLog(shader);\n      throw new Error(\"Error during shader compilation: \" + errorMsg);\n    }\n    return shader;\n  }\n  function createVertexShader(gl, code) {\n    return loadShader(gl, code, gl.VERTEX_SHADER);\n  }\n  function createFragmentShader(gl, code) {\n    return loadShader(gl, code, gl.FRAGMENT_SHADER);\n  }\n  function createProgram(gl, shaders) {\n    var program = gl.createProgram();\n    for (var i = 0, ii = shaders.length; i < ii; ++i) {\n      gl.attachShader(program, shaders[i]);\n    }\n    gl.linkProgram(program);\n    var linked = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (!linked) {\n      var errorMsg = gl.getProgramInfoLog(program);\n      throw new Error(\"Error during program linking: \" + errorMsg);\n    }\n    return program;\n  }\n  function createTexture(gl, image, textureId) {\n    gl.activeTexture(textureId);\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    // Set the parameters so we can render any size image.\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n    // Upload the image into the texture.\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, image);\n    return texture;\n  }\n\n  var currentGL, currentCanvas;\n  function generateGL() {\n    if (currentGL) {\n      return;\n    }\n\n    // The temporary canvas is used in the WebGL context.\n    currentCanvas = document.createElement(\"canvas\");\n    currentGL = currentCanvas.getContext(\"webgl\", {\n      premultipliedalpha: false,\n    });\n  }\n\n  var smaskVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec2 a_texCoord;                                    \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 clipSpace = (a_position / u_resolution) * 2.0 - 1.0;   \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_texCoord = a_texCoord;                                    \\\n  }                                                             \";\n\n  var smaskFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  uniform vec4 u_backdrop;                                      \\\n  uniform int u_subtype;                                        \\\n  uniform sampler2D u_image;                                    \\\n  uniform sampler2D u_mask;                                     \\\n                                                                \\\n  varying vec2 v_texCoord;                                      \\\n                                                                \\\n  void main() {                                                 \\\n    vec4 imageColor = texture2D(u_image, v_texCoord);           \\\n    vec4 maskColor = texture2D(u_mask, v_texCoord);             \\\n    if (u_backdrop.a > 0.0) {                                   \\\n      maskColor.rgb = maskColor.rgb * maskColor.a +             \\\n                      u_backdrop.rgb * (1.0 - maskColor.a);     \\\n    }                                                           \\\n    float lum;                                                  \\\n    if (u_subtype == 0) {                                       \\\n      lum = maskColor.a;                                        \\\n    } else {                                                    \\\n      lum = maskColor.r * 0.3 + maskColor.g * 0.59 +            \\\n            maskColor.b * 0.11;                                 \\\n    }                                                           \\\n    imageColor.a *= lum;                                        \\\n    imageColor.rgb *= imageColor.a;                             \\\n    gl_FragColor = imageColor;                                  \\\n  }                                                             \";\n\n  var smaskCache = null;\n\n  function initSmaskGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, smaskVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, smaskFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.backdropLocation = gl.getUniformLocation(program, \"u_backdrop\");\n    cache.subtypeLocation = gl.getUniformLocation(program, \"u_subtype\");\n\n    var texCoordLocation = gl.getAttribLocation(program, \"a_texCoord\");\n    var texLayerLocation = gl.getUniformLocation(program, \"u_image\");\n    var texMaskLocation = gl.getUniformLocation(program, \"u_mask\");\n\n    // provide texture coordinates for the rectangle.\n    var texCoordBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, texCoordBuffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0.0, 0.0,\n      1.0, 0.0,\n      0.0, 1.0,\n      0.0, 1.0,\n      1.0, 0.0,\n      1.0, 1.0]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(texCoordLocation);\n    gl.vertexAttribPointer(texCoordLocation, 2, gl.FLOAT, false, 0, 0);\n\n    gl.uniform1i(texLayerLocation, 0);\n    gl.uniform1i(texMaskLocation, 1);\n\n    smaskCache = cache;\n  }\n\n  function composeSMask(layer, mask, properties) {\n    var width = layer.width,\n      height = layer.height;\n\n    if (!smaskCache) {\n      initSmaskGL();\n    }\n    var cache = smaskCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    if (properties.backdrop) {\n      gl.uniform4f(\n        cache.resolutionLocation,\n        properties.backdrop[0],\n        properties.backdrop[1],\n        properties.backdrop[2],\n        1\n      );\n    } else {\n      gl.uniform4f(cache.resolutionLocation, 0, 0, 0, 0);\n    }\n    gl.uniform1i(\n      cache.subtypeLocation,\n      properties.subtype === \"Luminosity\" ? 1 : 0\n    );\n\n    // Create a textures\n    var texture = createTexture(gl, layer, gl.TEXTURE0);\n    var maskTexture = createTexture(gl, mask, gl.TEXTURE1);\n\n    // Create a buffer and put a single clipspace rectangle in\n    // it (2 triangles)\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    // prettier-ignore\n    gl.bufferData(gl.ARRAY_BUFFER, new Float32Array([\n      0, 0,\n      width, 0,\n      0, height,\n      0, height,\n      width, 0,\n      width, height]), gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    // draw\n    gl.clearColor(0, 0, 0, 0);\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    gl.flush();\n\n    gl.deleteTexture(texture);\n    gl.deleteTexture(maskTexture);\n    gl.deleteBuffer(buffer);\n\n    return canvas;\n  }\n\n  var figuresVertexShaderCode =\n    \"\\\n  attribute vec2 a_position;                                    \\\n  attribute vec3 a_color;                                       \\\n                                                                \\\n  uniform vec2 u_resolution;                                    \\\n  uniform vec2 u_scale;                                         \\\n  uniform vec2 u_offset;                                        \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    vec2 position = (a_position + u_offset) * u_scale;          \\\n    vec2 clipSpace = (position / u_resolution) * 2.0 - 1.0;     \\\n    gl_Position = vec4(clipSpace * vec2(1, -1), 0, 1);          \\\n                                                                \\\n    v_color = vec4(a_color / 255.0, 1.0);                       \\\n  }                                                             \";\n\n  var figuresFragmentShaderCode =\n    \"\\\n  precision mediump float;                                      \\\n                                                                \\\n  varying vec4 v_color;                                         \\\n                                                                \\\n  void main() {                                                 \\\n    gl_FragColor = v_color;                                     \\\n  }                                                             \";\n\n  var figuresCache = null;\n\n  function initFiguresGL() {\n    var canvas, gl;\n\n    generateGL();\n    canvas = currentCanvas;\n    currentCanvas = null;\n    gl = currentGL;\n    currentGL = null;\n\n    // setup a GLSL program\n    var vertexShader = createVertexShader(gl, figuresVertexShaderCode);\n    var fragmentShader = createFragmentShader(gl, figuresFragmentShaderCode);\n    var program = createProgram(gl, [vertexShader, fragmentShader]);\n    gl.useProgram(program);\n\n    var cache = {};\n    cache.gl = gl;\n    cache.canvas = canvas;\n    cache.resolutionLocation = gl.getUniformLocation(program, \"u_resolution\");\n    cache.scaleLocation = gl.getUniformLocation(program, \"u_scale\");\n    cache.offsetLocation = gl.getUniformLocation(program, \"u_offset\");\n    cache.positionLocation = gl.getAttribLocation(program, \"a_position\");\n    cache.colorLocation = gl.getAttribLocation(program, \"a_color\");\n\n    figuresCache = cache;\n  }\n\n  function drawFigures(width, height, backgroundColor, figures, context) {\n    if (!figuresCache) {\n      initFiguresGL();\n    }\n    var cache = figuresCache,\n      canvas = cache.canvas,\n      gl = cache.gl;\n\n    canvas.width = width;\n    canvas.height = height;\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\n    gl.uniform2f(cache.resolutionLocation, width, height);\n\n    // count triangle points\n    var count = 0;\n    var i, ii, rows;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      switch (figures[i].type) {\n        case \"lattice\":\n          rows = (figures[i].coords.length / figures[i].verticesPerRow) | 0;\n          count += (rows - 1) * (figures[i].verticesPerRow - 1) * 6;\n          break;\n        case \"triangles\":\n          count += figures[i].coords.length;\n          break;\n      }\n    }\n    // transfer data\n    var coords = new Float32Array(count * 2);\n    var colors = new Uint8Array(count * 3);\n    var coordsMap = context.coords,\n      colorsMap = context.colors;\n    var pIndex = 0,\n      cIndex = 0;\n    for (i = 0, ii = figures.length; i < ii; i++) {\n      var figure = figures[i],\n        ps = figure.coords,\n        cs = figure.colors;\n      switch (figure.type) {\n        case \"lattice\":\n          var cols = figure.verticesPerRow;\n          rows = (ps.length / cols) | 0;\n          for (var row = 1; row < rows; row++) {\n            var offset = row * cols + 1;\n            for (var col = 1; col < cols; col++, offset++) {\n              coords[pIndex] = coordsMap[ps[offset - cols - 1]];\n              coords[pIndex + 1] = coordsMap[ps[offset - cols - 1] + 1];\n              coords[pIndex + 2] = coordsMap[ps[offset - cols]];\n              coords[pIndex + 3] = coordsMap[ps[offset - cols] + 1];\n              coords[pIndex + 4] = coordsMap[ps[offset - 1]];\n              coords[pIndex + 5] = coordsMap[ps[offset - 1] + 1];\n              colors[cIndex] = colorsMap[cs[offset - cols - 1]];\n              colors[cIndex + 1] = colorsMap[cs[offset - cols - 1] + 1];\n              colors[cIndex + 2] = colorsMap[cs[offset - cols - 1] + 2];\n              colors[cIndex + 3] = colorsMap[cs[offset - cols]];\n              colors[cIndex + 4] = colorsMap[cs[offset - cols] + 1];\n              colors[cIndex + 5] = colorsMap[cs[offset - cols] + 2];\n              colors[cIndex + 6] = colorsMap[cs[offset - 1]];\n              colors[cIndex + 7] = colorsMap[cs[offset - 1] + 1];\n              colors[cIndex + 8] = colorsMap[cs[offset - 1] + 2];\n\n              coords[pIndex + 6] = coords[pIndex + 2];\n              coords[pIndex + 7] = coords[pIndex + 3];\n              coords[pIndex + 8] = coords[pIndex + 4];\n              coords[pIndex + 9] = coords[pIndex + 5];\n              coords[pIndex + 10] = coordsMap[ps[offset]];\n              coords[pIndex + 11] = coordsMap[ps[offset] + 1];\n              colors[cIndex + 9] = colors[cIndex + 3];\n              colors[cIndex + 10] = colors[cIndex + 4];\n              colors[cIndex + 11] = colors[cIndex + 5];\n              colors[cIndex + 12] = colors[cIndex + 6];\n              colors[cIndex + 13] = colors[cIndex + 7];\n              colors[cIndex + 14] = colors[cIndex + 8];\n              colors[cIndex + 15] = colorsMap[cs[offset]];\n              colors[cIndex + 16] = colorsMap[cs[offset] + 1];\n              colors[cIndex + 17] = colorsMap[cs[offset] + 2];\n              pIndex += 12;\n              cIndex += 18;\n            }\n          }\n          break;\n        case \"triangles\":\n          for (var j = 0, jj = ps.length; j < jj; j++) {\n            coords[pIndex] = coordsMap[ps[j]];\n            coords[pIndex + 1] = coordsMap[ps[j] + 1];\n            colors[cIndex] = colorsMap[cs[j]];\n            colors[cIndex + 1] = colorsMap[cs[j] + 1];\n            colors[cIndex + 2] = colorsMap[cs[j] + 2];\n            pIndex += 2;\n            cIndex += 3;\n          }\n          break;\n      }\n    }\n\n    // draw\n    if (backgroundColor) {\n      gl.clearColor(\n        backgroundColor[0] / 255,\n        backgroundColor[1] / 255,\n        backgroundColor[2] / 255,\n        1.0\n      );\n    } else {\n      gl.clearColor(0, 0, 0, 0);\n    }\n    gl.clear(gl.COLOR_BUFFER_BIT);\n\n    var coordsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, coordsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, coords, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.positionLocation);\n    gl.vertexAttribPointer(cache.positionLocation, 2, gl.FLOAT, false, 0, 0);\n\n    var colorsBuffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, colorsBuffer);\n    gl.bufferData(gl.ARRAY_BUFFER, colors, gl.STATIC_DRAW);\n    gl.enableVertexAttribArray(cache.colorLocation);\n    gl.vertexAttribPointer(\n      cache.colorLocation,\n      3,\n      gl.UNSIGNED_BYTE,\n      false,\n      0,\n      0\n    );\n\n    gl.uniform2f(cache.scaleLocation, context.scaleX, context.scaleY);\n    gl.uniform2f(cache.offsetLocation, context.offsetX, context.offsetY);\n\n    gl.drawArrays(gl.TRIANGLES, 0, count);\n\n    gl.flush();\n\n    gl.deleteBuffer(coordsBuffer);\n    gl.deleteBuffer(colorsBuffer);\n\n    return canvas;\n  }\n\n  return {\n    tryInitGL() {\n      try {\n        generateGL();\n        return !!currentGL;\n      } catch (ex) {}\n      return false;\n    },\n\n    composeSMask,\n\n    drawFigures,\n\n    cleanup() {\n      if (smaskCache && smaskCache.canvas) {\n        smaskCache.canvas.width = 0;\n        smaskCache.canvas.height = 0;\n      }\n      if (figuresCache && figuresCache.canvas) {\n        figuresCache.canvas.width = 0;\n        figuresCache.canvas.height = 0;\n      }\n      smaskCache = null;\n      figuresCache = null;\n    },\n  };\n})();\n\nexport { WebGLContext };\n","/* Copyright 2014 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  addLinkAttributes,\n  DOMSVGFactory,\n  getFilenameFromUrl,\n  LinkTarget,\n  PDFDateString,\n} from \"./display_utils.js\";\nimport {\n  AnnotationBorderStyleType,\n  AnnotationType,\n  stringToPDFString,\n  unreachable,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { AnnotationStorage } from \"./annotation_storage.js\";\n\n/**\n * @typedef {Object} AnnotationElementParameters\n * @property {Object} data\n * @property {HTMLDivElement} layer\n * @property {PDFPage} page\n * @property {PageViewport} viewport\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {AnnotationStorage} [annotationStorage]\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n * @property {Object} svgFactory\n */\n\nclass AnnotationElementFactory {\n  /**\n   * @param {AnnotationElementParameters} parameters\n   * @returns {AnnotationElement}\n   */\n  static create(parameters) {\n    const subtype = parameters.data.annotationType;\n\n    switch (subtype) {\n      case AnnotationType.LINK:\n        return new LinkAnnotationElement(parameters);\n\n      case AnnotationType.TEXT:\n        return new TextAnnotationElement(parameters);\n\n      case AnnotationType.WIDGET:\n        const fieldType = parameters.data.fieldType;\n\n        switch (fieldType) {\n          case \"Tx\":\n            return new TextWidgetAnnotationElement(parameters);\n          case \"Btn\":\n            if (parameters.data.radioButton) {\n              return new RadioButtonWidgetAnnotationElement(parameters);\n            } else if (parameters.data.checkBox) {\n              return new CheckboxWidgetAnnotationElement(parameters);\n            }\n            return new PushButtonWidgetAnnotationElement(parameters);\n          case \"Ch\":\n            return new ChoiceWidgetAnnotationElement(parameters);\n        }\n        return new WidgetAnnotationElement(parameters);\n\n      case AnnotationType.POPUP:\n        return new PopupAnnotationElement(parameters);\n\n      case AnnotationType.FREETEXT:\n        return new FreeTextAnnotationElement(parameters);\n\n      case AnnotationType.LINE:\n        return new LineAnnotationElement(parameters);\n\n      case AnnotationType.SQUARE:\n        return new SquareAnnotationElement(parameters);\n\n      case AnnotationType.CIRCLE:\n        return new CircleAnnotationElement(parameters);\n\n      case AnnotationType.POLYLINE:\n        return new PolylineAnnotationElement(parameters);\n\n      case AnnotationType.CARET:\n        return new CaretAnnotationElement(parameters);\n\n      case AnnotationType.INK:\n        return new InkAnnotationElement(parameters);\n\n      case AnnotationType.POLYGON:\n        return new PolygonAnnotationElement(parameters);\n\n      case AnnotationType.HIGHLIGHT:\n        return new HighlightAnnotationElement(parameters);\n\n      case AnnotationType.UNDERLINE:\n        return new UnderlineAnnotationElement(parameters);\n\n      case AnnotationType.SQUIGGLY:\n        return new SquigglyAnnotationElement(parameters);\n\n      case AnnotationType.STRIKEOUT:\n        return new StrikeOutAnnotationElement(parameters);\n\n      case AnnotationType.STAMP:\n        return new StampAnnotationElement(parameters);\n\n      case AnnotationType.FILEATTACHMENT:\n        return new FileAttachmentAnnotationElement(parameters);\n\n      default:\n        return new AnnotationElement(parameters);\n    }\n  }\n}\n\nclass AnnotationElement {\n  constructor(parameters, isRenderable = false, ignoreBorder = false) {\n    this.isRenderable = isRenderable;\n    this.data = parameters.data;\n    this.layer = parameters.layer;\n    this.page = parameters.page;\n    this.viewport = parameters.viewport;\n    this.linkService = parameters.linkService;\n    this.downloadManager = parameters.downloadManager;\n    this.imageResourcesPath = parameters.imageResourcesPath;\n    this.renderInteractiveForms = parameters.renderInteractiveForms;\n    this.svgFactory = parameters.svgFactory;\n    this.annotationStorage = parameters.annotationStorage;\n\n    if (isRenderable) {\n      this.container = this._createContainer(ignoreBorder);\n    }\n  }\n\n  /**\n   * Create an empty container for the annotation's HTML element.\n   *\n   * @private\n   * @param {boolean} ignoreBorder\n   * @memberof AnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  _createContainer(ignoreBorder = false) {\n    const data = this.data,\n      page = this.page,\n      viewport = this.viewport;\n    const container = document.createElement(\"section\");\n    let width = data.rect[2] - data.rect[0];\n    let height = data.rect[3] - data.rect[1];\n\n    container.setAttribute(\"data-annotation-id\", data.id);\n\n    // Do *not* modify `data.rect`, since that will corrupt the annotation\n    // position on subsequent calls to `_createContainer` (see issue 6804).\n    const rect = Util.normalizeRect([\n      data.rect[0],\n      page.view[3] - data.rect[1] + page.view[1],\n      data.rect[2],\n      page.view[3] - data.rect[3] + page.view[1],\n    ]);\n\n    container.style.transform = `matrix(${viewport.transform.join(\",\")})`;\n    container.style.transformOrigin = `-${rect[0]}px -${rect[1]}px`;\n\n    if (!ignoreBorder && data.borderStyle.width > 0) {\n      container.style.borderWidth = `${data.borderStyle.width}px`;\n      if (data.borderStyle.style !== AnnotationBorderStyleType.UNDERLINE) {\n        // Underline styles only have a bottom border, so we do not need\n        // to adjust for all borders. This yields a similar result as\n        // Adobe Acrobat/Reader.\n        width = width - 2 * data.borderStyle.width;\n        height = height - 2 * data.borderStyle.width;\n      }\n\n      const horizontalRadius = data.borderStyle.horizontalCornerRadius;\n      const verticalRadius = data.borderStyle.verticalCornerRadius;\n      if (horizontalRadius > 0 || verticalRadius > 0) {\n        const radius = `${horizontalRadius}px / ${verticalRadius}px`;\n        container.style.borderRadius = radius;\n      }\n\n      switch (data.borderStyle.style) {\n        case AnnotationBorderStyleType.SOLID:\n          container.style.borderStyle = \"solid\";\n          break;\n\n        case AnnotationBorderStyleType.DASHED:\n          container.style.borderStyle = \"dashed\";\n          break;\n\n        case AnnotationBorderStyleType.BEVELED:\n          warn(\"Unimplemented border style: beveled\");\n          break;\n\n        case AnnotationBorderStyleType.INSET:\n          warn(\"Unimplemented border style: inset\");\n          break;\n\n        case AnnotationBorderStyleType.UNDERLINE:\n          container.style.borderBottomStyle = \"solid\";\n          break;\n\n        default:\n          break;\n      }\n\n      if (data.color) {\n        container.style.borderColor = Util.makeCssRgb(\n          data.color[0] | 0,\n          data.color[1] | 0,\n          data.color[2] | 0\n        );\n      } else {\n        // Transparent (invisible) border, so do not draw it at all.\n        container.style.borderWidth = 0;\n      }\n    }\n\n    container.style.left = `${rect[0]}px`;\n    container.style.top = `${rect[1]}px`;\n    container.style.width = `${width}px`;\n    container.style.height = `${height}px`;\n    return container;\n  }\n\n  /**\n   * Create a popup for the annotation's HTML element. This is used for\n   * annotations that do not have a Popup entry in the dictionary, but\n   * are of a type that works with popups (such as Highlight annotations).\n   *\n   * @private\n   * @param {HTMLSectionElement} container\n   * @param {HTMLDivElement|HTMLImageElement|null} trigger\n   * @param {Object} data\n   * @memberof AnnotationElement\n   */\n  _createPopup(container, trigger, data) {\n    // If no trigger element is specified, create it.\n    if (!trigger) {\n      trigger = document.createElement(\"div\");\n      trigger.style.height = container.style.height;\n      trigger.style.width = container.style.width;\n      container.appendChild(trigger);\n    }\n\n    const popupElement = new PopupElement({\n      container,\n      trigger,\n      color: data.color,\n      title: data.title,\n      modificationDate: data.modificationDate,\n      contents: data.contents,\n      hideWrapper: true,\n    });\n    const popup = popupElement.render();\n\n    // Position the popup next to the annotation's container.\n    popup.style.left = container.style.width;\n\n    container.appendChild(popup);\n  }\n\n  /**\n   * Render the annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof AnnotationElement\n   */\n  render() {\n    unreachable(\"Abstract method `AnnotationElement.render` called\");\n  }\n}\n\nclass LinkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.url ||\n      parameters.data.dest ||\n      parameters.data.action\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the link annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LinkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"linkAnnotation\";\n\n    const { data, linkService } = this;\n    const link = document.createElement(\"a\");\n\n    if (data.url) {\n      addLinkAttributes(link, {\n        url: data.url,\n        target: data.newWindow\n          ? LinkTarget.BLANK\n          : linkService.externalLinkTarget,\n        rel: linkService.externalLinkRel,\n        enabled: linkService.externalLinkEnabled,\n      });\n    } else if (data.action) {\n      this._bindNamedAction(link, data.action);\n    } else {\n      this._bindLink(link, data.dest);\n    }\n\n    this.container.appendChild(link);\n    return this.container;\n  }\n\n  /**\n   * Bind internal links to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} destination\n   * @memberof LinkAnnotationElement\n   */\n  _bindLink(link, destination) {\n    link.href = this.linkService.getDestinationHash(destination);\n    link.onclick = () => {\n      if (destination) {\n        this.linkService.navigateTo(destination);\n      }\n      return false;\n    };\n    if (destination) {\n      link.className = \"internalLink\";\n    }\n  }\n\n  /**\n   * Bind named actions to the link element.\n   *\n   * @private\n   * @param {Object} link\n   * @param {Object} action\n   * @memberof LinkAnnotationElement\n   */\n  _bindNamedAction(link, action) {\n    link.href = this.linkService.getAnchorUrl(\"\");\n    link.onclick = () => {\n      this.linkService.executeNamedAction(action);\n      return false;\n    };\n    link.className = \"internalLink\";\n  }\n}\n\nclass TextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"textAnnotation\";\n\n    const image = document.createElement(\"img\");\n    image.style.height = this.container.style.height;\n    image.style.width = this.container.style.width;\n    image.src =\n      this.imageResourcesPath +\n      \"annotation-\" +\n      this.data.name.toLowerCase() +\n      \".svg\";\n    image.alt = \"[{{type}} Annotation]\";\n    image.dataset.l10nId = \"text_annotation_type\";\n    image.dataset.l10nArgs = JSON.stringify({ type: this.data.name });\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, image, this.data);\n    }\n\n    this.container.appendChild(image);\n    return this.container;\n  }\n}\n\nclass WidgetAnnotationElement extends AnnotationElement {\n  /**\n   * Render the widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof WidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Show only the container for unsupported field types.\n    return this.container;\n  }\n}\n\nclass TextWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    const isRenderable =\n      parameters.renderInteractiveForms ||\n      (!parameters.data.hasAppearance && !!parameters.data.fieldValue);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the text widget annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof TextWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const TEXT_ALIGNMENT = [\"left\", \"center\", \"right\"];\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    this.container.className = \"textWidgetAnnotation\";\n\n    let element = null;\n    if (this.renderInteractiveForms) {\n      // NOTE: We cannot set the values using `element.value` below, since it\n      //       prevents the AnnotationLayer rasterizer in `test/driver.js`\n      //       from parsing the elements correctly for the reference tests.\n      const textContent = storage.getOrCreateValue(id, this.data.fieldValue);\n\n      if (this.data.multiLine) {\n        element = document.createElement(\"textarea\");\n        element.textContent = textContent;\n      } else {\n        element = document.createElement(\"input\");\n        element.type = \"text\";\n        element.setAttribute(\"value\", textContent);\n      }\n\n      element.addEventListener(\"input\", function (event) {\n        storage.setValue(id, event.target.value);\n      });\n\n      element.disabled = this.data.readOnly;\n      element.name = this.data.fieldName;\n\n      if (this.data.maxLen !== null) {\n        element.maxLength = this.data.maxLen;\n      }\n\n      if (this.data.comb) {\n        const fieldWidth = this.data.rect[2] - this.data.rect[0];\n        const combWidth = fieldWidth / this.data.maxLen;\n\n        element.classList.add(\"comb\");\n        element.style.letterSpacing = `calc(${combWidth}px - 1ch)`;\n      }\n    } else {\n      element = document.createElement(\"div\");\n      element.textContent = this.data.fieldValue;\n      element.style.verticalAlign = \"middle\";\n      element.style.display = \"table-cell\";\n\n      let font = null;\n      if (\n        this.data.fontRefName &&\n        this.page.commonObjs.has(this.data.fontRefName)\n      ) {\n        font = this.page.commonObjs.get(this.data.fontRefName);\n      }\n      this._setTextStyle(element, font);\n    }\n\n    if (this.data.textAlignment !== null) {\n      element.style.textAlign = TEXT_ALIGNMENT[this.data.textAlignment];\n    }\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n\n  /**\n   * Apply text styles to the text in the element.\n   *\n   * @private\n   * @param {HTMLDivElement} element\n   * @param {Object} font\n   * @memberof TextWidgetAnnotationElement\n   */\n  _setTextStyle(element, font) {\n    // TODO: This duplicates some of the logic in CanvasGraphics.setFont().\n    const style = element.style;\n    style.fontSize = `${this.data.fontSize}px`;\n    style.direction = this.data.fontDirection < 0 ? \"rtl\" : \"ltr\";\n\n    if (!font) {\n      return;\n    }\n\n    let bold = \"normal\";\n    if (font.black) {\n      bold = \"900\";\n    } else if (font.bold) {\n      bold = \"bold\";\n    }\n    style.fontWeight = bold;\n    style.fontStyle = font.italic ? \"italic\" : \"normal\";\n\n    // Use a reasonable default font if the font doesn't specify a fallback.\n    const fontFamily = font.loadedName ? `\"${font.loadedName}\", ` : \"\";\n    const fallbackName = font.fallbackName || \"Helvetica, sans-serif\";\n    style.fontFamily = fontFamily + fallbackName;\n  }\n}\n\nclass CheckboxWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the checkbox widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof CheckboxWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(\n      id,\n      data.fieldValue && data.fieldValue !== \"Off\"\n    );\n\n    this.container.className = \"buttonWidgetAnnotation checkBox\";\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"checkbox\";\n    element.name = this.data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.addEventListener(\"change\", function (event) {\n      storage.setValue(id, event.target.checked);\n    });\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass RadioButtonWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the radio button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof RadioButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"buttonWidgetAnnotation radioButton\";\n    const storage = this.annotationStorage;\n    const data = this.data;\n    const id = data.id;\n    const value = storage.getOrCreateValue(\n      id,\n      data.fieldValue === data.buttonValue\n    );\n\n    const element = document.createElement(\"input\");\n    element.disabled = data.readOnly;\n    element.type = \"radio\";\n    element.name = data.fieldName;\n    if (value) {\n      element.setAttribute(\"checked\", true);\n    }\n\n    element.addEventListener(\"change\", function (event) {\n      const name = event.target.name;\n      for (const radio of document.getElementsByName(name)) {\n        if (radio !== event.target) {\n          storage.setValue(\n            radio.parentNode.getAttribute(\"data-annotation-id\"),\n            false\n          );\n        }\n      }\n      storage.setValue(id, event.target.checked);\n    });\n\n    this.container.appendChild(element);\n    return this.container;\n  }\n}\n\nclass PushButtonWidgetAnnotationElement extends LinkAnnotationElement {\n  /**\n   * Render the push button widget annotation's HTML element\n   * in the empty container.\n   *\n   * @public\n   * @memberof PushButtonWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // The rendering and functionality of a push button widget annotation is\n    // equal to that of a link annotation, but may have more functionality, such\n    // as performing actions on form fields (resetting, submitting, et cetera).\n    const container = super.render();\n    container.className = \"buttonWidgetAnnotation pushButton\";\n    return container;\n  }\n}\n\nclass ChoiceWidgetAnnotationElement extends WidgetAnnotationElement {\n  constructor(parameters) {\n    super(parameters, parameters.renderInteractiveForms);\n  }\n\n  /**\n   * Render the choice widget annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof ChoiceWidgetAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"choiceWidgetAnnotation\";\n    const storage = this.annotationStorage;\n    const id = this.data.id;\n\n    // For printing/saving we currently only support choice widgets with one\n    // option selection. Therefore, listboxes (#12189) and comboboxes (#12224)\n    // are not properly printed/saved yet, so we only store the first item in\n    // the field value array instead of the entire array. Once support for those\n    // two field types is implemented, we should use the same pattern as the\n    // other interactive widgets where the return value of `getOrCreateValue` is\n    // used and the full array of field values is stored.\n    storage.getOrCreateValue(\n      id,\n      this.data.fieldValue.length > 0 ? this.data.fieldValue[0] : null\n    );\n\n    const selectElement = document.createElement(\"select\");\n    selectElement.disabled = this.data.readOnly;\n    selectElement.name = this.data.fieldName;\n\n    if (!this.data.combo) {\n      // List boxes have a size and (optionally) multiple selection.\n      selectElement.size = this.data.options.length;\n      if (this.data.multiSelect) {\n        selectElement.multiple = true;\n      }\n    }\n\n    // Insert the options into the choice field.\n    for (const option of this.data.options) {\n      const optionElement = document.createElement(\"option\");\n      optionElement.textContent = option.displayValue;\n      optionElement.value = option.exportValue;\n      if (this.data.fieldValue.includes(option.exportValue)) {\n        optionElement.setAttribute(\"selected\", true);\n      }\n      selectElement.appendChild(optionElement);\n    }\n\n    selectElement.addEventListener(\"input\", function (event) {\n      const options = event.target.options;\n      const value = options[options.selectedIndex].value;\n      storage.setValue(id, value);\n    });\n\n    this.container.appendChild(selectElement);\n    return this.container;\n  }\n}\n\nclass PopupAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(parameters.data.title || parameters.data.contents);\n    super(parameters, isRenderable);\n  }\n\n  /**\n   * Render the popup annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PopupAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    // Do not render popup annotations for parent elements with these types as\n    // they create the popups themselves (because of custom trigger divs).\n    const IGNORE_TYPES = [\n      \"Line\",\n      \"Square\",\n      \"Circle\",\n      \"PolyLine\",\n      \"Polygon\",\n      \"Ink\",\n    ];\n\n    this.container.className = \"popupAnnotation\";\n\n    if (IGNORE_TYPES.includes(this.data.parentType)) {\n      return this.container;\n    }\n\n    const selector = `[data-annotation-id=\"${this.data.parentId}\"]`;\n    const parentElement = this.layer.querySelector(selector);\n    if (!parentElement) {\n      return this.container;\n    }\n\n    const popup = new PopupElement({\n      container: this.container,\n      trigger: parentElement,\n      color: this.data.color,\n      title: this.data.title,\n      modificationDate: this.data.modificationDate,\n      contents: this.data.contents,\n    });\n\n    // Position the popup next to the parent annotation's container.\n    // PDF viewers ignore a popup annotation's rectangle.\n    const parentLeft = parseFloat(parentElement.style.left);\n    const parentWidth = parseFloat(parentElement.style.width);\n    this.container.style.transformOrigin = `-${parentLeft + parentWidth}px -${\n      parentElement.style.top\n    }`;\n    this.container.style.left = `${parentLeft + parentWidth}px`;\n\n    this.container.appendChild(popup.render());\n    return this.container;\n  }\n}\n\nclass PopupElement {\n  constructor(parameters) {\n    this.container = parameters.container;\n    this.trigger = parameters.trigger;\n    this.color = parameters.color;\n    this.title = parameters.title;\n    this.modificationDate = parameters.modificationDate;\n    this.contents = parameters.contents;\n    this.hideWrapper = parameters.hideWrapper || false;\n\n    this.pinned = false;\n  }\n\n  /**\n   * Render the popup's HTML element.\n   *\n   * @public\n   * @memberof PopupElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    const BACKGROUND_ENLIGHT = 0.7;\n\n    const wrapper = document.createElement(\"div\");\n    wrapper.className = \"popupWrapper\";\n\n    // For Popup annotations we hide the entire section because it contains\n    // only the popup. However, for Text annotations without a separate Popup\n    // annotation, we cannot hide the entire container as the image would\n    // disappear too. In that special case, hiding the wrapper suffices.\n    this.hideElement = this.hideWrapper ? wrapper : this.container;\n    this.hideElement.setAttribute(\"hidden\", true);\n\n    const popup = document.createElement(\"div\");\n    popup.className = \"popup\";\n\n    const color = this.color;\n    if (color) {\n      // Enlighten the color.\n      const r = BACKGROUND_ENLIGHT * (255 - color[0]) + color[0];\n      const g = BACKGROUND_ENLIGHT * (255 - color[1]) + color[1];\n      const b = BACKGROUND_ENLIGHT * (255 - color[2]) + color[2];\n      popup.style.backgroundColor = Util.makeCssRgb(r | 0, g | 0, b | 0);\n    }\n\n    const title = document.createElement(\"h1\");\n    title.textContent = this.title;\n    popup.appendChild(title);\n\n    // The modification date is shown in the popup instead of the creation\n    // date if it is available and can be parsed correctly, which is\n    // consistent with other viewers such as Adobe Acrobat.\n    const dateObject = PDFDateString.toDateObject(this.modificationDate);\n    if (dateObject) {\n      const modificationDate = document.createElement(\"span\");\n      modificationDate.textContent = \"{{date}}, {{time}}\";\n      modificationDate.dataset.l10nId = \"annotation_date_string\";\n      modificationDate.dataset.l10nArgs = JSON.stringify({\n        date: dateObject.toLocaleDateString(),\n        time: dateObject.toLocaleTimeString(),\n      });\n      popup.appendChild(modificationDate);\n    }\n\n    const contents = this._formatContents(this.contents);\n    popup.appendChild(contents);\n\n    // Attach the event listeners to the trigger element.\n    this.trigger.addEventListener(\"click\", this._toggle.bind(this));\n    this.trigger.addEventListener(\"mouseover\", this._show.bind(this, false));\n    this.trigger.addEventListener(\"mouseout\", this._hide.bind(this, false));\n    popup.addEventListener(\"click\", this._hide.bind(this, true));\n\n    wrapper.appendChild(popup);\n    return wrapper;\n  }\n\n  /**\n   * Format the contents of the popup by adding newlines where necessary.\n   *\n   * @private\n   * @param {string} contents\n   * @memberof PopupElement\n   * @returns {HTMLParagraphElement}\n   */\n  _formatContents(contents) {\n    const p = document.createElement(\"p\");\n    const lines = contents.split(/(?:\\r\\n?|\\n)/);\n    for (let i = 0, ii = lines.length; i < ii; ++i) {\n      const line = lines[i];\n      p.appendChild(document.createTextNode(line));\n      if (i < ii - 1) {\n        p.appendChild(document.createElement(\"br\"));\n      }\n    }\n    return p;\n  }\n\n  /**\n   * Toggle the visibility of the popup.\n   *\n   * @private\n   * @memberof PopupElement\n   */\n  _toggle() {\n    if (this.pinned) {\n      this._hide(true);\n    } else {\n      this._show(true);\n    }\n  }\n\n  /**\n   * Show the popup.\n   *\n   * @private\n   * @param {boolean} pin\n   * @memberof PopupElement\n   */\n  _show(pin = false) {\n    if (pin) {\n      this.pinned = true;\n    }\n    if (this.hideElement.hasAttribute(\"hidden\")) {\n      this.hideElement.removeAttribute(\"hidden\");\n      this.container.style.zIndex += 1;\n    }\n  }\n\n  /**\n   * Hide the popup.\n   *\n   * @private\n   * @param {boolean} unpin\n   * @memberof PopupElement\n   */\n  _hide(unpin = true) {\n    if (unpin) {\n      this.pinned = false;\n    }\n    if (!this.hideElement.hasAttribute(\"hidden\") && !this.pinned) {\n      this.hideElement.setAttribute(\"hidden\", true);\n      this.container.style.zIndex -= 1;\n    }\n  }\n}\n\nclass FreeTextAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the free text annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof FreeTextAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"freeTextAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass LineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the line annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof LineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"lineAnnotation\";\n\n    // Create an invisible line with the same starting and ending coordinates\n    // that acts as the trigger for the popup. Only the line itself should\n    // trigger the popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // PDF coordinates are calculated from a bottom left origin, so transform\n    // the line coordinates to a top left origin for the SVG element.\n    const line = this.svgFactory.createElement(\"svg:line\");\n    line.setAttribute(\"x1\", data.rect[2] - data.lineCoordinates[0]);\n    line.setAttribute(\"y1\", data.rect[3] - data.lineCoordinates[1]);\n    line.setAttribute(\"x2\", data.rect[2] - data.lineCoordinates[2]);\n    line.setAttribute(\"y2\", data.rect[3] - data.lineCoordinates[3]);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    line.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    line.setAttribute(\"stroke\", \"transparent\");\n\n    svg.appendChild(line);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the line instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, line, data);\n\n    return this.container;\n  }\n}\n\nclass SquareAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the square annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquareAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squareAnnotation\";\n\n    // Create an invisible square with the same rectangle that acts as the\n    // trigger for the popup. Only the square itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the square and half of\n    // the borders outside the square by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const square = this.svgFactory.createElement(\"svg:rect\");\n    square.setAttribute(\"x\", borderWidth / 2);\n    square.setAttribute(\"y\", borderWidth / 2);\n    square.setAttribute(\"width\", width - borderWidth);\n    square.setAttribute(\"height\", height - borderWidth);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    square.setAttribute(\"stroke-width\", borderWidth || 1);\n    square.setAttribute(\"stroke\", \"transparent\");\n    square.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(square);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the square instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, square, data);\n\n    return this.container;\n  }\n}\n\nclass CircleAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the circle annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CircleAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"circleAnnotation\";\n\n    // Create an invisible circle with the same ellipse that acts as the\n    // trigger for the popup. Only the circle itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // The browser draws half of the borders inside the circle and half of\n    // the borders outside the circle by default. This behavior cannot be\n    // changed programmatically, so correct for that here.\n    const borderWidth = data.borderStyle.width;\n    const circle = this.svgFactory.createElement(\"svg:ellipse\");\n    circle.setAttribute(\"cx\", width / 2);\n    circle.setAttribute(\"cy\", height / 2);\n    circle.setAttribute(\"rx\", width / 2 - borderWidth / 2);\n    circle.setAttribute(\"ry\", height / 2 - borderWidth / 2);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    circle.setAttribute(\"stroke-width\", borderWidth || 1);\n    circle.setAttribute(\"stroke\", \"transparent\");\n    circle.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(circle);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the circle instead\n    // of to the entire container (which is the default).\n    this._createPopup(this.container, circle, data);\n\n    return this.container;\n  }\n}\n\nclass PolylineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"polylineAnnotation\";\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the polyline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof PolylineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup. Only the polyline itself should trigger the\n    // popup, not the entire container.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    // Convert the vertices array to a single points string that the SVG\n    // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n    // calculated from a bottom left origin, so transform the polyline\n    // coordinates to a top left origin for the SVG element.\n    let points = [];\n    for (const coordinate of data.vertices) {\n      const x = coordinate.x - data.rect[0];\n      const y = data.rect[3] - coordinate.y;\n      points.push(x + \",\" + y);\n    }\n    points = points.join(\" \");\n\n    const polyline = this.svgFactory.createElement(this.svgElementName);\n    polyline.setAttribute(\"points\", points);\n    // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n    // won't be possible to open/close the popup (note e.g. issue 11122).\n    polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n    polyline.setAttribute(\"stroke\", \"transparent\");\n    polyline.setAttribute(\"fill\", \"none\");\n\n    svg.appendChild(polyline);\n    this.container.append(svg);\n\n    // Create the popup ourselves so that we can bind it to the polyline\n    // instead of to the entire container (which is the default).\n    this._createPopup(this.container, polyline, data);\n\n    return this.container;\n  }\n}\n\nclass PolygonAnnotationElement extends PolylineAnnotationElement {\n  constructor(parameters) {\n    // Polygons are specific forms of polylines, so reuse their logic.\n    super(parameters);\n\n    this.containerClassName = \"polygonAnnotation\";\n    this.svgElementName = \"svg:polygon\";\n  }\n}\n\nclass CaretAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the caret annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof CaretAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"caretAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass InkAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n\n    this.containerClassName = \"inkAnnotation\";\n\n    // Use the polyline SVG element since it allows us to use coordinates\n    // directly and to draw both straight lines and curves.\n    this.svgElementName = \"svg:polyline\";\n  }\n\n  /**\n   * Render the ink annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof InkAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = this.containerClassName;\n\n    // Create an invisible polyline with the same points that acts as the\n    // trigger for the popup.\n    const data = this.data;\n    const width = data.rect[2] - data.rect[0];\n    const height = data.rect[3] - data.rect[1];\n    const svg = this.svgFactory.create(width, height);\n\n    for (const inkList of data.inkLists) {\n      // Convert the ink list to a single points string that the SVG\n      // polyline element expects (\"x1,y1 x2,y2 ...\"). PDF coordinates are\n      // calculated from a bottom left origin, so transform the polyline\n      // coordinates to a top left origin for the SVG element.\n      let points = [];\n      for (const coordinate of inkList) {\n        const x = coordinate.x - data.rect[0];\n        const y = data.rect[3] - coordinate.y;\n        points.push(`${x},${y}`);\n      }\n      points = points.join(\" \");\n\n      const polyline = this.svgFactory.createElement(this.svgElementName);\n      polyline.setAttribute(\"points\", points);\n      // Ensure that the 'stroke-width' is always non-zero, since otherwise it\n      // won't be possible to open/close the popup (note e.g. issue 11122).\n      polyline.setAttribute(\"stroke-width\", data.borderStyle.width || 1);\n      polyline.setAttribute(\"stroke\", \"transparent\");\n      polyline.setAttribute(\"fill\", \"none\");\n\n      // Create the popup ourselves so that we can bind it to the polyline\n      // instead of to the entire container (which is the default).\n      this._createPopup(this.container, polyline, data);\n\n      svg.appendChild(polyline);\n    }\n\n    this.container.append(svg);\n    return this.container;\n  }\n}\n\nclass HighlightAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the highlight annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof HighlightAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"highlightAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass UnderlineAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the underline annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof UnderlineAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"underlineAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass SquigglyAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the squiggly annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof SquigglyAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"squigglyAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StrikeOutAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the strikeout annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StrikeOutAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"strikeoutAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass StampAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    const isRenderable = !!(\n      parameters.data.hasPopup ||\n      parameters.data.title ||\n      parameters.data.contents\n    );\n    super(parameters, isRenderable, /* ignoreBorder = */ true);\n  }\n\n  /**\n   * Render the stamp annotation's HTML element in the empty container.\n   *\n   * @public\n   * @memberof StampAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"stampAnnotation\";\n\n    if (!this.data.hasPopup) {\n      this._createPopup(this.container, null, this.data);\n    }\n    return this.container;\n  }\n}\n\nclass FileAttachmentAnnotationElement extends AnnotationElement {\n  constructor(parameters) {\n    super(parameters, /* isRenderable = */ true);\n\n    const { filename, content } = this.data.file;\n    this.filename = getFilenameFromUrl(filename);\n    this.content = content;\n\n    if (this.linkService.eventBus) {\n      this.linkService.eventBus.dispatch(\"fileattachmentannotation\", {\n        source: this,\n        id: stringToPDFString(filename),\n        filename,\n        content,\n      });\n    }\n  }\n\n  /**\n   * Render the file attachment annotation's HTML element in the empty\n   * container.\n   *\n   * @public\n   * @memberof FileAttachmentAnnotationElement\n   * @returns {HTMLSectionElement}\n   */\n  render() {\n    this.container.className = \"fileAttachmentAnnotation\";\n\n    const trigger = document.createElement(\"div\");\n    trigger.style.height = this.container.style.height;\n    trigger.style.width = this.container.style.width;\n    trigger.addEventListener(\"dblclick\", this._download.bind(this));\n\n    if (!this.data.hasPopup && (this.data.title || this.data.contents)) {\n      this._createPopup(this.container, trigger, this.data);\n    }\n\n    this.container.appendChild(trigger);\n    return this.container;\n  }\n\n  /**\n   * Download the file attachment associated with this annotation.\n   *\n   * @private\n   * @memberof FileAttachmentAnnotationElement\n   */\n  _download() {\n    if (!this.downloadManager) {\n      warn(\"Download cannot be started due to unavailable download manager\");\n      return;\n    }\n    this.downloadManager.downloadData(this.content, this.filename, \"\");\n  }\n}\n\n/**\n * @typedef {Object} AnnotationLayerParameters\n * @property {PageViewport} viewport\n * @property {HTMLDivElement} div\n * @property {Array} annotations\n * @property {PDFPage} page\n * @property {IPDFLinkService} linkService\n * @property {DownloadManager} downloadManager\n * @property {string} [imageResourcesPath] - Path for image resources, mainly\n *   for annotation icons. Include trailing slash.\n * @property {boolean} renderInteractiveForms\n */\n\nclass AnnotationLayer {\n  /**\n   * Render a new annotation layer with all annotation elements.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static render(parameters) {\n    const sortedAnnotations = [],\n      popupAnnotations = [];\n    // Ensure that Popup annotations are handled last, since they're dependant\n    // upon the parent annotation having already been rendered (please refer to\n    // the `PopupAnnotationElement.render` method); fixes issue 11362.\n    for (const data of parameters.annotations) {\n      if (!data) {\n        continue;\n      }\n      if (data.annotationType === AnnotationType.POPUP) {\n        popupAnnotations.push(data);\n        continue;\n      }\n      sortedAnnotations.push(data);\n    }\n    if (popupAnnotations.length) {\n      sortedAnnotations.push(...popupAnnotations);\n    }\n\n    for (const data of sortedAnnotations) {\n      const element = AnnotationElementFactory.create({\n        data,\n        layer: parameters.div,\n        page: parameters.page,\n        viewport: parameters.viewport,\n        linkService: parameters.linkService,\n        downloadManager: parameters.downloadManager,\n        imageResourcesPath: parameters.imageResourcesPath || \"\",\n        renderInteractiveForms:\n          typeof parameters.renderInteractiveForms === \"boolean\"\n            ? parameters.renderInteractiveForms\n            : true,\n        svgFactory: new DOMSVGFactory(),\n        annotationStorage:\n          parameters.annotationStorage || new AnnotationStorage(),\n      });\n      if (element.isRenderable) {\n        parameters.div.appendChild(element.render());\n      }\n    }\n  }\n\n  /**\n   * Update the annotation elements on existing annotation layer.\n   *\n   * @public\n   * @param {AnnotationLayerParameters} parameters\n   * @memberof AnnotationLayer\n   */\n  static update(parameters) {\n    for (const data of parameters.annotations) {\n      const element = parameters.div.querySelector(\n        `[data-annotation-id=\"${data.id}\"]`\n      );\n      if (element) {\n        element.style.transform = `matrix(${parameters.viewport.transform.join(\n          \",\"\n        )})`;\n      }\n    }\n    parameters.div.removeAttribute(\"hidden\");\n  }\n}\n\nexport { AnnotationLayer };\n","/* Copyright 2015 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  AbortException,\n  createPromiseCapability,\n  Util,\n} from \"../shared/util.js\";\n\n/**\n * Text layer render parameters.\n *\n * @typedef {Object} TextLayerRenderParameters\n * @property {import(\"./api\").TextContent} [textContent] - Text content to\n *   render (the object is returned by the page's `getTextContent` method).\n * @property {ReadableStream} [textContentStream] - Text content stream to\n *   render (the stream is returned by the page's `streamTextContent` method).\n * @property {HTMLElement} container - HTML element that will contain text runs.\n * @property {import(\"./display_utils\").PageViewport} viewport - The target\n *   viewport to properly layout the text runs.\n * @property {Array<HTMLElement>} [textDivs] - HTML elements that are correspond\n *   to the text items of the textContent input. This is output and shall be\n *   initially be set to empty array.\n * @property {Array<string>} [textContentItemsStr] - Strings that correspond to\n *    the `str` property of the text items of textContent input. This is output\n *   and shall be initially be set to empty array.\n * @property {number} [timeout] - Delay in milliseconds before rendering of the\n *   text runs occurs.\n * @property {boolean} [enhanceTextSelection] - Whether to turn on the text\n *   selection enhancement.\n */\n\n/**\n * @typedef {Object} TextLayerRenderTask\n * @property {Promise<void>} promise\n * @property {() => void} cancel\n * @property {(expandDivs: boolean) => void} expandTextDivs\n */\n\n/**\n * @type {(renderParameters: TextLayerRenderParameters) => TextLayerRenderTask}\n */\nvar renderTextLayer = (function renderTextLayerClosure() {\n  var MAX_TEXT_DIVS_TO_RENDER = 100000;\n\n  var NonWhitespaceRegexp = /\\S/;\n\n  function isAllWhitespace(str) {\n    return !NonWhitespaceRegexp.test(str);\n  }\n\n  function appendText(task, geom, styles) {\n    // Initialize all used properties to keep the caches monomorphic.\n    var textDiv = document.createElement(\"span\");\n    var textDivProperties = {\n      angle: 0,\n      canvasWidth: 0,\n      isWhitespace: false,\n      originalTransform: null,\n      paddingBottom: 0,\n      paddingLeft: 0,\n      paddingRight: 0,\n      paddingTop: 0,\n      scale: 1,\n    };\n\n    task._textDivs.push(textDiv);\n    if (isAllWhitespace(geom.str)) {\n      textDivProperties.isWhitespace = true;\n      task._textDivProperties.set(textDiv, textDivProperties);\n      return;\n    }\n\n    var tx = Util.transform(task._viewport.transform, geom.transform);\n    var angle = Math.atan2(tx[1], tx[0]);\n    var style = styles[geom.fontName];\n    if (style.vertical) {\n      angle += Math.PI / 2;\n    }\n    var fontHeight = Math.sqrt(tx[2] * tx[2] + tx[3] * tx[3]);\n    var fontAscent = fontHeight;\n    if (style.ascent) {\n      fontAscent = style.ascent * fontAscent;\n    } else if (style.descent) {\n      fontAscent = (1 + style.descent) * fontAscent;\n    }\n\n    let left, top;\n    if (angle === 0) {\n      left = tx[4];\n      top = tx[5] - fontAscent;\n    } else {\n      left = tx[4] + fontAscent * Math.sin(angle);\n      top = tx[5] - fontAscent * Math.cos(angle);\n    }\n    // Setting the style properties individually, rather than all at once,\n    // should be OK since the `textDiv` isn't appended to the document yet.\n    textDiv.style.left = `${left}px`;\n    textDiv.style.top = `${top}px`;\n    textDiv.style.fontSize = `${fontHeight}px`;\n    textDiv.style.fontFamily = style.fontFamily;\n\n    textDiv.textContent = geom.str;\n    // `fontName` is only used by the FontInspector, and we only use `dataset`\n    // here to make the font name available in the debugger.\n    if (task._fontInspectorEnabled) {\n      textDiv.dataset.fontName = geom.fontName;\n    }\n    if (angle !== 0) {\n      textDivProperties.angle = angle * (180 / Math.PI);\n    }\n    // We don't bother scaling single-char text divs, because it has very\n    // little effect on text highlighting. This makes scrolling on docs with\n    // lots of such divs a lot faster.\n    let shouldScaleText = false;\n    if (geom.str.length > 1) {\n      shouldScaleText = true;\n    } else if (geom.transform[0] !== geom.transform[3]) {\n      const absScaleX = Math.abs(geom.transform[0]),\n        absScaleY = Math.abs(geom.transform[3]);\n      // When the horizontal/vertical scaling differs significantly, also scale\n      // even single-char text to improve highlighting (fixes issue11713.pdf).\n      if (\n        absScaleX !== absScaleY &&\n        Math.max(absScaleX, absScaleY) / Math.min(absScaleX, absScaleY) > 1.5\n      ) {\n        shouldScaleText = true;\n      }\n    }\n    if (shouldScaleText) {\n      if (style.vertical) {\n        textDivProperties.canvasWidth = geom.height * task._viewport.scale;\n      } else {\n        textDivProperties.canvasWidth = geom.width * task._viewport.scale;\n      }\n    }\n    task._textDivProperties.set(textDiv, textDivProperties);\n    if (task._textContentStream) {\n      task._layoutText(textDiv);\n    }\n\n    if (task._enhanceTextSelection) {\n      var angleCos = 1,\n        angleSin = 0;\n      if (angle !== 0) {\n        angleCos = Math.cos(angle);\n        angleSin = Math.sin(angle);\n      }\n      var divWidth =\n        (style.vertical ? geom.height : geom.width) * task._viewport.scale;\n      var divHeight = fontHeight;\n\n      var m, b;\n      if (angle !== 0) {\n        m = [angleCos, angleSin, -angleSin, angleCos, left, top];\n        b = Util.getAxialAlignedBoundingBox([0, 0, divWidth, divHeight], m);\n      } else {\n        b = [left, top, left + divWidth, top + divHeight];\n      }\n\n      task._bounds.push({\n        left: b[0],\n        top: b[1],\n        right: b[2],\n        bottom: b[3],\n        div: textDiv,\n        size: [divWidth, divHeight],\n        m,\n      });\n    }\n  }\n\n  function render(task) {\n    if (task._canceled) {\n      return;\n    }\n    var textDivs = task._textDivs;\n    var capability = task._capability;\n    var textDivsLength = textDivs.length;\n\n    // No point in rendering many divs as it would make the browser\n    // unusable even after the divs are rendered.\n    if (textDivsLength > MAX_TEXT_DIVS_TO_RENDER) {\n      task._renderingDone = true;\n      capability.resolve();\n      return;\n    }\n\n    if (!task._textContentStream) {\n      for (var i = 0; i < textDivsLength; i++) {\n        task._layoutText(textDivs[i]);\n      }\n    }\n\n    task._renderingDone = true;\n    capability.resolve();\n  }\n\n  function findPositiveMin(ts, offset, count) {\n    let result = 0;\n    for (let i = 0; i < count; i++) {\n      const t = ts[offset++];\n      if (t > 0) {\n        result = result ? Math.min(t, result) : t;\n      }\n    }\n    return result;\n  }\n\n  function expand(task) {\n    var bounds = task._bounds;\n    var viewport = task._viewport;\n\n    var expanded = expandBounds(viewport.width, viewport.height, bounds);\n    for (var i = 0; i < expanded.length; i++) {\n      var div = bounds[i].div;\n      var divProperties = task._textDivProperties.get(div);\n      if (divProperties.angle === 0) {\n        divProperties.paddingLeft = bounds[i].left - expanded[i].left;\n        divProperties.paddingTop = bounds[i].top - expanded[i].top;\n        divProperties.paddingRight = expanded[i].right - bounds[i].right;\n        divProperties.paddingBottom = expanded[i].bottom - bounds[i].bottom;\n        task._textDivProperties.set(div, divProperties);\n        continue;\n      }\n      // Box is rotated -- trying to find padding so rotated div will not\n      // exceed its expanded bounds.\n      var e = expanded[i],\n        b = bounds[i];\n      var m = b.m,\n        c = m[0],\n        s = m[1];\n      // Finding intersections with expanded box.\n      var points = [[0, 0], [0, b.size[1]], [b.size[0], 0], b.size];\n      var ts = new Float64Array(64);\n      points.forEach(function (p, j) {\n        var t = Util.applyTransform(p, m);\n        ts[j + 0] = c && (e.left - t[0]) / c;\n        ts[j + 4] = s && (e.top - t[1]) / s;\n        ts[j + 8] = c && (e.right - t[0]) / c;\n        ts[j + 12] = s && (e.bottom - t[1]) / s;\n\n        ts[j + 16] = s && (e.left - t[0]) / -s;\n        ts[j + 20] = c && (e.top - t[1]) / c;\n        ts[j + 24] = s && (e.right - t[0]) / -s;\n        ts[j + 28] = c && (e.bottom - t[1]) / c;\n\n        ts[j + 32] = c && (e.left - t[0]) / -c;\n        ts[j + 36] = s && (e.top - t[1]) / -s;\n        ts[j + 40] = c && (e.right - t[0]) / -c;\n        ts[j + 44] = s && (e.bottom - t[1]) / -s;\n\n        ts[j + 48] = s && (e.left - t[0]) / s;\n        ts[j + 52] = c && (e.top - t[1]) / -c;\n        ts[j + 56] = s && (e.right - t[0]) / s;\n        ts[j + 60] = c && (e.bottom - t[1]) / -c;\n      });\n      // Not based on math, but to simplify calculations, using cos and sin\n      // absolute values to not exceed the box (it can but insignificantly).\n      var boxScale = 1 + Math.min(Math.abs(c), Math.abs(s));\n      divProperties.paddingLeft = findPositiveMin(ts, 32, 16) / boxScale;\n      divProperties.paddingTop = findPositiveMin(ts, 48, 16) / boxScale;\n      divProperties.paddingRight = findPositiveMin(ts, 0, 16) / boxScale;\n      divProperties.paddingBottom = findPositiveMin(ts, 16, 16) / boxScale;\n      task._textDivProperties.set(div, divProperties);\n    }\n  }\n\n  function expandBounds(width, height, boxes) {\n    var bounds = boxes.map(function (box, i) {\n      return {\n        x1: box.left,\n        y1: box.top,\n        x2: box.right,\n        y2: box.bottom,\n        index: i,\n        x1New: undefined,\n        x2New: undefined,\n      };\n    });\n    expandBoundsLTR(width, bounds);\n    var expanded = new Array(boxes.length);\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i] = {\n        left: b.x1New,\n        top: 0,\n        right: b.x2New,\n        bottom: 0,\n      };\n    });\n\n    // Rotating on 90 degrees and extending extended boxes. Reusing the bounds\n    // array and objects.\n    boxes.map(function (box, i) {\n      var e = expanded[i],\n        b = bounds[i];\n      b.x1 = box.top;\n      b.y1 = width - e.right;\n      b.x2 = box.bottom;\n      b.y2 = width - e.left;\n      b.index = i;\n      b.x1New = undefined;\n      b.x2New = undefined;\n    });\n    expandBoundsLTR(height, bounds);\n\n    bounds.forEach(function (b) {\n      var i = b.index;\n      expanded[i].top = b.x1New;\n      expanded[i].bottom = b.x2New;\n    });\n    return expanded;\n  }\n\n  function expandBoundsLTR(width, bounds) {\n    // Sorting by x1 coordinate and walk by the bounds in the same order.\n    bounds.sort(function (a, b) {\n      return a.x1 - b.x1 || a.index - b.index;\n    });\n\n    // First we see on the horizon is a fake boundary.\n    var fakeBoundary = {\n      x1: -Infinity,\n      y1: -Infinity,\n      x2: 0,\n      y2: Infinity,\n      index: -1,\n      x1New: 0,\n      x2New: 0,\n    };\n    var horizon = [\n      {\n        start: -Infinity,\n        end: Infinity,\n        boundary: fakeBoundary,\n      },\n    ];\n\n    bounds.forEach(function (boundary) {\n      // Searching for the affected part of horizon.\n      // TODO red-black tree or simple binary search\n      var i = 0;\n      while (i < horizon.length && horizon[i].end <= boundary.y1) {\n        i++;\n      }\n      var j = horizon.length - 1;\n      while (j >= 0 && horizon[j].start >= boundary.y2) {\n        j--;\n      }\n\n      var horizonPart, affectedBoundary;\n      var q,\n        k,\n        maxXNew = -Infinity;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        var xNew;\n        if (affectedBoundary.x2 > boundary.x1) {\n          // In the middle of the previous element, new x shall be at the\n          // boundary start. Extending if further if the affected boundary\n          // placed on top of the current one.\n          xNew =\n            affectedBoundary.index > boundary.index\n              ? affectedBoundary.x1New\n              : boundary.x1;\n        } else if (affectedBoundary.x2New === undefined) {\n          // We have some space in between, new x in middle will be a fair\n          // choice.\n          xNew = (affectedBoundary.x2 + boundary.x1) / 2;\n        } else {\n          // Affected boundary has x2new set, using it as new x.\n          xNew = affectedBoundary.x2New;\n        }\n        if (xNew > maxXNew) {\n          maxXNew = xNew;\n        }\n      }\n\n      // Set new x1 for current boundary.\n      boundary.x1New = maxXNew;\n\n      // Adjusts new x2 for the affected boundaries.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New === undefined) {\n          // Was not set yet, choosing new x if possible.\n          if (affectedBoundary.x2 > boundary.x1) {\n            // Current and affected boundaries intersect. If affected boundary\n            // is placed on top of the current, shrinking the affected.\n            if (affectedBoundary.index > boundary.index) {\n              affectedBoundary.x2New = affectedBoundary.x2;\n            }\n          } else {\n            affectedBoundary.x2New = maxXNew;\n          }\n        } else if (affectedBoundary.x2New > maxXNew) {\n          // Affected boundary is touching new x, pushing it back.\n          affectedBoundary.x2New = Math.max(maxXNew, affectedBoundary.x2);\n        }\n      }\n\n      // Fixing the horizon.\n      var changedHorizon = [],\n        lastBoundary = null;\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        // Checking which boundary will be visible.\n        var useBoundary =\n          affectedBoundary.x2 > boundary.x2 ? affectedBoundary : boundary;\n        if (lastBoundary === useBoundary) {\n          // Merging with previous.\n          changedHorizon[changedHorizon.length - 1].end = horizonPart.end;\n        } else {\n          changedHorizon.push({\n            start: horizonPart.start,\n            end: horizonPart.end,\n            boundary: useBoundary,\n          });\n          lastBoundary = useBoundary;\n        }\n      }\n      if (horizon[i].start < boundary.y1) {\n        changedHorizon[0].start = boundary.y1;\n        changedHorizon.unshift({\n          start: horizon[i].start,\n          end: boundary.y1,\n          boundary: horizon[i].boundary,\n        });\n      }\n      if (boundary.y2 < horizon[j].end) {\n        changedHorizon[changedHorizon.length - 1].end = boundary.y2;\n        changedHorizon.push({\n          start: boundary.y2,\n          end: horizon[j].end,\n          boundary: horizon[j].boundary,\n        });\n      }\n\n      // Set x2 new of boundary that is no longer visible (see overlapping case\n      // above).\n      // TODO more efficient, e.g. via reference counting.\n      for (q = i; q <= j; q++) {\n        horizonPart = horizon[q];\n        affectedBoundary = horizonPart.boundary;\n        if (affectedBoundary.x2New !== undefined) {\n          continue;\n        }\n        var used = false;\n        for (\n          k = i - 1;\n          !used && k >= 0 && horizon[k].start >= affectedBoundary.y1;\n          k--\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (\n          k = j + 1;\n          !used && k < horizon.length && horizon[k].end <= affectedBoundary.y2;\n          k++\n        ) {\n          used = horizon[k].boundary === affectedBoundary;\n        }\n        for (k = 0; !used && k < changedHorizon.length; k++) {\n          used = changedHorizon[k].boundary === affectedBoundary;\n        }\n        if (!used) {\n          affectedBoundary.x2New = maxXNew;\n        }\n      }\n\n      Array.prototype.splice.apply(\n        horizon,\n        [i, j - i + 1].concat(changedHorizon)\n      );\n    });\n\n    // Set new x2 for all unset boundaries.\n    horizon.forEach(function (horizonPart) {\n      var affectedBoundary = horizonPart.boundary;\n      if (affectedBoundary.x2New === undefined) {\n        affectedBoundary.x2New = Math.max(width, affectedBoundary.x2);\n      }\n    });\n  }\n\n  /**\n   * Text layer rendering task.\n   *\n   * @param {TextContent} textContent\n   * @param {HTMLElement} container\n   * @param {PageViewport} viewport\n   * @param {Array} textDivs\n   * @param {boolean} enhanceTextSelection\n   * @private\n   */\n  function TextLayerRenderTask({\n    textContent,\n    textContentStream,\n    container,\n    viewport,\n    textDivs,\n    textContentItemsStr,\n    enhanceTextSelection,\n  }) {\n    this._textContent = textContent;\n    this._textContentStream = textContentStream;\n    this._container = container;\n    this._document = container.ownerDocument;\n    this._viewport = viewport;\n    this._textDivs = textDivs || [];\n    this._textContentItemsStr = textContentItemsStr || [];\n    this._enhanceTextSelection = !!enhanceTextSelection;\n    this._fontInspectorEnabled = !!(\n      globalThis.FontInspector && globalThis.FontInspector.enabled\n    );\n\n    this._reader = null;\n    this._layoutTextLastFontSize = null;\n    this._layoutTextLastFontFamily = null;\n    this._layoutTextCtx = null;\n    this._textDivProperties = new WeakMap();\n    this._renderingDone = false;\n    this._canceled = false;\n    this._capability = createPromiseCapability();\n    this._renderTimer = null;\n    this._bounds = [];\n\n    // Always clean-up the temporary canvas once rendering is no longer pending.\n    this._capability.promise\n      .finally(() => {\n        if (this._layoutTextCtx) {\n          // Zeroing the width and height cause Firefox to release graphics\n          // resources immediately, which can greatly reduce memory consumption.\n          this._layoutTextCtx.canvas.width = 0;\n          this._layoutTextCtx.canvas.height = 0;\n          this._layoutTextCtx = null;\n        }\n      })\n      .catch(() => {\n        /* Avoid \"Uncaught promise\" messages in the console. */\n      });\n  }\n  TextLayerRenderTask.prototype = {\n    get promise() {\n      return this._capability.promise;\n    },\n\n    cancel: function TextLayer_cancel() {\n      this._canceled = true;\n      if (this._reader) {\n        this._reader.cancel(new AbortException(\"TextLayer task cancelled.\"));\n        this._reader = null;\n      }\n      if (this._renderTimer !== null) {\n        clearTimeout(this._renderTimer);\n        this._renderTimer = null;\n      }\n      this._capability.reject(new Error(\"TextLayer task cancelled.\"));\n    },\n\n    _processItems(items, styleCache) {\n      for (let i = 0, len = items.length; i < len; i++) {\n        this._textContentItemsStr.push(items[i].str);\n        appendText(this, items[i], styleCache);\n      }\n    },\n\n    _layoutText(textDiv) {\n      const textDivProperties = this._textDivProperties.get(textDiv);\n      if (textDivProperties.isWhitespace) {\n        return;\n      }\n\n      let transform = \"\";\n      if (textDivProperties.canvasWidth !== 0) {\n        const { fontSize, fontFamily } = textDiv.style;\n\n        // Only build font string and set to context if different from last.\n        if (\n          fontSize !== this._layoutTextLastFontSize ||\n          fontFamily !== this._layoutTextLastFontFamily\n        ) {\n          this._layoutTextCtx.font = `${fontSize} ${fontFamily}`;\n          this._layoutTextLastFontSize = fontSize;\n          this._layoutTextLastFontFamily = fontFamily;\n        }\n        // Only measure the width for multi-char text divs, see `appendText`.\n        const { width } = this._layoutTextCtx.measureText(textDiv.textContent);\n\n        if (width > 0) {\n          textDivProperties.scale = textDivProperties.canvasWidth / width;\n          transform = `scaleX(${textDivProperties.scale})`;\n        }\n      }\n      if (textDivProperties.angle !== 0) {\n        transform = `rotate(${textDivProperties.angle}deg) ${transform}`;\n      }\n      if (transform.length > 0) {\n        if (this._enhanceTextSelection) {\n          textDivProperties.originalTransform = transform;\n        }\n        textDiv.style.transform = transform;\n      }\n      this._textDivProperties.set(textDiv, textDivProperties);\n      this._container.appendChild(textDiv);\n    },\n\n    _render: function TextLayer_render(timeout) {\n      const capability = createPromiseCapability();\n      let styleCache = Object.create(null);\n\n      // The temporary canvas is used to measure text length in the DOM.\n      const canvas = this._document.createElement(\"canvas\");\n      if (\n        typeof PDFJSDev === \"undefined\" ||\n        PDFJSDev.test(\"MOZCENTRAL || GENERIC\")\n      ) {\n        canvas.mozOpaque = true;\n      }\n      this._layoutTextCtx = canvas.getContext(\"2d\", { alpha: false });\n\n      if (this._textContent) {\n        const textItems = this._textContent.items;\n        const textStyles = this._textContent.styles;\n        this._processItems(textItems, textStyles);\n        capability.resolve();\n      } else if (this._textContentStream) {\n        const pump = () => {\n          this._reader.read().then(({ value, done }) => {\n            if (done) {\n              capability.resolve();\n              return;\n            }\n\n            Object.assign(styleCache, value.styles);\n            this._processItems(value.items, styleCache);\n            pump();\n          }, capability.reject);\n        };\n\n        this._reader = this._textContentStream.getReader();\n        pump();\n      } else {\n        throw new Error(\n          'Neither \"textContent\" nor \"textContentStream\"' +\n            \" parameters specified.\"\n        );\n      }\n\n      capability.promise.then(() => {\n        styleCache = null;\n        if (!timeout) {\n          // Render right away\n          render(this);\n        } else {\n          // Schedule\n          this._renderTimer = setTimeout(() => {\n            render(this);\n            this._renderTimer = null;\n          }, timeout);\n        }\n      }, this._capability.reject);\n    },\n\n    expandTextDivs: function TextLayer_expandTextDivs(expandDivs) {\n      if (!this._enhanceTextSelection || !this._renderingDone) {\n        return;\n      }\n      if (this._bounds !== null) {\n        expand(this);\n        this._bounds = null;\n      }\n      const transformBuf = [],\n        paddingBuf = [];\n\n      for (var i = 0, ii = this._textDivs.length; i < ii; i++) {\n        const div = this._textDivs[i];\n        const divProps = this._textDivProperties.get(div);\n\n        if (divProps.isWhitespace) {\n          continue;\n        }\n        if (expandDivs) {\n          transformBuf.length = 0;\n          paddingBuf.length = 0;\n\n          if (divProps.originalTransform) {\n            transformBuf.push(divProps.originalTransform);\n          }\n          if (divProps.paddingTop > 0) {\n            paddingBuf.push(`${divProps.paddingTop}px`);\n            transformBuf.push(`translateY(${-divProps.paddingTop}px)`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingRight > 0) {\n            paddingBuf.push(`${divProps.paddingRight / divProps.scale}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingBottom > 0) {\n            paddingBuf.push(`${divProps.paddingBottom}px`);\n          } else {\n            paddingBuf.push(0);\n          }\n          if (divProps.paddingLeft > 0) {\n            paddingBuf.push(`${divProps.paddingLeft / divProps.scale}px`);\n            transformBuf.push(\n              `translateX(${-divProps.paddingLeft / divProps.scale}px)`\n            );\n          } else {\n            paddingBuf.push(0);\n          }\n\n          div.style.padding = paddingBuf.join(\" \");\n          if (transformBuf.length) {\n            div.style.transform = transformBuf.join(\" \");\n          }\n        } else {\n          div.style.padding = null;\n          div.style.transform = divProps.originalTransform;\n        }\n      }\n    },\n  };\n\n  // eslint-disable-next-line no-shadow\n  function renderTextLayer(renderParameters) {\n    var task = new TextLayerRenderTask({\n      textContent: renderParameters.textContent,\n      textContentStream: renderParameters.textContentStream,\n      container: renderParameters.container,\n      viewport: renderParameters.viewport,\n      textDivs: renderParameters.textDivs,\n      textContentItemsStr: renderParameters.textContentItemsStr,\n      enhanceTextSelection: renderParameters.enhanceTextSelection,\n    });\n    task._render(renderParameters.timeout);\n    return task;\n  }\n\n  return renderTextLayer;\n})();\n\nexport { renderTextLayer };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n/* eslint no-var: error */\n\nimport {\n  createObjectURL,\n  FONT_IDENTITY_MATRIX,\n  IDENTITY_MATRIX,\n  ImageKind,\n  isNum,\n  OPS,\n  TextRenderingMode,\n  Util,\n  warn,\n} from \"../shared/util.js\";\nimport { DOMSVGFactory } from \"./display_utils.js\";\nimport { isNodeJS } from \"../shared/is_node.js\";\n\n/** @type {any} */\nlet SVGGraphics = function () {\n  throw new Error(\"Not implemented: SVGGraphics\");\n};\n\nif (typeof PDFJSDev === \"undefined\" || PDFJSDev.test(\"GENERIC\")) {\n  const SVG_DEFAULTS = {\n    fontStyle: \"normal\",\n    fontWeight: \"normal\",\n    fillColor: \"#000000\",\n  };\n  const XML_NS = \"http://www.w3.org/XML/1998/namespace\";\n  const XLINK_NS = \"http://www.w3.org/1999/xlink\";\n  const LINE_CAP_STYLES = [\"butt\", \"round\", \"square\"];\n  const LINE_JOIN_STYLES = [\"miter\", \"round\", \"bevel\"];\n\n  const convertImgDataToPng = (function () {\n    const PNG_HEADER = new Uint8Array([\n      0x89,\n      0x50,\n      0x4e,\n      0x47,\n      0x0d,\n      0x0a,\n      0x1a,\n      0x0a,\n    ]);\n    const CHUNK_WRAPPER_SIZE = 12;\n\n    const crcTable = new Int32Array(256);\n    for (let i = 0; i < 256; i++) {\n      let c = i;\n      for (let h = 0; h < 8; h++) {\n        if (c & 1) {\n          c = 0xedb88320 ^ ((c >> 1) & 0x7fffffff);\n        } else {\n          c = (c >> 1) & 0x7fffffff;\n        }\n      }\n      crcTable[i] = c;\n    }\n\n    function crc32(data, start, end) {\n      let crc = -1;\n      for (let i = start; i < end; i++) {\n        const a = (crc ^ data[i]) & 0xff;\n        const b = crcTable[a];\n        crc = (crc >>> 8) ^ b;\n      }\n      return crc ^ -1;\n    }\n\n    function writePngChunk(type, body, data, offset) {\n      let p = offset;\n      const len = body.length;\n\n      data[p] = (len >> 24) & 0xff;\n      data[p + 1] = (len >> 16) & 0xff;\n      data[p + 2] = (len >> 8) & 0xff;\n      data[p + 3] = len & 0xff;\n      p += 4;\n\n      data[p] = type.charCodeAt(0) & 0xff;\n      data[p + 1] = type.charCodeAt(1) & 0xff;\n      data[p + 2] = type.charCodeAt(2) & 0xff;\n      data[p + 3] = type.charCodeAt(3) & 0xff;\n      p += 4;\n\n      data.set(body, p);\n      p += body.length;\n\n      const crc = crc32(data, offset + 4, p);\n      data[p] = (crc >> 24) & 0xff;\n      data[p + 1] = (crc >> 16) & 0xff;\n      data[p + 2] = (crc >> 8) & 0xff;\n      data[p + 3] = crc & 0xff;\n    }\n\n    function adler32(data, start, end) {\n      let a = 1;\n      let b = 0;\n      for (let i = start; i < end; ++i) {\n        a = (a + (data[i] & 0xff)) % 65521;\n        b = (b + a) % 65521;\n      }\n      return (b << 16) | a;\n    }\n\n    /**\n     * @param {Uint8Array} literals The input data.\n     * @returns {Uint8Array} The DEFLATE-compressed data stream in zlib format.\n     *   This is the required format for compressed streams in the PNG format:\n     *   http://www.libpng.org/pub/png/spec/1.2/PNG-Compression.html\n     */\n    function deflateSync(literals) {\n      if (!isNodeJS) {\n        // zlib is certainly not available outside of Node.js. We can either use\n        // the pako library for client-side DEFLATE compression, or use the\n        // canvas API of the browser to obtain a more optimal PNG file.\n        return deflateSyncUncompressed(literals);\n      }\n      try {\n        // NOTE: This implementation is far from perfect, but already way better\n        // than not applying any compression.\n        //\n        // A better algorithm will try to choose a good predictor/filter and\n        // then choose a suitable zlib compression strategy (e.g. 3,Z_RLE).\n        //\n        // Node v0.11.12 zlib.deflateSync is introduced (and returns a Buffer).\n        // Node v3.0.0   Buffer inherits from Uint8Array.\n        // Node v8.0.0   zlib.deflateSync accepts Uint8Array as input.\n        let input;\n        // eslint-disable-next-line no-undef\n        if (parseInt(process.versions.node) >= 8) {\n          input = literals;\n        } else {\n          // eslint-disable-next-line no-undef\n          input = Buffer.from(literals);\n        }\n        const output = __non_webpack_require__(\"zlib\").deflateSync(input, {\n          level: 9,\n        });\n        return output instanceof Uint8Array ? output : new Uint8Array(output);\n      } catch (e) {\n        warn(\n          \"Not compressing PNG because zlib.deflateSync is unavailable: \" + e\n        );\n      }\n\n      return deflateSyncUncompressed(literals);\n    }\n\n    // An implementation of DEFLATE with compression level 0 (Z_NO_COMPRESSION).\n    function deflateSyncUncompressed(literals) {\n      let len = literals.length;\n      const maxBlockLength = 0xffff;\n\n      const deflateBlocks = Math.ceil(len / maxBlockLength);\n      const idat = new Uint8Array(2 + len + deflateBlocks * 5 + 4);\n      let pi = 0;\n      idat[pi++] = 0x78; // compression method and flags\n      idat[pi++] = 0x9c; // flags\n\n      let pos = 0;\n      while (len > maxBlockLength) {\n        // writing non-final DEFLATE blocks type 0 and length of 65535\n        idat[pi++] = 0x00;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0xff;\n        idat[pi++] = 0x00;\n        idat[pi++] = 0x00;\n        idat.set(literals.subarray(pos, pos + maxBlockLength), pi);\n        pi += maxBlockLength;\n        pos += maxBlockLength;\n        len -= maxBlockLength;\n      }\n\n      // writing non-final DEFLATE blocks type 0\n      idat[pi++] = 0x01;\n      idat[pi++] = len & 0xff;\n      idat[pi++] = (len >> 8) & 0xff;\n      idat[pi++] = ~len & 0xffff & 0xff;\n      idat[pi++] = ((~len & 0xffff) >> 8) & 0xff;\n      idat.set(literals.subarray(pos), pi);\n      pi += literals.length - pos;\n\n      const adler = adler32(literals, 0, literals.length); // checksum\n      idat[pi++] = (adler >> 24) & 0xff;\n      idat[pi++] = (adler >> 16) & 0xff;\n      idat[pi++] = (adler >> 8) & 0xff;\n      idat[pi++] = adler & 0xff;\n      return idat;\n    }\n\n    function encode(imgData, kind, forceDataSchema, isMask) {\n      const width = imgData.width;\n      const height = imgData.height;\n      let bitDepth, colorType, lineSize;\n      const bytes = imgData.data;\n\n      switch (kind) {\n        case ImageKind.GRAYSCALE_1BPP:\n          colorType = 0;\n          bitDepth = 1;\n          lineSize = (width + 7) >> 3;\n          break;\n        case ImageKind.RGB_24BPP:\n          colorType = 2;\n          bitDepth = 8;\n          lineSize = width * 3;\n          break;\n        case ImageKind.RGBA_32BPP:\n          colorType = 6;\n          bitDepth = 8;\n          lineSize = width * 4;\n          break;\n        default:\n          throw new Error(\"invalid format\");\n      }\n\n      // prefix every row with predictor 0\n      const literals = new Uint8Array((1 + lineSize) * height);\n      let offsetLiterals = 0,\n        offsetBytes = 0;\n      for (let y = 0; y < height; ++y) {\n        literals[offsetLiterals++] = 0; // no prediction\n        literals.set(\n          bytes.subarray(offsetBytes, offsetBytes + lineSize),\n          offsetLiterals\n        );\n        offsetBytes += lineSize;\n        offsetLiterals += lineSize;\n      }\n\n      if (kind === ImageKind.GRAYSCALE_1BPP && isMask) {\n        // inverting for image masks\n        offsetLiterals = 0;\n        for (let y = 0; y < height; y++) {\n          offsetLiterals++; // skipping predictor\n          for (let i = 0; i < lineSize; i++) {\n            literals[offsetLiterals++] ^= 0xff;\n          }\n        }\n      }\n\n      const ihdr = new Uint8Array([\n        (width >> 24) & 0xff,\n        (width >> 16) & 0xff,\n        (width >> 8) & 0xff,\n        width & 0xff,\n        (height >> 24) & 0xff,\n        (height >> 16) & 0xff,\n        (height >> 8) & 0xff,\n        height & 0xff,\n        bitDepth, // bit depth\n        colorType, // color type\n        0x00, // compression method\n        0x00, // filter method\n        0x00, // interlace method\n      ]);\n      const idat = deflateSync(literals);\n\n      // PNG consists of: header, IHDR+data, IDAT+data, and IEND.\n      const pngLength =\n        PNG_HEADER.length + CHUNK_WRAPPER_SIZE * 3 + ihdr.length + idat.length;\n      const data = new Uint8Array(pngLength);\n      let offset = 0;\n      data.set(PNG_HEADER, offset);\n      offset += PNG_HEADER.length;\n      writePngChunk(\"IHDR\", ihdr, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + ihdr.length;\n      writePngChunk(\"IDATA\", idat, data, offset);\n      offset += CHUNK_WRAPPER_SIZE + idat.length;\n      writePngChunk(\"IEND\", new Uint8Array(0), data, offset);\n\n      return createObjectURL(data, \"image/png\", forceDataSchema);\n    }\n\n    // eslint-disable-next-line no-shadow\n    return function convertImgDataToPng(imgData, forceDataSchema, isMask) {\n      const kind =\n        imgData.kind === undefined ? ImageKind.GRAYSCALE_1BPP : imgData.kind;\n      return encode(imgData, kind, forceDataSchema, isMask);\n    };\n  })();\n\n  class SVGExtraState {\n    constructor() {\n      this.fontSizeScale = 1;\n      this.fontWeight = SVG_DEFAULTS.fontWeight;\n      this.fontSize = 0;\n\n      this.textMatrix = IDENTITY_MATRIX;\n      this.fontMatrix = FONT_IDENTITY_MATRIX;\n      this.leading = 0;\n      this.textRenderingMode = TextRenderingMode.FILL;\n      this.textMatrixScale = 1;\n\n      // Current point (in user coordinates)\n      this.x = 0;\n      this.y = 0;\n\n      // Start of text line (in text coordinates)\n      this.lineX = 0;\n      this.lineY = 0;\n\n      // Character and word spacing\n      this.charSpacing = 0;\n      this.wordSpacing = 0;\n      this.textHScale = 1;\n      this.textRise = 0;\n\n      // Default foreground and background colors\n      this.fillColor = SVG_DEFAULTS.fillColor;\n      this.strokeColor = \"#000000\";\n\n      this.fillAlpha = 1;\n      this.strokeAlpha = 1;\n      this.lineWidth = 1;\n      this.lineJoin = \"\";\n      this.lineCap = \"\";\n      this.miterLimit = 0;\n\n      this.dashArray = [];\n      this.dashPhase = 0;\n\n      this.dependencies = [];\n\n      // Clipping\n      this.activeClipUrl = null;\n      this.clipGroup = null;\n\n      this.maskId = \"\";\n    }\n\n    clone() {\n      return Object.create(this);\n    }\n\n    setCurrentPoint(x, y) {\n      this.x = x;\n      this.y = y;\n    }\n  }\n\n  // eslint-disable-next-line no-inner-declarations\n  function opListToTree(opList) {\n    let opTree = [];\n    const tmp = [];\n\n    for (const opListElement of opList) {\n      if (opListElement.fn === \"save\") {\n        opTree.push({ fnId: 92, fn: \"group\", items: [] });\n        tmp.push(opTree);\n        opTree = opTree[opTree.length - 1].items;\n        continue;\n      }\n\n      if (opListElement.fn === \"restore\") {\n        opTree = tmp.pop();\n      } else {\n        opTree.push(opListElement);\n      }\n    }\n    return opTree;\n  }\n\n  /**\n   * Format a float number as a string.\n   *\n   * @param value {number} - The float number to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pf(value) {\n    if (Number.isInteger(value)) {\n      return value.toString();\n    }\n    const s = value.toFixed(10);\n    let i = s.length - 1;\n    if (s[i] !== \"0\") {\n      return s;\n    }\n\n    // Remove trailing zeros.\n    do {\n      i--;\n    } while (s[i] === \"0\");\n    return s.substring(0, s[i] === \".\" ? i : i + 1);\n  }\n\n  /**\n   * Format a transform matrix as a string. The standard rotation, scale and\n   * translation matrices are replaced by their shorter forms, and for\n   * identity matrices an empty string is returned to save memory.\n   *\n   * @param m {Array} - The transform matrix to format.\n   * @returns {string}\n   */\n  // eslint-disable-next-line no-inner-declarations\n  function pm(m) {\n    if (m[4] === 0 && m[5] === 0) {\n      if (m[1] === 0 && m[2] === 0) {\n        if (m[0] === 1 && m[3] === 1) {\n          return \"\";\n        }\n        return `scale(${pf(m[0])} ${pf(m[3])})`;\n      }\n      if (m[0] === m[3] && m[1] === -m[2]) {\n        const a = (Math.acos(m[0]) * 180) / Math.PI;\n        return `rotate(${pf(a)})`;\n      }\n    } else {\n      if (m[0] === 1 && m[1] === 0 && m[2] === 0 && m[3] === 1) {\n        return `translate(${pf(m[4])} ${pf(m[5])})`;\n      }\n    }\n    return (\n      `matrix(${pf(m[0])} ${pf(m[1])} ${pf(m[2])} ${pf(m[3])} ${pf(m[4])} ` +\n      `${pf(m[5])})`\n    );\n  }\n\n  // The counts below are relevant for all pages, so they have to be global\n  // instead of being members of `SVGGraphics` (which is recreated for\n  // each page).\n  let clipCount = 0;\n  let maskCount = 0;\n  let shadingCount = 0;\n\n  // eslint-disable-next-line no-shadow\n  SVGGraphics = class SVGGraphics {\n    constructor(commonObjs, objs, forceDataSchema = false) {\n      this.svgFactory = new DOMSVGFactory();\n\n      this.current = new SVGExtraState();\n      this.transformMatrix = IDENTITY_MATRIX; // Graphics state matrix\n      this.transformStack = [];\n      this.extraStack = [];\n      this.commonObjs = commonObjs;\n      this.objs = objs;\n      this.pendingClip = null;\n      this.pendingEOFill = false;\n\n      this.embedFonts = false;\n      this.embeddedFonts = Object.create(null);\n      this.cssStyle = null;\n      this.forceDataSchema = !!forceDataSchema;\n\n      // In `src/shared/util.js` the operator names are mapped to IDs.\n      // The list below represents the reverse of that, i.e., it maps IDs\n      // to operator names.\n      this._operatorIdMapping = [];\n      for (const op in OPS) {\n        this._operatorIdMapping[OPS[op]] = op;\n      }\n    }\n\n    save() {\n      this.transformStack.push(this.transformMatrix);\n      const old = this.current;\n      this.extraStack.push(old);\n      this.current = old.clone();\n    }\n\n    restore() {\n      this.transformMatrix = this.transformStack.pop();\n      this.current = this.extraStack.pop();\n      this.pendingClip = null;\n      this.tgrp = null;\n    }\n\n    group(items) {\n      this.save();\n      this.executeOpTree(items);\n      this.restore();\n    }\n\n    loadDependencies(operatorList) {\n      const fnArray = operatorList.fnArray;\n      const argsArray = operatorList.argsArray;\n\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        if (fnArray[i] !== OPS.dependency) {\n          continue;\n        }\n\n        for (const obj of argsArray[i]) {\n          const objsPool = obj.startsWith(\"g_\") ? this.commonObjs : this.objs;\n          const promise = new Promise(resolve => {\n            objsPool.get(obj, resolve);\n          });\n          this.current.dependencies.push(promise);\n        }\n      }\n      return Promise.all(this.current.dependencies);\n    }\n\n    transform(a, b, c, d, e, f) {\n      const transformMatrix = [a, b, c, d, e, f];\n      this.transformMatrix = Util.transform(\n        this.transformMatrix,\n        transformMatrix\n      );\n      this.tgrp = null;\n    }\n\n    getSVG(operatorList, viewport) {\n      this.viewport = viewport;\n\n      const svgElement = this._initialize(viewport);\n      return this.loadDependencies(operatorList).then(() => {\n        this.transformMatrix = IDENTITY_MATRIX;\n        this.executeOpTree(this.convertOpList(operatorList));\n        return svgElement;\n      });\n    }\n\n    convertOpList(operatorList) {\n      const operatorIdMapping = this._operatorIdMapping;\n      const argsArray = operatorList.argsArray;\n      const fnArray = operatorList.fnArray;\n      const opList = [];\n      for (let i = 0, ii = fnArray.length; i < ii; i++) {\n        const fnId = fnArray[i];\n        opList.push({\n          fnId,\n          fn: operatorIdMapping[fnId],\n          args: argsArray[i],\n        });\n      }\n      return opListToTree(opList);\n    }\n\n    executeOpTree(opTree) {\n      for (const opTreeElement of opTree) {\n        const fn = opTreeElement.fn;\n        const fnId = opTreeElement.fnId;\n        const args = opTreeElement.args;\n\n        switch (fnId | 0) {\n          case OPS.beginText:\n            this.beginText();\n            break;\n          case OPS.dependency:\n            // Handled in `loadDependencies`, so no warning should be shown.\n            break;\n          case OPS.setLeading:\n            this.setLeading(args);\n            break;\n          case OPS.setLeadingMoveText:\n            this.setLeadingMoveText(args[0], args[1]);\n            break;\n          case OPS.setFont:\n            this.setFont(args);\n            break;\n          case OPS.showText:\n            this.showText(args[0]);\n            break;\n          case OPS.showSpacedText:\n            this.showText(args[0]);\n            break;\n          case OPS.endText:\n            this.endText();\n            break;\n          case OPS.moveText:\n            this.moveText(args[0], args[1]);\n            break;\n          case OPS.setCharSpacing:\n            this.setCharSpacing(args[0]);\n            break;\n          case OPS.setWordSpacing:\n            this.setWordSpacing(args[0]);\n            break;\n          case OPS.setHScale:\n            this.setHScale(args[0]);\n            break;\n          case OPS.setTextMatrix:\n            this.setTextMatrix(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.setTextRise:\n            this.setTextRise(args[0]);\n            break;\n          case OPS.setTextRenderingMode:\n            this.setTextRenderingMode(args[0]);\n            break;\n          case OPS.setLineWidth:\n            this.setLineWidth(args[0]);\n            break;\n          case OPS.setLineJoin:\n            this.setLineJoin(args[0]);\n            break;\n          case OPS.setLineCap:\n            this.setLineCap(args[0]);\n            break;\n          case OPS.setMiterLimit:\n            this.setMiterLimit(args[0]);\n            break;\n          case OPS.setFillRGBColor:\n            this.setFillRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeRGBColor:\n            this.setStrokeRGBColor(args[0], args[1], args[2]);\n            break;\n          case OPS.setStrokeColorN:\n            this.setStrokeColorN(args);\n            break;\n          case OPS.setFillColorN:\n            this.setFillColorN(args);\n            break;\n          case OPS.shadingFill:\n            this.shadingFill(args[0]);\n            break;\n          case OPS.setDash:\n            this.setDash(args[0], args[1]);\n            break;\n          case OPS.setRenderingIntent:\n            this.setRenderingIntent(args[0]);\n            break;\n          case OPS.setFlatness:\n            this.setFlatness(args[0]);\n            break;\n          case OPS.setGState:\n            this.setGState(args[0]);\n            break;\n          case OPS.fill:\n            this.fill();\n            break;\n          case OPS.eoFill:\n            this.eoFill();\n            break;\n          case OPS.stroke:\n            this.stroke();\n            break;\n          case OPS.fillStroke:\n            this.fillStroke();\n            break;\n          case OPS.eoFillStroke:\n            this.eoFillStroke();\n            break;\n          case OPS.clip:\n            this.clip(\"nonzero\");\n            break;\n          case OPS.eoClip:\n            this.clip(\"evenodd\");\n            break;\n          case OPS.paintSolidColorImageMask:\n            this.paintSolidColorImageMask();\n            break;\n          case OPS.paintImageXObject:\n            this.paintImageXObject(args[0]);\n            break;\n          case OPS.paintInlineImageXObject:\n            this.paintInlineImageXObject(args[0]);\n            break;\n          case OPS.paintImageMaskXObject:\n            this.paintImageMaskXObject(args[0]);\n            break;\n          case OPS.paintFormXObjectBegin:\n            this.paintFormXObjectBegin(args[0], args[1]);\n            break;\n          case OPS.paintFormXObjectEnd:\n            this.paintFormXObjectEnd();\n            break;\n          case OPS.closePath:\n            this.closePath();\n            break;\n          case OPS.closeStroke:\n            this.closeStroke();\n            break;\n          case OPS.closeFillStroke:\n            this.closeFillStroke();\n            break;\n          case OPS.closeEOFillStroke:\n            this.closeEOFillStroke();\n            break;\n          case OPS.nextLine:\n            this.nextLine();\n            break;\n          case OPS.transform:\n            this.transform(\n              args[0],\n              args[1],\n              args[2],\n              args[3],\n              args[4],\n              args[5]\n            );\n            break;\n          case OPS.constructPath:\n            this.constructPath(args[0], args[1]);\n            break;\n          case OPS.endPath:\n            this.endPath();\n            break;\n          case 92:\n            this.group(opTreeElement.items);\n            break;\n          default:\n            warn(`Unimplemented operator ${fn}`);\n            break;\n        }\n      }\n    }\n\n    setWordSpacing(wordSpacing) {\n      this.current.wordSpacing = wordSpacing;\n    }\n\n    setCharSpacing(charSpacing) {\n      this.current.charSpacing = charSpacing;\n    }\n\n    nextLine() {\n      this.moveText(0, this.current.leading);\n    }\n\n    setTextMatrix(a, b, c, d, e, f) {\n      const current = this.current;\n      current.textMatrix = current.lineMatrix = [a, b, c, d, e, f];\n      current.textMatrixScale = Math.sqrt(a * a + b * b);\n\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtElement.appendChild(current.tspan);\n    }\n\n    beginText() {\n      const current = this.current;\n      current.x = current.lineX = 0;\n      current.y = current.lineY = 0;\n      current.textMatrix = IDENTITY_MATRIX;\n      current.lineMatrix = IDENTITY_MATRIX;\n      current.textMatrixScale = 1;\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.txtElement = this.svgFactory.createElement(\"svg:text\");\n      current.txtgrp = this.svgFactory.createElement(\"svg:g\");\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    moveText(x, y) {\n      const current = this.current;\n      current.x = current.lineX += x;\n      current.y = current.lineY += y;\n\n      current.xcoords = [];\n      current.ycoords = [];\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n    }\n\n    showText(glyphs) {\n      const current = this.current;\n      const font = current.font;\n      const fontSize = current.fontSize;\n      if (fontSize === 0) {\n        return;\n      }\n\n      const fontSizeScale = current.fontSizeScale;\n      const charSpacing = current.charSpacing;\n      const wordSpacing = current.wordSpacing;\n      const fontDirection = current.fontDirection;\n      const textHScale = current.textHScale * fontDirection;\n      const vertical = font.vertical;\n      const spacingDir = vertical ? 1 : -1;\n      const defaultVMetrics = font.defaultVMetrics;\n      const widthAdvanceScale = fontSize * current.fontMatrix[0];\n\n      let x = 0;\n      for (const glyph of glyphs) {\n        if (glyph === null) {\n          // Word break\n          x += fontDirection * wordSpacing;\n          continue;\n        } else if (isNum(glyph)) {\n          x += (spacingDir * glyph * fontSize) / 1000;\n          continue;\n        }\n\n        const spacing = (glyph.isSpace ? wordSpacing : 0) + charSpacing;\n        const character = glyph.fontChar;\n        let scaledX, scaledY;\n        let width = glyph.width;\n        if (vertical) {\n          let vx;\n          const vmetric = glyph.vmetric || defaultVMetrics;\n          vx = glyph.vmetric ? vmetric[1] : width * 0.5;\n          vx = -vx * widthAdvanceScale;\n          const vy = vmetric[2] * widthAdvanceScale;\n\n          width = vmetric ? -vmetric[0] : width;\n          scaledX = vx / fontSizeScale;\n          scaledY = (x + vy) / fontSizeScale;\n        } else {\n          scaledX = x / fontSizeScale;\n          scaledY = 0;\n        }\n\n        if (glyph.isInFont || font.missingFile) {\n          current.xcoords.push(current.x + scaledX);\n          if (vertical) {\n            current.ycoords.push(-current.y + scaledY);\n          }\n          current.tspan.textContent += character;\n        } else {\n          // TODO: To assist with text selection, we should replace the missing\n          // character with a space character if charWidth is not zero.\n          // But we cannot just do \"character = ' '\", because the ' ' character\n          // might actually map to a different glyph.\n        }\n\n        let charWidth;\n        if (vertical) {\n          charWidth = width * widthAdvanceScale - spacing * fontDirection;\n        } else {\n          charWidth = width * widthAdvanceScale + spacing * fontDirection;\n        }\n\n        x += charWidth;\n      }\n      current.tspan.setAttributeNS(\n        null,\n        \"x\",\n        current.xcoords.map(pf).join(\" \")\n      );\n      if (vertical) {\n        current.tspan.setAttributeNS(\n          null,\n          \"y\",\n          current.ycoords.map(pf).join(\" \")\n        );\n      } else {\n        current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      }\n\n      if (vertical) {\n        current.y -= x;\n      } else {\n        current.x += x * textHScale;\n      }\n\n      current.tspan.setAttributeNS(null, \"font-family\", current.fontFamily);\n      current.tspan.setAttributeNS(\n        null,\n        \"font-size\",\n        `${pf(current.fontSize)}px`\n      );\n      if (current.fontStyle !== SVG_DEFAULTS.fontStyle) {\n        current.tspan.setAttributeNS(null, \"font-style\", current.fontStyle);\n      }\n      if (current.fontWeight !== SVG_DEFAULTS.fontWeight) {\n        current.tspan.setAttributeNS(null, \"font-weight\", current.fontWeight);\n      }\n\n      const fillStrokeMode =\n        current.textRenderingMode & TextRenderingMode.FILL_STROKE_MASK;\n      if (\n        fillStrokeMode === TextRenderingMode.FILL ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        if (current.fillColor !== SVG_DEFAULTS.fillColor) {\n          current.tspan.setAttributeNS(null, \"fill\", current.fillColor);\n        }\n        if (current.fillAlpha < 1) {\n          current.tspan.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        }\n      } else if (current.textRenderingMode === TextRenderingMode.ADD_TO_PATH) {\n        // Workaround for Firefox: We must set fill=\"transparent\" because\n        // fill=\"none\" would generate an empty clipping path.\n        current.tspan.setAttributeNS(null, \"fill\", \"transparent\");\n      } else {\n        current.tspan.setAttributeNS(null, \"fill\", \"none\");\n      }\n\n      if (\n        fillStrokeMode === TextRenderingMode.STROKE ||\n        fillStrokeMode === TextRenderingMode.FILL_STROKE\n      ) {\n        const lineWidthScale = 1 / (current.textMatrixScale || 1);\n        this._setStrokeAttributes(current.tspan, lineWidthScale);\n      }\n\n      // Include the text rise in the text matrix since the `pm` function\n      // creates the SVG element's `translate` entry (work on a copy to avoid\n      // altering the original text matrix).\n      let textMatrix = current.textMatrix;\n      if (current.textRise !== 0) {\n        textMatrix = textMatrix.slice();\n        textMatrix[5] += current.textRise;\n      }\n\n      current.txtElement.setAttributeNS(\n        null,\n        \"transform\",\n        `${pm(textMatrix)} scale(${pf(textHScale)}, -1)`\n      );\n      current.txtElement.setAttributeNS(XML_NS, \"xml:space\", \"preserve\");\n      current.txtElement.appendChild(current.tspan);\n      current.txtgrp.appendChild(current.txtElement);\n\n      this._ensureTransformGroup().appendChild(current.txtElement);\n    }\n\n    setLeadingMoveText(x, y) {\n      this.setLeading(-y);\n      this.moveText(x, y);\n    }\n\n    addFontStyle(fontObj) {\n      if (!fontObj.data) {\n        throw new Error(\n          \"addFontStyle: No font data available, \" +\n            'ensure that the \"fontExtraProperties\" API parameter is set.'\n        );\n      }\n      if (!this.cssStyle) {\n        this.cssStyle = this.svgFactory.createElement(\"svg:style\");\n        this.cssStyle.setAttributeNS(null, \"type\", \"text/css\");\n        this.defs.appendChild(this.cssStyle);\n      }\n\n      const url = createObjectURL(\n        fontObj.data,\n        fontObj.mimetype,\n        this.forceDataSchema\n      );\n      this.cssStyle.textContent +=\n        `@font-face { font-family: \"${fontObj.loadedName}\";` +\n        ` src: url(${url}); }\\n`;\n    }\n\n    setFont(details) {\n      const current = this.current;\n      const fontObj = this.commonObjs.get(details[0]);\n      let size = details[1];\n      current.font = fontObj;\n\n      if (\n        this.embedFonts &&\n        !fontObj.missingFile &&\n        !this.embeddedFonts[fontObj.loadedName]\n      ) {\n        this.addFontStyle(fontObj);\n        this.embeddedFonts[fontObj.loadedName] = fontObj;\n      }\n\n      current.fontMatrix = fontObj.fontMatrix\n        ? fontObj.fontMatrix\n        : FONT_IDENTITY_MATRIX;\n\n      let bold = \"normal\";\n      if (fontObj.black) {\n        bold = \"900\";\n      } else if (fontObj.bold) {\n        bold = \"bold\";\n      }\n      const italic = fontObj.italic ? \"italic\" : \"normal\";\n\n      if (size < 0) {\n        size = -size;\n        current.fontDirection = -1;\n      } else {\n        current.fontDirection = 1;\n      }\n      current.fontSize = size;\n      current.fontFamily = fontObj.loadedName;\n      current.fontWeight = bold;\n      current.fontStyle = italic;\n\n      current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      current.tspan.setAttributeNS(null, \"y\", pf(-current.y));\n      current.xcoords = [];\n      current.ycoords = [];\n    }\n\n    endText() {\n      const current = this.current;\n      if (\n        current.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG &&\n        current.txtElement &&\n        current.txtElement.hasChildNodes()\n      ) {\n        // If no glyphs are shown (i.e. no child nodes), no clipping occurs.\n        current.element = current.txtElement;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    // Path properties\n    setLineWidth(width) {\n      if (width > 0) {\n        this.current.lineWidth = width;\n      }\n    }\n\n    setLineCap(style) {\n      this.current.lineCap = LINE_CAP_STYLES[style];\n    }\n\n    setLineJoin(style) {\n      this.current.lineJoin = LINE_JOIN_STYLES[style];\n    }\n\n    setMiterLimit(limit) {\n      this.current.miterLimit = limit;\n    }\n\n    setStrokeAlpha(strokeAlpha) {\n      this.current.strokeAlpha = strokeAlpha;\n    }\n\n    setStrokeRGBColor(r, g, b) {\n      this.current.strokeColor = Util.makeCssRgb(r, g, b);\n    }\n\n    setFillAlpha(fillAlpha) {\n      this.current.fillAlpha = fillAlpha;\n    }\n\n    setFillRGBColor(r, g, b) {\n      this.current.fillColor = Util.makeCssRgb(r, g, b);\n      this.current.tspan = this.svgFactory.createElement(\"svg:tspan\");\n      this.current.xcoords = [];\n      this.current.ycoords = [];\n    }\n\n    setStrokeColorN(args) {\n      this.current.strokeColor = this._makeColorN_Pattern(args);\n    }\n\n    setFillColorN(args) {\n      this.current.fillColor = this._makeColorN_Pattern(args);\n    }\n\n    shadingFill(args) {\n      const width = this.viewport.width;\n      const height = this.viewport.height;\n      const inv = Util.inverseTransform(this.transformMatrix);\n      const bl = Util.applyTransform([0, 0], inv);\n      const br = Util.applyTransform([0, height], inv);\n      const ul = Util.applyTransform([width, 0], inv);\n      const ur = Util.applyTransform([width, height], inv);\n      const x0 = Math.min(bl[0], br[0], ul[0], ur[0]);\n      const y0 = Math.min(bl[1], br[1], ul[1], ur[1]);\n      const x1 = Math.max(bl[0], br[0], ul[0], ur[0]);\n      const y1 = Math.max(bl[1], br[1], ul[1], ur[1]);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", x0);\n      rect.setAttributeNS(null, \"y\", y0);\n      rect.setAttributeNS(null, \"width\", x1 - x0);\n      rect.setAttributeNS(null, \"height\", y1 - y0);\n      rect.setAttributeNS(null, \"fill\", this._makeShadingPattern(args));\n      if (this.current.fillAlpha < 1) {\n        rect.setAttributeNS(null, \"fill-opacity\", this.current.fillAlpha);\n      }\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    /**\n     * @private\n     */\n    _makeColorN_Pattern(args) {\n      if (args[0] === \"TilingPattern\") {\n        return this._makeTilingPattern(args);\n      }\n      return this._makeShadingPattern(args);\n    }\n\n    /**\n     * @private\n     */\n    _makeTilingPattern(args) {\n      const color = args[1];\n      const operatorList = args[2];\n      const matrix = args[3] || IDENTITY_MATRIX;\n      const [x0, y0, x1, y1] = args[4];\n      const xstep = args[5];\n      const ystep = args[6];\n      const paintType = args[7];\n\n      const tilingId = `shading${shadingCount++}`;\n      const [tx0, ty0] = Util.applyTransform([x0, y0], matrix);\n      const [tx1, ty1] = Util.applyTransform([x1, y1], matrix);\n      const [xscale, yscale] = Util.singularValueDecompose2dScale(matrix);\n      const txstep = xstep * xscale;\n      const tystep = ystep * yscale;\n\n      const tiling = this.svgFactory.createElement(\"svg:pattern\");\n      tiling.setAttributeNS(null, \"id\", tilingId);\n      tiling.setAttributeNS(null, \"patternUnits\", \"userSpaceOnUse\");\n      tiling.setAttributeNS(null, \"width\", txstep);\n      tiling.setAttributeNS(null, \"height\", tystep);\n      tiling.setAttributeNS(null, \"x\", `${tx0}`);\n      tiling.setAttributeNS(null, \"y\", `${ty0}`);\n\n      // Save current state.\n      const svg = this.svg;\n      const transformMatrix = this.transformMatrix;\n      const fillColor = this.current.fillColor;\n      const strokeColor = this.current.strokeColor;\n\n      const bbox = this.svgFactory.create(tx1 - tx0, ty1 - ty0);\n      this.svg = bbox;\n      this.transformMatrix = matrix;\n      if (paintType === 2) {\n        const cssColor = Util.makeCssRgb(...color);\n        this.current.fillColor = cssColor;\n        this.current.strokeColor = cssColor;\n      }\n      this.executeOpTree(this.convertOpList(operatorList));\n\n      // Restore saved state.\n      this.svg = svg;\n      this.transformMatrix = transformMatrix;\n      this.current.fillColor = fillColor;\n      this.current.strokeColor = strokeColor;\n\n      tiling.appendChild(bbox.childNodes[0]);\n      this.defs.appendChild(tiling);\n      return `url(#${tilingId})`;\n    }\n\n    /**\n     * @private\n     */\n    _makeShadingPattern(args) {\n      switch (args[0]) {\n        case \"RadialAxial\":\n          const shadingId = `shading${shadingCount++}`;\n          const colorStops = args[3];\n          let gradient;\n\n          switch (args[1]) {\n            case \"axial\":\n              const point0 = args[4];\n              const point1 = args[5];\n              gradient = this.svgFactory.createElement(\"svg:linearGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"x1\", point0[0]);\n              gradient.setAttributeNS(null, \"y1\", point0[1]);\n              gradient.setAttributeNS(null, \"x2\", point1[0]);\n              gradient.setAttributeNS(null, \"y2\", point1[1]);\n              break;\n            case \"radial\":\n              const focalPoint = args[4];\n              const circlePoint = args[5];\n              const focalRadius = args[6];\n              const circleRadius = args[7];\n              gradient = this.svgFactory.createElement(\"svg:radialGradient\");\n              gradient.setAttributeNS(null, \"id\", shadingId);\n              gradient.setAttributeNS(null, \"gradientUnits\", \"userSpaceOnUse\");\n              gradient.setAttributeNS(null, \"cx\", circlePoint[0]);\n              gradient.setAttributeNS(null, \"cy\", circlePoint[1]);\n              gradient.setAttributeNS(null, \"r\", circleRadius);\n              gradient.setAttributeNS(null, \"fx\", focalPoint[0]);\n              gradient.setAttributeNS(null, \"fy\", focalPoint[1]);\n              gradient.setAttributeNS(null, \"fr\", focalRadius);\n              break;\n            default:\n              throw new Error(`Unknown RadialAxial type: ${args[1]}`);\n          }\n          for (const colorStop of colorStops) {\n            const stop = this.svgFactory.createElement(\"svg:stop\");\n            stop.setAttributeNS(null, \"offset\", colorStop[0]);\n            stop.setAttributeNS(null, \"stop-color\", colorStop[1]);\n            gradient.appendChild(stop);\n          }\n          this.defs.appendChild(gradient);\n          return `url(#${shadingId})`;\n        case \"Mesh\":\n          warn(\"Unimplemented pattern Mesh\");\n          return null;\n        case \"Dummy\":\n          return \"hotpink\";\n        default:\n          throw new Error(`Unknown IR type: ${args[0]}`);\n      }\n    }\n\n    setDash(dashArray, dashPhase) {\n      this.current.dashArray = dashArray;\n      this.current.dashPhase = dashPhase;\n    }\n\n    constructPath(ops, args) {\n      const current = this.current;\n      let x = current.x,\n        y = current.y;\n      let d = [];\n      let j = 0;\n\n      for (const op of ops) {\n        switch (op | 0) {\n          case OPS.rectangle:\n            x = args[j++];\n            y = args[j++];\n            const width = args[j++];\n            const height = args[j++];\n            const xw = x + width;\n            const yh = y + height;\n            d.push(\n              \"M\",\n              pf(x),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(y),\n              \"L\",\n              pf(xw),\n              pf(yh),\n              \"L\",\n              pf(x),\n              pf(yh),\n              \"Z\"\n            );\n            break;\n          case OPS.moveTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"M\", pf(x), pf(y));\n            break;\n          case OPS.lineTo:\n            x = args[j++];\n            y = args[j++];\n            d.push(\"L\", pf(x), pf(y));\n            break;\n          case OPS.curveTo:\n            x = args[j + 4];\n            y = args[j + 5];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3]),\n              pf(x),\n              pf(y)\n            );\n            j += 6;\n            break;\n          case OPS.curveTo2:\n            d.push(\n              \"C\",\n              pf(x),\n              pf(y),\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(args[j + 2]),\n              pf(args[j + 3])\n            );\n            x = args[j + 2];\n            y = args[j + 3];\n            j += 4;\n            break;\n          case OPS.curveTo3:\n            x = args[j + 2];\n            y = args[j + 3];\n            d.push(\n              \"C\",\n              pf(args[j]),\n              pf(args[j + 1]),\n              pf(x),\n              pf(y),\n              pf(x),\n              pf(y)\n            );\n            j += 4;\n            break;\n          case OPS.closePath:\n            d.push(\"Z\");\n            break;\n        }\n      }\n\n      d = d.join(\" \");\n\n      if (\n        current.path &&\n        ops.length > 0 &&\n        ops[0] !== OPS.rectangle &&\n        ops[0] !== OPS.moveTo\n      ) {\n        // If a path does not start with an OPS.rectangle or OPS.moveTo, it has\n        // probably been divided into two OPS.constructPath operators by\n        // OperatorList. Append the commands to the previous path element.\n        d = current.path.getAttributeNS(null, \"d\") + d;\n      } else {\n        current.path = this.svgFactory.createElement(\"svg:path\");\n        this._ensureTransformGroup().appendChild(current.path);\n      }\n\n      current.path.setAttributeNS(null, \"d\", d);\n      current.path.setAttributeNS(null, \"fill\", \"none\");\n\n      // Saving a reference in current.element so that it can be addressed\n      // in 'fill' and 'stroke'\n      current.element = current.path;\n      current.setCurrentPoint(x, y);\n    }\n\n    endPath() {\n      const current = this.current;\n\n      // Painting operators end a path.\n      current.path = null;\n\n      if (!this.pendingClip) {\n        return;\n      }\n      if (!current.element) {\n        this.pendingClip = null;\n        return;\n      }\n\n      // Add the current path to a clipping path.\n      const clipId = `clippath${clipCount++}`;\n      const clipPath = this.svgFactory.createElement(\"svg:clipPath\");\n      clipPath.setAttributeNS(null, \"id\", clipId);\n      clipPath.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n\n      // A deep clone is needed when text is used as a clipping path.\n      const clipElement = current.element.cloneNode(true);\n      if (this.pendingClip === \"evenodd\") {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"evenodd\");\n      } else {\n        clipElement.setAttributeNS(null, \"clip-rule\", \"nonzero\");\n      }\n      this.pendingClip = null;\n      clipPath.appendChild(clipElement);\n      this.defs.appendChild(clipPath);\n\n      if (current.activeClipUrl) {\n        // The previous clipping group content can go out of order -- resetting\n        // cached clipGroups.\n        current.clipGroup = null;\n        this.extraStack.forEach(function (prev) {\n          prev.clipGroup = null;\n        });\n        // Intersect with the previous clipping path.\n        clipPath.setAttributeNS(null, \"clip-path\", current.activeClipUrl);\n      }\n      current.activeClipUrl = `url(#${clipId})`;\n\n      this.tgrp = null;\n    }\n\n    clip(type) {\n      this.pendingClip = type;\n    }\n\n    closePath() {\n      const current = this.current;\n      if (current.path) {\n        const d = `${current.path.getAttributeNS(null, \"d\")}Z`;\n        current.path.setAttributeNS(null, \"d\", d);\n      }\n    }\n\n    setLeading(leading) {\n      this.current.leading = -leading;\n    }\n\n    setTextRise(textRise) {\n      this.current.textRise = textRise;\n    }\n\n    setTextRenderingMode(textRenderingMode) {\n      this.current.textRenderingMode = textRenderingMode;\n    }\n\n    setHScale(scale) {\n      this.current.textHScale = scale / 100;\n    }\n\n    setRenderingIntent(intent) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setFlatness(flatness) {\n      // This operation is ignored since we haven't found a use case for it yet.\n    }\n\n    setGState(states) {\n      for (const [key, value] of states) {\n        switch (key) {\n          case \"LW\":\n            this.setLineWidth(value);\n            break;\n          case \"LC\":\n            this.setLineCap(value);\n            break;\n          case \"LJ\":\n            this.setLineJoin(value);\n            break;\n          case \"ML\":\n            this.setMiterLimit(value);\n            break;\n          case \"D\":\n            this.setDash(value[0], value[1]);\n            break;\n          case \"RI\":\n            this.setRenderingIntent(value);\n            break;\n          case \"FL\":\n            this.setFlatness(value);\n            break;\n          case \"Font\":\n            this.setFont(value);\n            break;\n          case \"CA\":\n            this.setStrokeAlpha(value);\n            break;\n          case \"ca\":\n            this.setFillAlpha(value);\n            break;\n          default:\n            warn(`Unimplemented graphic state operator ${key}`);\n            break;\n        }\n      }\n    }\n\n    fill() {\n      const current = this.current;\n      if (current.element) {\n        current.element.setAttributeNS(null, \"fill\", current.fillColor);\n        current.element.setAttributeNS(null, \"fill-opacity\", current.fillAlpha);\n        this.endPath();\n      }\n    }\n\n    stroke() {\n      const current = this.current;\n      if (current.element) {\n        this._setStrokeAttributes(current.element);\n        current.element.setAttributeNS(null, \"fill\", \"none\");\n        this.endPath();\n      }\n    }\n\n    /**\n     * @private\n     */\n    _setStrokeAttributes(element, lineWidthScale = 1) {\n      const current = this.current;\n      let dashArray = current.dashArray;\n      if (lineWidthScale !== 1 && dashArray.length > 0) {\n        dashArray = dashArray.map(function (value) {\n          return lineWidthScale * value;\n        });\n      }\n      element.setAttributeNS(null, \"stroke\", current.strokeColor);\n      element.setAttributeNS(null, \"stroke-opacity\", current.strokeAlpha);\n      element.setAttributeNS(null, \"stroke-miterlimit\", pf(current.miterLimit));\n      element.setAttributeNS(null, \"stroke-linecap\", current.lineCap);\n      element.setAttributeNS(null, \"stroke-linejoin\", current.lineJoin);\n      element.setAttributeNS(\n        null,\n        \"stroke-width\",\n        pf(lineWidthScale * current.lineWidth) + \"px\"\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dasharray\",\n        dashArray.map(pf).join(\" \")\n      );\n      element.setAttributeNS(\n        null,\n        \"stroke-dashoffset\",\n        pf(lineWidthScale * current.dashPhase) + \"px\"\n      );\n    }\n\n    eoFill() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fill();\n    }\n\n    fillStroke() {\n      // Order is important since stroke wants fill to be none.\n      // First stroke, then if fill needed, it will be overwritten.\n      this.stroke();\n      this.fill();\n    }\n\n    eoFillStroke() {\n      if (this.current.element) {\n        this.current.element.setAttributeNS(null, \"fill-rule\", \"evenodd\");\n      }\n      this.fillStroke();\n    }\n\n    closeStroke() {\n      this.closePath();\n      this.stroke();\n    }\n\n    closeFillStroke() {\n      this.closePath();\n      this.fillStroke();\n    }\n\n    closeEOFillStroke() {\n      this.closePath();\n      this.eoFillStroke();\n    }\n\n    paintSolidColorImageMask() {\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", \"1px\");\n      rect.setAttributeNS(null, \"height\", \"1px\");\n      rect.setAttributeNS(null, \"fill\", this.current.fillColor);\n\n      this._ensureTransformGroup().appendChild(rect);\n    }\n\n    paintImageXObject(objId) {\n      const imgData = objId.startsWith(\"g_\")\n        ? this.commonObjs.get(objId)\n        : this.objs.get(objId);\n      if (!imgData) {\n        warn(`Dependent image with object ID ${objId} is not ready yet`);\n        return;\n      }\n      this.paintInlineImageXObject(imgData);\n    }\n\n    paintInlineImageXObject(imgData, mask) {\n      const width = imgData.width;\n      const height = imgData.height;\n\n      const imgSrc = convertImgDataToPng(imgData, this.forceDataSchema, !!mask);\n      const cliprect = this.svgFactory.createElement(\"svg:rect\");\n      cliprect.setAttributeNS(null, \"x\", \"0\");\n      cliprect.setAttributeNS(null, \"y\", \"0\");\n      cliprect.setAttributeNS(null, \"width\", pf(width));\n      cliprect.setAttributeNS(null, \"height\", pf(height));\n      this.current.element = cliprect;\n      this.clip(\"nonzero\");\n\n      const imgEl = this.svgFactory.createElement(\"svg:image\");\n      imgEl.setAttributeNS(XLINK_NS, \"xlink:href\", imgSrc);\n      imgEl.setAttributeNS(null, \"x\", \"0\");\n      imgEl.setAttributeNS(null, \"y\", pf(-height));\n      imgEl.setAttributeNS(null, \"width\", pf(width) + \"px\");\n      imgEl.setAttributeNS(null, \"height\", pf(height) + \"px\");\n      imgEl.setAttributeNS(\n        null,\n        \"transform\",\n        `scale(${pf(1 / width)} ${pf(-1 / height)})`\n      );\n      if (mask) {\n        mask.appendChild(imgEl);\n      } else {\n        this._ensureTransformGroup().appendChild(imgEl);\n      }\n    }\n\n    paintImageMaskXObject(imgData) {\n      const current = this.current;\n      const width = imgData.width;\n      const height = imgData.height;\n      const fillColor = current.fillColor;\n\n      current.maskId = `mask${maskCount++}`;\n      const mask = this.svgFactory.createElement(\"svg:mask\");\n      mask.setAttributeNS(null, \"id\", current.maskId);\n\n      const rect = this.svgFactory.createElement(\"svg:rect\");\n      rect.setAttributeNS(null, \"x\", \"0\");\n      rect.setAttributeNS(null, \"y\", \"0\");\n      rect.setAttributeNS(null, \"width\", pf(width));\n      rect.setAttributeNS(null, \"height\", pf(height));\n      rect.setAttributeNS(null, \"fill\", fillColor);\n      rect.setAttributeNS(null, \"mask\", `url(#${current.maskId})`);\n\n      this.defs.appendChild(mask);\n      this._ensureTransformGroup().appendChild(rect);\n\n      this.paintInlineImageXObject(imgData, mask);\n    }\n\n    paintFormXObjectBegin(matrix, bbox) {\n      if (Array.isArray(matrix) && matrix.length === 6) {\n        this.transform(\n          matrix[0],\n          matrix[1],\n          matrix[2],\n          matrix[3],\n          matrix[4],\n          matrix[5]\n        );\n      }\n\n      if (bbox) {\n        const width = bbox[2] - bbox[0];\n        const height = bbox[3] - bbox[1];\n\n        const cliprect = this.svgFactory.createElement(\"svg:rect\");\n        cliprect.setAttributeNS(null, \"x\", bbox[0]);\n        cliprect.setAttributeNS(null, \"y\", bbox[1]);\n        cliprect.setAttributeNS(null, \"width\", pf(width));\n        cliprect.setAttributeNS(null, \"height\", pf(height));\n        this.current.element = cliprect;\n        this.clip(\"nonzero\");\n        this.endPath();\n      }\n    }\n\n    paintFormXObjectEnd() {}\n\n    /**\n     * @private\n     */\n    _initialize(viewport) {\n      const svg = this.svgFactory.create(viewport.width, viewport.height);\n\n      // Create the definitions element.\n      const definitions = this.svgFactory.createElement(\"svg:defs\");\n      svg.appendChild(definitions);\n      this.defs = definitions;\n\n      // Create the root group element, which acts a container for all other\n      // groups and applies the viewport transform.\n      const rootGroup = this.svgFactory.createElement(\"svg:g\");\n      rootGroup.setAttributeNS(null, \"transform\", pm(viewport.transform));\n      svg.appendChild(rootGroup);\n\n      // For the construction of the SVG image we are only interested in the\n      // root group, so we expose it as the entry point of the SVG image for\n      // the other code in this class.\n      this.svg = rootGroup;\n\n      return svg;\n    }\n\n    /**\n     * @private\n     */\n    _ensureClipGroup() {\n      if (!this.current.clipGroup) {\n        const clipGroup = this.svgFactory.createElement(\"svg:g\");\n        clipGroup.setAttributeNS(null, \"clip-path\", this.current.activeClipUrl);\n        this.svg.appendChild(clipGroup);\n        this.current.clipGroup = clipGroup;\n      }\n      return this.current.clipGroup;\n    }\n\n    /**\n     * @private\n     */\n    _ensureTransformGroup() {\n      if (!this.tgrp) {\n        this.tgrp = this.svgFactory.createElement(\"svg:g\");\n        this.tgrp.setAttributeNS(null, \"transform\", pm(this.transformMatrix));\n        if (this.current.activeClipUrl) {\n          this._ensureClipGroup().appendChild(this.tgrp);\n        } else {\n          this.svg.appendChild(this.tgrp);\n        }\n      }\n      return this.tgrp;\n    }\n  };\n}\n\nexport { SVGGraphics };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* globals __non_webpack_require__ */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n  MissingPDFException,\n} from \"../shared/util.js\";\nimport {\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./node_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst fs = __non_webpack_require__(\"fs\");\nconst http = __non_webpack_require__(\"http\");\nconst https = __non_webpack_require__(\"https\");\nconst url = __non_webpack_require__(\"url\");\n\nconst fileUriRegex = /^file:\\/\\/\\/[a-zA-Z]:\\//;\n\nfunction parseUrl(sourceUrl) {\n  const parsedUrl = url.parse(sourceUrl);\n  if (parsedUrl.protocol === \"file:\" || parsedUrl.host) {\n    return parsedUrl;\n  }\n  // Prepending 'file:///' to Windows absolute path.\n  if (/^[a-z]:[/\\\\]/i.test(sourceUrl)) {\n    return url.parse(`file:///${sourceUrl}`);\n  }\n  // Changes protocol to 'file:' if url refers to filesystem.\n  if (!parsedUrl.host) {\n    parsedUrl.protocol = \"file:\";\n  }\n  return parsedUrl;\n}\n\nclass PDFNodeStream {\n  constructor(source) {\n    this.source = source;\n    this.url = parseUrl(source.url);\n    this.isHttp =\n      this.url.protocol === \"http:\" || this.url.protocol === \"https:\";\n    // Check if url refers to filesystem.\n    this.isFsUrl = this.url.protocol === \"file:\";\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNodeStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = this.isFsUrl\n      ? new PDFNodeStreamFsFullReader(this)\n      : new PDFNodeStreamFullReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(start, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const rangeReader = this.isFsUrl\n      ? new PDFNodeStreamFsRangeReader(this, start, end)\n      : new PDFNodeStreamRangeReader(this, start, end);\n    this._rangeRequestReaders.push(rangeReader);\n    return rangeReader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\nclass BaseFullReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    const source = stream.source;\n    this._contentLength = source.length; // optional\n    this._loaded = 0;\n    this._filename = null;\n\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    this._headersCapability = createPromiseCapability();\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readable to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // We need to stop reading when range is supported and streaming is\n    // disabled.\n    if (!this._isStreamingSupported && this._isRangeSupported) {\n      this._error(new AbortException(\"streaming is disabled\"));\n    }\n\n    // Destroy ReadableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nclass BaseRangeReader {\n  constructor(stream) {\n    this._url = stream.url;\n    this._done = false;\n    this._storedError = null;\n    this.onProgress = null;\n    this._loaded = 0;\n    this._readableStream = null;\n    this._readCapability = createPromiseCapability();\n    const source = stream.source;\n    this._isStreamingSupported = !source.disableStream;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    if (this._storedError) {\n      throw this._storedError;\n    }\n\n    const chunk = this._readableStream.read();\n    if (chunk === null) {\n      this._readCapability = createPromiseCapability();\n      return this.read();\n    }\n    this._loaded += chunk.length;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    // Ensure that `read()` method returns ArrayBuffer.\n    const buffer = new Uint8Array(chunk).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    // Call `this._error()` method when cancel is called\n    // before _readableStream is set.\n    if (!this._readableStream) {\n      this._error(reason);\n      return;\n    }\n    this._readableStream.destroy(reason);\n  }\n\n  _error(reason) {\n    this._storedError = reason;\n    this._readCapability.resolve();\n  }\n\n  _setReadableStream(readableStream) {\n    this._readableStream = readableStream;\n    readableStream.on(\"readable\", () => {\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"end\", () => {\n      // Destroy readableStream to minimize resource usage.\n      readableStream.destroy();\n      this._done = true;\n      this._readCapability.resolve();\n    });\n\n    readableStream.on(\"error\", reason => {\n      this._error(reason);\n    });\n\n    // Destroy readableStream if already in errored state.\n    if (this._storedError) {\n      this._readableStream.destroy(this._storedError);\n    }\n  }\n}\n\nfunction createRequestOptions(parsedUrl, headers) {\n  return {\n    protocol: parsedUrl.protocol,\n    auth: parsedUrl.auth,\n    host: parsedUrl.hostname,\n    port: parsedUrl.port,\n    path: parsedUrl.path,\n    method: \"GET\",\n    headers,\n  };\n}\n\nclass PDFNodeStreamFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      this._headersCapability.resolve();\n      this._setReadableStream(response);\n\n      const getResponseHeader = name => {\n        // Make sure that headers name are in lower case, as mentioned\n        // here: https://nodejs.org/api/http.html#http_message_headers.\n        return this._readableStream.headers[name.toLowerCase()];\n      };\n      const {\n        allowRangeRequests,\n        suggestedLength,\n      } = validateRangeRequestCapabilities({\n        getResponseHeader,\n        isHttp: stream.isHttp,\n        rangeChunkSize: this._rangeChunkSize,\n        disableRange: this._disableRange,\n      });\n\n      this._isRangeSupported = allowRangeRequests;\n      // Setting right content length.\n      this._contentLength = suggestedLength || this._contentLength;\n\n      this._filename = extractFilenameFromHeader(getResponseHeader);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, stream.httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n      this._headersCapability.reject(reason);\n    });\n    // Note: `request.end(data)` is used to write `data` to request body\n    // and notify end of request. But one should always call `request.end()`\n    // even if there is no data to write -- (to notify the end of request).\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    this._httpHeaders = {};\n    for (const property in stream.httpHeaders) {\n      const value = stream.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      this._httpHeaders[property] = value;\n    }\n    this._httpHeaders.Range = `bytes=${start}-${end - 1}`;\n\n    const handleResponse = response => {\n      if (response.statusCode === 404) {\n        const error = new MissingPDFException(`Missing PDF \"${this._url}\".`);\n        this._storedError = error;\n        return;\n      }\n      this._setReadableStream(response);\n    };\n\n    this._request = null;\n    if (this._url.protocol === \"http:\") {\n      this._request = http.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    } else {\n      this._request = https.request(\n        createRequestOptions(this._url, this._httpHeaders),\n        handleResponse\n      );\n    }\n\n    this._request.on(\"error\", reason => {\n      this._storedError = reason;\n    });\n    this._request.end();\n  }\n}\n\nclass PDFNodeStreamFsFullReader extends BaseFullReader {\n  constructor(stream) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    fs.lstat(path, (error, stat) => {\n      if (error) {\n        if (error.code === \"ENOENT\") {\n          error = new MissingPDFException(`Missing PDF \"${path}\".`);\n        }\n        this._storedError = error;\n        this._headersCapability.reject(error);\n        return;\n      }\n      // Setting right content length.\n      this._contentLength = stat.size;\n\n      this._setReadableStream(fs.createReadStream(path));\n      this._headersCapability.resolve();\n    });\n  }\n}\n\nclass PDFNodeStreamFsRangeReader extends BaseRangeReader {\n  constructor(stream, start, end) {\n    super(stream);\n\n    let path = decodeURIComponent(this._url.path);\n\n    // Remove the extra slash to get right path from url like `file:///C:/`\n    if (fileUriRegex.test(this._url.href)) {\n      path = path.replace(/^\\//, \"\");\n    }\n\n    this._setReadableStream(fs.createReadStream(path, { start, end: end - 1 }));\n  }\n}\n\nexport { PDFNodeStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport {\n  assert,\n  MissingPDFException,\n  UnexpectedResponseException,\n} from \"../shared/util.js\";\nimport { getFilenameFromContentDispositionHeader } from \"./content_disposition.js\";\n\nfunction validateRangeRequestCapabilities({\n  getResponseHeader,\n  isHttp,\n  rangeChunkSize,\n  disableRange,\n}) {\n  assert(rangeChunkSize > 0, \"Range chunk size must be larger than zero\");\n  const returnValues = {\n    allowRangeRequests: false,\n    suggestedLength: undefined,\n  };\n\n  const length = parseInt(getResponseHeader(\"Content-Length\"), 10);\n  if (!Number.isInteger(length)) {\n    return returnValues;\n  }\n\n  returnValues.suggestedLength = length;\n\n  if (length <= 2 * rangeChunkSize) {\n    // The file size is smaller than the size of two chunks, so it does not\n    // make any sense to abort the request and retry with a range request.\n    return returnValues;\n  }\n\n  if (disableRange || !isHttp) {\n    return returnValues;\n  }\n  if (getResponseHeader(\"Accept-Ranges\") !== \"bytes\") {\n    return returnValues;\n  }\n\n  const contentEncoding = getResponseHeader(\"Content-Encoding\") || \"identity\";\n  if (contentEncoding !== \"identity\") {\n    return returnValues;\n  }\n\n  returnValues.allowRangeRequests = true;\n  return returnValues;\n}\n\nfunction extractFilenameFromHeader(getResponseHeader) {\n  const contentDisposition = getResponseHeader(\"Content-Disposition\");\n  if (contentDisposition) {\n    let filename = getFilenameFromContentDispositionHeader(contentDisposition);\n    if (filename.includes(\"%\")) {\n      try {\n        filename = decodeURIComponent(filename);\n      } catch (ex) {}\n    }\n    if (/\\.pdf$/i.test(filename)) {\n      return filename;\n    }\n  }\n  return null;\n}\n\nfunction createResponseStatusError(status, url) {\n  if (status === 404 || (status === 0 && url.startsWith(\"file:\"))) {\n    return new MissingPDFException('Missing PDF \"' + url + '\".');\n  }\n  return new UnexpectedResponseException(\n    \"Unexpected server response (\" +\n      status +\n      ') while retrieving PDF \"' +\n      url +\n      '\".',\n    status\n  );\n}\n\nfunction validateResponseStatus(status) {\n  return status === 200 || status === 206;\n}\n\nexport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n};\n","/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// This getFilenameFromContentDispositionHeader function is adapted from\n// https://github.com/Rob--W/open-in-browser/blob/7e2e35a38b8b4e981b11da7b2f01df0149049e92/extension/content-disposition.js\n// with the following changes:\n// - Modified to conform to PDF.js's coding style.\n// - Support UTF-8 decoding when TextDecoder is unsupported.\n// - Move return to the end of the function to prevent Babel from dropping the\n//   function declarations.\n\n/**\n * Extract file name from the Content-Disposition HTTP response header.\n *\n * @param {string} contentDisposition\n * @returns {string} Filename, if found in the Content-Disposition header.\n */\nfunction getFilenameFromContentDispositionHeader(contentDisposition) {\n  let needsEncodingFixup = true;\n\n  // filename*=ext-value (\"ext-value\" from RFC 5987, referenced by RFC 6266).\n  let tmp = toParamRegExp(\"filename\\\\*\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = unescape(filename);\n    filename = rfc5987decode(filename);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // Continuations (RFC 2231 section 3, referenced by RFC 5987 section 3.1).\n  // filename*n*=part\n  // filename*n=part\n  tmp = rfc2231getparam(contentDisposition);\n  if (tmp) {\n    // RFC 2047, section\n    const filename = rfc2047decode(tmp);\n    return fixupEncoding(filename);\n  }\n\n  // filename=value (RFC 5987, section 4.1).\n  tmp = toParamRegExp(\"filename\", \"i\").exec(contentDisposition);\n  if (tmp) {\n    tmp = tmp[1];\n    let filename = rfc2616unquote(tmp);\n    filename = rfc2047decode(filename);\n    return fixupEncoding(filename);\n  }\n\n  // After this line there are only function declarations. We cannot put\n  // \"return\" here for readability because babel would then drop the function\n  // declarations...\n  function toParamRegExp(attributePattern, flags) {\n    return new RegExp(\n      \"(?:^|;)\\\\s*\" +\n        attributePattern +\n        \"\\\\s*=\\\\s*\" +\n        // Captures: value = token | quoted-string\n        // (RFC 2616, section 3.6 and referenced by RFC 6266 4.1)\n        \"(\" +\n        '[^\";\\\\s][^;\\\\s]*' +\n        \"|\" +\n        '\"(?:[^\"\\\\\\\\]|\\\\\\\\\"?)+\"?' +\n        \")\",\n      flags\n    );\n  }\n  function textdecode(encoding, value) {\n    if (encoding) {\n      if (!/^[\\x00-\\xFF]+$/.test(value)) {\n        return value;\n      }\n      try {\n        const decoder = new TextDecoder(encoding, { fatal: true });\n        const bytes = Array.from(value, function (ch) {\n          return ch.charCodeAt(0) & 0xff;\n        });\n        value = decoder.decode(new Uint8Array(bytes));\n        needsEncodingFixup = false;\n      } catch (e) {\n        // TextDecoder constructor threw - unrecognized encoding.\n        // Or TextDecoder API is not available (in IE / Edge).\n        if (/^utf-?8$/i.test(encoding)) {\n          // UTF-8 is commonly used, try to support it in another way:\n          try {\n            value = decodeURIComponent(escape(value));\n            needsEncodingFixup = false;\n          } catch (err) {}\n        }\n      }\n    }\n    return value;\n  }\n  function fixupEncoding(value) {\n    if (needsEncodingFixup && /[\\x80-\\xff]/.test(value)) {\n      // Maybe multi-byte UTF-8.\n      value = textdecode(\"utf-8\", value);\n      if (needsEncodingFixup) {\n        // Try iso-8859-1 encoding.\n        value = textdecode(\"iso-8859-1\", value);\n      }\n    }\n    return value;\n  }\n  function rfc2231getparam(contentDispositionStr) {\n    const matches = [];\n    let match;\n    // Iterate over all filename*n= and filename*n*= with n being an integer\n    // of at least zero. Any non-zero number must not start with '0'.\n    const iter = toParamRegExp(\"filename\\\\*((?!0\\\\d)\\\\d+)(\\\\*?)\", \"ig\");\n    while ((match = iter.exec(contentDispositionStr)) !== null) {\n      let [, n, quot, part] = match; // eslint-disable-line prefer-const\n      n = parseInt(n, 10);\n      if (n in matches) {\n        // Ignore anything after the invalid second filename*0.\n        if (n === 0) {\n          break;\n        }\n        continue;\n      }\n      matches[n] = [quot, part];\n    }\n    const parts = [];\n    for (let n = 0; n < matches.length; ++n) {\n      if (!(n in matches)) {\n        // Numbers must be consecutive. Truncate when there is a hole.\n        break;\n      }\n      let [quot, part] = matches[n]; // eslint-disable-line prefer-const\n      part = rfc2616unquote(part);\n      if (quot) {\n        part = unescape(part);\n        if (n === 0) {\n          part = rfc5987decode(part);\n        }\n      }\n      parts.push(part);\n    }\n    return parts.join(\"\");\n  }\n  function rfc2616unquote(value) {\n    if (value.startsWith('\"')) {\n      const parts = value.slice(1).split('\\\\\"');\n      // Find the first unescaped \" and terminate there.\n      for (let i = 0; i < parts.length; ++i) {\n        const quotindex = parts[i].indexOf('\"');\n        if (quotindex !== -1) {\n          parts[i] = parts[i].slice(0, quotindex);\n          parts.length = i + 1; // Truncates and stop the iteration.\n        }\n        parts[i] = parts[i].replace(/\\\\(.)/g, \"$1\");\n      }\n      value = parts.join('\"');\n    }\n    return value;\n  }\n  function rfc5987decode(extvalue) {\n    // Decodes \"ext-value\" from RFC 5987.\n    const encodingend = extvalue.indexOf(\"'\");\n    if (encodingend === -1) {\n      // Some servers send \"filename*=\" without encoding 'language' prefix,\n      // e.g. in https://github.com/Rob--W/open-in-browser/issues/26\n      // Let's accept the value like Firefox (57) (Chrome 62 rejects it).\n      return extvalue;\n    }\n    const encoding = extvalue.slice(0, encodingend);\n    const langvalue = extvalue.slice(encodingend + 1);\n    // Ignore language (RFC 5987 section 3.2.1, and RFC 6266 section 4.1 ).\n    const value = langvalue.replace(/^[^']*'/, \"\");\n    return textdecode(encoding, value);\n  }\n  function rfc2047decode(value) {\n    // RFC 2047-decode the result. Firefox tried to drop support for it, but\n    // backed out because some servers use it - https://bugzil.la/875615\n    // Firefox's condition for decoding is here: https://searchfox.org/mozilla-central/rev/4a590a5a15e35d88a3b23dd6ac3c471cf85b04a8/netwerk/mime/nsMIMEHeaderParamImpl.cpp#742-748\n\n    // We are more strict and only recognize RFC 2047-encoding if the value\n    // starts with \"=?\", since then it is likely that the full value is\n    // RFC 2047-encoded.\n\n    // Firefox also decodes words even where RFC 2047 section 5 states:\n    // \"An 'encoded-word' MUST NOT appear within a 'quoted-string'.\"\n    if (!value.startsWith(\"=?\") || /[\\x00-\\x19\\x80-\\xff]/.test(value)) {\n      return value;\n    }\n    // RFC 2047, section 2.4\n    // encoded-word = \"=?\" charset \"?\" encoding \"?\" encoded-text \"?=\"\n    // charset = token (but let's restrict to characters that denote a\n    //       possibly valid encoding).\n    // encoding = q or b\n    // encoded-text = any printable ASCII character other than ? or space.\n    //        ... but Firefox permits ? and space.\n    return value.replace(\n      /=\\?([\\w-]*)\\?([QqBb])\\?((?:[^?]|\\?(?!=))*)\\?=/g,\n      function (matches, charset, encoding, text) {\n        if (encoding === \"q\" || encoding === \"Q\") {\n          // RFC 2047 section 4.2.\n          text = text.replace(/_/g, \" \");\n          text = text.replace(/=([0-9a-fA-F]{2})/g, function (match, hex) {\n            return String.fromCharCode(parseInt(hex, 16));\n          });\n          return textdecode(charset, text);\n        } // else encoding is b or B - base64 (RFC 2047 section 4.1)\n        try {\n          text = atob(text);\n        } catch (e) {}\n        return textdecode(charset, text);\n      }\n    );\n  }\n\n  return \"\";\n}\n\nexport { getFilenameFromContentDispositionHeader };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  assert,\n  createPromiseCapability,\n  stringToBytes,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./network.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nconst OK_RESPONSE = 200;\nconst PARTIAL_CONTENT_RESPONSE = 206;\n\nfunction getArrayBuffer(xhr) {\n  const data = xhr.response;\n  if (typeof data !== \"string\") {\n    return data;\n  }\n  const array = stringToBytes(data);\n  return array.buffer;\n}\n\nclass NetworkManager {\n  constructor(url, args) {\n    this.url = url;\n    args = args || {};\n    this.isHttp = /^https?:/i.test(url);\n    this.httpHeaders = (this.isHttp && args.httpHeaders) || {};\n    this.withCredentials = args.withCredentials || false;\n    this.getXhr =\n      args.getXhr ||\n      function NetworkManager_getXhr() {\n        return new XMLHttpRequest();\n      };\n\n    this.currXhrId = 0;\n    this.pendingRequests = Object.create(null);\n  }\n\n  requestRange(begin, end, listeners) {\n    const args = {\n      begin,\n      end,\n    };\n    for (const prop in listeners) {\n      args[prop] = listeners[prop];\n    }\n    return this.request(args);\n  }\n\n  requestFull(listeners) {\n    return this.request(listeners);\n  }\n\n  request(args) {\n    const xhr = this.getXhr();\n    const xhrId = this.currXhrId++;\n    const pendingRequest = (this.pendingRequests[xhrId] = {\n      xhr,\n    });\n\n    xhr.open(\"GET\", this.url);\n    xhr.withCredentials = this.withCredentials;\n    for (const property in this.httpHeaders) {\n      const value = this.httpHeaders[property];\n      if (typeof value === \"undefined\") {\n        continue;\n      }\n      xhr.setRequestHeader(property, value);\n    }\n    if (this.isHttp && \"begin\" in args && \"end\" in args) {\n      xhr.setRequestHeader(\"Range\", `bytes=${args.begin}-${args.end - 1}`);\n      pendingRequest.expectedStatus = PARTIAL_CONTENT_RESPONSE;\n    } else {\n      pendingRequest.expectedStatus = OK_RESPONSE;\n    }\n    xhr.responseType = \"arraybuffer\";\n\n    if (args.onError) {\n      xhr.onerror = function (evt) {\n        args.onError(xhr.status);\n      };\n    }\n    xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n    xhr.onprogress = this.onProgress.bind(this, xhrId);\n\n    pendingRequest.onHeadersReceived = args.onHeadersReceived;\n    pendingRequest.onDone = args.onDone;\n    pendingRequest.onError = args.onError;\n    pendingRequest.onProgress = args.onProgress;\n\n    xhr.send(null);\n\n    return xhrId;\n  }\n\n  onProgress(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    if (pendingRequest.onProgress) {\n      pendingRequest.onProgress(evt);\n    }\n  }\n\n  onStateChange(xhrId, evt) {\n    const pendingRequest = this.pendingRequests[xhrId];\n    if (!pendingRequest) {\n      // Maybe abortRequest was called...\n      return;\n    }\n\n    const xhr = pendingRequest.xhr;\n    if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n      pendingRequest.onHeadersReceived();\n      delete pendingRequest.onHeadersReceived;\n    }\n\n    if (xhr.readyState !== 4) {\n      return;\n    }\n\n    if (!(xhrId in this.pendingRequests)) {\n      // The XHR request might have been aborted in onHeadersReceived()\n      // callback, in which case we should abort request.\n      return;\n    }\n\n    delete this.pendingRequests[xhrId];\n\n    // Success status == 0 can be on ftp, file and other protocols.\n    if (xhr.status === 0 && this.isHttp) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n    const xhrStatus = xhr.status || OK_RESPONSE;\n\n    // From http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.2:\n    // \"A server MAY ignore the Range header\". This means it's possible to\n    // get a 200 rather than a 206 response from a range request.\n    const ok_response_on_range_request =\n      xhrStatus === OK_RESPONSE &&\n      pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n\n    if (\n      !ok_response_on_range_request &&\n      xhrStatus !== pendingRequest.expectedStatus\n    ) {\n      if (pendingRequest.onError) {\n        pendingRequest.onError(xhr.status);\n      }\n      return;\n    }\n\n    const chunk = getArrayBuffer(xhr);\n    if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n      const rangeHeader = xhr.getResponseHeader(\"Content-Range\");\n      const matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n      pendingRequest.onDone({\n        begin: parseInt(matches[1], 10),\n        chunk,\n      });\n    } else if (chunk) {\n      pendingRequest.onDone({\n        begin: 0,\n        chunk,\n      });\n    } else if (pendingRequest.onError) {\n      pendingRequest.onError(xhr.status);\n    }\n  }\n\n  getRequestXhr(xhrId) {\n    return this.pendingRequests[xhrId].xhr;\n  }\n\n  isPendingRequest(xhrId) {\n    return xhrId in this.pendingRequests;\n  }\n\n  abortRequest(xhrId) {\n    const xhr = this.pendingRequests[xhrId].xhr;\n    delete this.pendingRequests[xhrId];\n    xhr.abort();\n  }\n}\n\n/** @implements {IPDFStream} */\nclass PDFNetworkStream {\n  constructor(source) {\n    this._source = source;\n    this._manager = new NetworkManager(source.url, {\n      httpHeaders: source.httpHeaders,\n      withCredentials: source.withCredentials,\n    });\n    this._rangeChunkSize = source.rangeChunkSize;\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  _onRangeRequestReaderClosed(reader) {\n    const i = this._rangeRequestReaders.indexOf(reader);\n    if (i >= 0) {\n      this._rangeRequestReaders.splice(i, 1);\n    }\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFNetworkStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFNetworkStreamFullRequestReader(\n      this._manager,\n      this._source\n    );\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    const reader = new PDFNetworkStreamRangeRequestReader(\n      this._manager,\n      begin,\n      end\n    );\n    reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFNetworkStreamFullRequestReader {\n  constructor(manager, source) {\n    this._manager = manager;\n\n    const args = {\n      onHeadersReceived: this._onHeadersReceived.bind(this),\n      onDone: this._onDone.bind(this),\n      onError: this._onError.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._url = source.url;\n    this._fullRequestId = manager.requestFull(args);\n    this._headersReceivedCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._contentLength = source.length; // Optional\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    this._isStreamingSupported = false;\n    this._isRangeSupported = false;\n\n    this._cachedChunks = [];\n    this._requests = [];\n    this._done = false;\n    this._storedError = undefined;\n    this._filename = null;\n\n    this.onProgress = null;\n  }\n\n  _onHeadersReceived() {\n    const fullRequestXhrId = this._fullRequestId;\n    const fullRequestXhr = this._manager.getRequestXhr(fullRequestXhrId);\n\n    const getResponseHeader = name => {\n      return fullRequestXhr.getResponseHeader(name);\n    };\n    const {\n      allowRangeRequests,\n      suggestedLength,\n    } = validateRangeRequestCapabilities({\n      getResponseHeader,\n      isHttp: this._manager.isHttp,\n      rangeChunkSize: this._rangeChunkSize,\n      disableRange: this._disableRange,\n    });\n\n    if (allowRangeRequests) {\n      this._isRangeSupported = true;\n    }\n    // Setting right content length.\n    this._contentLength = suggestedLength || this._contentLength;\n\n    this._filename = extractFilenameFromHeader(getResponseHeader);\n\n    if (this._isRangeSupported) {\n      // NOTE: by cancelling the full request, and then issuing range\n      // requests, there will be an issue for sites where you can only\n      // request the pdf once. However, if this is the case, then the\n      // server should not be returning that it can support range requests.\n      this._manager.abortRequest(fullRequestXhrId);\n    }\n\n    this._headersReceivedCapability.resolve();\n  }\n\n  _onDone(args) {\n    if (args) {\n      if (this._requests.length > 0) {\n        const requestCapability = this._requests.shift();\n        requestCapability.resolve({ value: args.chunk, done: false });\n      } else {\n        this._cachedChunks.push(args.chunk);\n      }\n    }\n    this._done = true;\n    if (this._cachedChunks.length > 0) {\n      return;\n    }\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n  }\n\n  _onError(status) {\n    const url = this._url;\n    const exception = createResponseStatusError(status, url);\n    this._storedError = exception;\n    this._headersReceivedCapability.reject(exception);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.reject(exception);\n    });\n    this._requests = [];\n    this._cachedChunks = [];\n  }\n\n  _onProgress(data) {\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: data.loaded,\n        total: data.lengthComputable ? data.total : this._contentLength,\n      });\n    }\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get headersReady() {\n    return this._headersReceivedCapability.promise;\n  }\n\n  async read() {\n    if (this._storedError) {\n      throw this._storedError;\n    }\n    if (this._cachedChunks.length > 0) {\n      const chunk = this._cachedChunks.shift();\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._headersReceivedCapability.reject(reason);\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._fullRequestId)) {\n      this._manager.abortRequest(this._fullRequestId);\n    }\n    this._fullRequestReader = null;\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFNetworkStreamRangeRequestReader {\n  constructor(manager, begin, end) {\n    this._manager = manager;\n    const args = {\n      onDone: this._onDone.bind(this),\n      onProgress: this._onProgress.bind(this),\n    };\n    this._requestId = manager.requestRange(begin, end, args);\n    this._requests = [];\n    this._queuedChunk = null;\n    this._done = false;\n\n    this.onProgress = null;\n    this.onClosed = null;\n  }\n\n  _close() {\n    if (this.onClosed) {\n      this.onClosed(this);\n    }\n  }\n\n  _onDone(data) {\n    const chunk = data.chunk;\n    if (this._requests.length > 0) {\n      const requestCapability = this._requests.shift();\n      requestCapability.resolve({ value: chunk, done: false });\n    } else {\n      this._queuedChunk = chunk;\n    }\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    this._close();\n  }\n\n  _onProgress(evt) {\n    if (!this.isStreamingSupported && this.onProgress) {\n      this.onProgress({\n        loaded: evt.loaded,\n      });\n    }\n  }\n\n  get isStreamingSupported() {\n    return false;\n  }\n\n  async read() {\n    if (this._queuedChunk !== null) {\n      const chunk = this._queuedChunk;\n      this._queuedChunk = null;\n      return { value: chunk, done: false };\n    }\n    if (this._done) {\n      return { value: undefined, done: true };\n    }\n    const requestCapability = createPromiseCapability();\n    this._requests.push(requestCapability);\n    return requestCapability.promise;\n  }\n\n  cancel(reason) {\n    this._done = true;\n    this._requests.forEach(function (requestCapability) {\n      requestCapability.resolve({ value: undefined, done: true });\n    });\n    this._requests = [];\n    if (this._manager.isPendingRequest(this._requestId)) {\n      this._manager.abortRequest(this._requestId);\n    }\n    this._close();\n  }\n}\n\nexport { PDFNetworkStream };\n","/* Copyright 2012 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint no-var: error */\n\nimport {\n  AbortException,\n  assert,\n  createPromiseCapability,\n} from \"../shared/util.js\";\nimport {\n  createResponseStatusError,\n  extractFilenameFromHeader,\n  validateRangeRequestCapabilities,\n  validateResponseStatus,\n} from \"./network_utils.js\";\n\nif (typeof PDFJSDev !== \"undefined\" && PDFJSDev.test(\"MOZCENTRAL\")) {\n  throw new Error(\n    'Module \"./fetch_stream.js\" shall not be used with MOZCENTRAL builds.'\n  );\n}\n\nfunction createFetchOptions(headers, withCredentials, abortController) {\n  return {\n    method: \"GET\",\n    headers,\n    signal: abortController && abortController.signal,\n    mode: \"cors\",\n    credentials: withCredentials ? \"include\" : \"same-origin\",\n    redirect: \"follow\",\n  };\n}\n\nfunction createHeaders(httpHeaders) {\n  const headers = new Headers();\n  for (const property in httpHeaders) {\n    const value = httpHeaders[property];\n    if (typeof value === \"undefined\") {\n      continue;\n    }\n    headers.append(property, value);\n  }\n  return headers;\n}\n\n/** @implements {IPDFStream} */\nclass PDFFetchStream {\n  constructor(source) {\n    this.source = source;\n    this.isHttp = /^https?:/i.test(source.url);\n    this.httpHeaders = (this.isHttp && source.httpHeaders) || {};\n\n    this._fullRequestReader = null;\n    this._rangeRequestReaders = [];\n  }\n\n  get _progressiveDataLength() {\n    return this._fullRequestReader ? this._fullRequestReader._loaded : 0;\n  }\n\n  getFullReader() {\n    assert(\n      !this._fullRequestReader,\n      \"PDFFetchStream.getFullReader can only be called once.\"\n    );\n    this._fullRequestReader = new PDFFetchStreamReader(this);\n    return this._fullRequestReader;\n  }\n\n  getRangeReader(begin, end) {\n    if (end <= this._progressiveDataLength) {\n      return null;\n    }\n    const reader = new PDFFetchStreamRangeReader(this, begin, end);\n    this._rangeRequestReaders.push(reader);\n    return reader;\n  }\n\n  cancelAllRequests(reason) {\n    if (this._fullRequestReader) {\n      this._fullRequestReader.cancel(reason);\n    }\n    const readers = this._rangeRequestReaders.slice(0);\n    readers.forEach(function (reader) {\n      reader.cancel(reason);\n    });\n  }\n}\n\n/** @implements {IPDFStreamReader} */\nclass PDFFetchStreamReader {\n  constructor(stream) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    this._filename = null;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._contentLength = source.length;\n    this._headersCapability = createPromiseCapability();\n    this._disableRange = source.disableRange || false;\n    this._rangeChunkSize = source.rangeChunkSize;\n    if (!this._rangeChunkSize && !this._disableRange) {\n      this._disableRange = true;\n    }\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n    this._isStreamingSupported = !source.disableStream;\n    this._isRangeSupported = !source.disableRange;\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._reader = response.body.getReader();\n        this._headersCapability.resolve();\n\n        const getResponseHeader = name => {\n          return response.headers.get(name);\n        };\n        const {\n          allowRangeRequests,\n          suggestedLength,\n        } = validateRangeRequestCapabilities({\n          getResponseHeader,\n          isHttp: this._stream.isHttp,\n          rangeChunkSize: this._rangeChunkSize,\n          disableRange: this._disableRange,\n        });\n\n        this._isRangeSupported = allowRangeRequests;\n        // Setting right content length.\n        this._contentLength = suggestedLength || this._contentLength;\n\n        this._filename = extractFilenameFromHeader(getResponseHeader);\n\n        // We need to stop reading when range is supported and streaming is\n        // disabled.\n        if (!this._isStreamingSupported && this._isRangeSupported) {\n          this.cancel(new AbortException(\"Streaming is disabled.\"));\n        }\n      })\n      .catch(this._headersCapability.reject);\n\n    this.onProgress = null;\n  }\n\n  get headersReady() {\n    return this._headersCapability.promise;\n  }\n\n  get filename() {\n    return this._filename;\n  }\n\n  get contentLength() {\n    return this._contentLength;\n  }\n\n  get isRangeSupported() {\n    return this._isRangeSupported;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._headersCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({\n        loaded: this._loaded,\n        total: this._contentLength,\n      });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\n/** @implements {IPDFStreamRangeReader} */\nclass PDFFetchStreamRangeReader {\n  constructor(stream, begin, end) {\n    this._stream = stream;\n    this._reader = null;\n    this._loaded = 0;\n    const source = stream.source;\n    this._withCredentials = source.withCredentials || false;\n    this._readCapability = createPromiseCapability();\n    this._isStreamingSupported = !source.disableStream;\n\n    if (typeof AbortController !== \"undefined\") {\n      this._abortController = new AbortController();\n    }\n\n    this._headers = createHeaders(this._stream.httpHeaders);\n    this._headers.append(\"Range\", `bytes=${begin}-${end - 1}`);\n\n    const url = source.url;\n    fetch(\n      url,\n      createFetchOptions(\n        this._headers,\n        this._withCredentials,\n        this._abortController\n      )\n    )\n      .then(response => {\n        if (!validateResponseStatus(response.status)) {\n          throw createResponseStatusError(response.status, url);\n        }\n        this._readCapability.resolve();\n        this._reader = response.body.getReader();\n      })\n      .catch(reason => {\n        if (reason && reason.name === \"AbortError\") {\n          return;\n        }\n        throw reason;\n      });\n\n    this.onProgress = null;\n  }\n\n  get isStreamingSupported() {\n    return this._isStreamingSupported;\n  }\n\n  async read() {\n    await this._readCapability.promise;\n    const { value, done } = await this._reader.read();\n    if (done) {\n      return { value, done };\n    }\n    this._loaded += value.byteLength;\n    if (this.onProgress) {\n      this.onProgress({ loaded: this._loaded });\n    }\n    const buffer = new Uint8Array(value).buffer;\n    return { value: buffer, done: false };\n  }\n\n  cancel(reason) {\n    if (this._reader) {\n      this._reader.cancel(reason);\n    }\n    if (this._abortController) {\n      this._abortController.abort();\n    }\n  }\n}\n\nexport { PDFFetchStream };\n"],"sourceRoot":""},"metadata":{},"sourceType":"script"}