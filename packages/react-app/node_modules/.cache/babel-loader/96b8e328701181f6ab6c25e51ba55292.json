{"ast":null,"code":"import { Contract } from 'ethers';\nimport { ERC20Interface } from '../constants';\nimport { useCall } from './useCall';\n/**\n * @public\n */\n\nexport function useTokenBalance(tokenAddress, address) {\n  let queryParams = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var _a;\n\n  const {\n    value: tokenBalance\n  } = (_a = useCall(address && tokenAddress && {\n    contract: new Contract(tokenAddress, ERC20Interface),\n    method: 'balanceOf',\n    args: [address]\n  }, queryParams)) !== null && _a !== void 0 ? _a : {};\n  return tokenBalance === null || tokenBalance === void 0 ? void 0 : tokenBalance[0];\n}","map":{"version":3,"sources":["../../../../src/hooks/useTokenBalance.ts"],"names":[],"mappings":"AACA,SAAS,QAAT,QAAyB,QAAzB;AACA,SAAS,cAAT,QAA+B,cAA/B;AAGA,SAAS,OAAT,QAAwB,WAAxB;AAEA;;AAEG;;AACH,OAAM,SAAU,eAAV,CACJ,YADI,EAEJ,OAFI,EAGyB;EAAA,IAA7B,WAA6B,uEAAF,EAAE;;;;EAE7B,MAAM;IAAE,KAAK,EAAE;EAAT,IACJ,CAAA,EAAA,GAAA,OAAO,CACL,OAAO,IACL,YADF,IACkB;IACd,QAAQ,EAAE,IAAI,QAAJ,CAAa,YAAb,EAA2B,cAA3B,CADI;IAEd,MAAM,EAAE,WAFM;IAGd,IAAI,EAAE,CAAC,OAAD;EAHQ,CAFb,EAOL,WAPK,CAAP,MAQC,IARD,IAQC,EAAA,KAAA,KAAA,CARD,GAQC,EARD,GAQK,EATP;EAUA,OAAO,YAAY,KAAA,IAAZ,IAAA,YAAY,KAAA,KAAA,CAAZ,GAAY,KAAA,CAAZ,GAAA,YAAY,CAAG,CAAH,CAAnB;AACD","sourceRoot":"","sourcesContent":["import { Contract } from 'ethers';\nimport { ERC20Interface } from '../constants';\nimport { useCall } from './useCall';\n/**\n * @public\n */\nexport function useTokenBalance(tokenAddress, address, queryParams = {}) {\n    var _a;\n    const { value: tokenBalance } = (_a = useCall(address &&\n        tokenAddress && {\n        contract: new Contract(tokenAddress, ERC20Interface),\n        method: 'balanceOf',\n        args: [address],\n    }, queryParams)) !== null && _a !== void 0 ? _a : {};\n    return tokenBalance === null || tokenBalance === void 0 ? void 0 : tokenBalance[0];\n}\n//# sourceMappingURL=useTokenBalance.js.map"]},"metadata":{},"sourceType":"module"}