{"ast":null,"code":"import { createContext, useContext } from 'react';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport const MultiChainStatesContext = createContext({\n  chains: {},\n  dispatchCalls: () => undefined\n});\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function useMultiChainStates() {\n  return useContext(MultiChainStatesContext);\n}","map":{"version":3,"sources":["../../../../../../src/providers/chainState/multiChainStates/context.ts"],"names":[],"mappings":"AAAA,SAAS,aAAT,EAAwB,UAAxB,QAA0C,OAA1C;AAsBA;;AAEG;;AACH,OAAO,MAAM,uBAAuB,GAAG,aAAa,CAGjD;EACD,MAAM,EAAE,EADP;EAED,aAAa,EAAE,MAAM;AAFpB,CAHiD,CAA7C;AAQP;;AAEG;;AACH,OAAM,SAAU,mBAAV,GAA6B;EACjC,OAAO,UAAU,CAAC,uBAAD,CAAjB;AACD","sourceRoot":"","sourcesContent":["import { createContext, useContext } from 'react';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport const MultiChainStatesContext = createContext({\n    chains: {},\n    dispatchCalls: () => undefined,\n});\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function useMultiChainStates() {\n    return useContext(MultiChainStatesContext);\n}\n//# sourceMappingURL=context.js.map"]},"metadata":{},"sourceType":"module"}