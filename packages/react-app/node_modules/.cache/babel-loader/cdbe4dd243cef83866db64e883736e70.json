{"ast":null,"code":"import { invariant } from \"../../utilities/globals/index.js\";\nimport { useContext } from 'react';\nimport { getApolloContext } from \"../context/index.js\";\nexport function useApolloClient(override) {\n  var context = useContext(getApolloContext());\n  var client = override || context.client;\n  __DEV__ ? invariant(!!client, 'Could not find \"client\" in the context or passed in as an option. ' + 'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' + 'instance in via options.') : invariant(!!client, 29);\n  return client;\n}","map":{"version":3,"sources":["../../../src/react/hooks/useApolloClient.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,QAA0B,kCAA1B;AACA,SAAS,UAAT,QAA2B,OAA3B;AAEA,SAAS,gBAAT,QAAiC,qBAAjC;AAEA,OAAM,SAAU,eAAV,CACJ,QADI,EAC2B;EAE/B,IAAM,OAAO,GAAG,UAAU,CAAC,gBAAgB,EAAjB,CAA1B;EACA,IAAM,MAAM,GAAG,QAAQ,IAAI,OAAO,CAAC,MAAnC;EACA,OAAA,GACE,SAAQ,CACR,CAAA,CAAA,MADQ,EACR,uEACA,0EADA,GAEA,0BAHQ,CADV,GAKE,SAAA,CAAA,CAAA,CAAA,MAAA,EAAA,EAAA,CALF;EAOA,OAAO,MAAP;AACD","sourcesContent":["import { invariant } from '../../utilities/globals';\nimport { useContext } from 'react';\nimport { ApolloClient } from '../../core';\nimport { getApolloContext } from '../context';\n\nexport function useApolloClient(\n  override?: ApolloClient<object>,\n): ApolloClient<object> {\n  const context = useContext(getApolloContext());\n  const client = override || context.client;\n  invariant(\n    !!client,\n    'Could not find \"client\" in the context or passed in as an option. ' +\n    'Wrap the root component in an <ApolloProvider>, or pass an ApolloClient ' +\n    'instance in via options.',\n  );\n\n  return client;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}