{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\n/**\n * @public\n */\n\nexport function useLookupAddress() {\n  const {\n    account,\n    library\n  } = useEthers();\n  const [ens, setEns] = useState();\n  useEffect(() => {\n    let mounted = true;\n\n    if (account && library) {\n      library === null || library === void 0 ? void 0 : library.lookupAddress(account).then(name => {\n        if (mounted) {\n          setEns(name);\n        }\n      }).catch(() => setEns(null));\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [account, library]);\n  return ens;\n}","map":{"version":3,"sources":["../../../../src/hooks/useLookupAddress.ts"],"names":[],"mappings":"AAAA,SAAS,SAAT,EAAoB,QAApB,QAAoC,OAApC;AACA,SAAS,SAAT,QAA0B,aAA1B;AAEA;;AAEG;;AACH,OAAM,SAAU,gBAAV,GAA0B;EAC9B,MAAM;IAAE,OAAF;IAAW;EAAX,IAAuB,SAAS,EAAtC;EACA,MAAM,CAAC,GAAD,EAAM,MAAN,IAAgB,QAAQ,EAA9B;EAEA,SAAS,CAAC,MAAK;IACb,IAAI,OAAO,GAAG,IAAd;;IAEA,IAAI,OAAO,IAAI,OAAf,EAAwB;MACtB,OAAO,KAAA,IAAP,IAAA,OAAO,KAAA,KAAA,CAAP,GAAO,KAAA,CAAP,GAAA,OAAO,CACH,aADJ,CACkB,OADlB,EAEG,IAFH,CAES,IAAD,IAAS;QACb,IAAI,OAAJ,EAAa;UACX,MAAM,CAAC,IAAD,CAAN;QACD;MACF,CANH,EAOG,KAPH,CAOS,MAAM,MAAM,CAAC,IAAD,CAPrB,CAAA;IAQD;;IAED,OAAO,MAAK;MACV,OAAO,GAAG,KAAV;IACD,CAFD;EAGD,CAjBQ,EAiBN,CAAC,OAAD,EAAU,OAAV,CAjBM,CAAT;EAmBA,OAAO,GAAP;AACD","sourceRoot":"","sourcesContent":["import { useEffect, useState } from 'react';\nimport { useEthers } from './useEthers';\n/**\n * @public\n */\nexport function useLookupAddress() {\n    const { account, library } = useEthers();\n    const [ens, setEns] = useState();\n    useEffect(() => {\n        let mounted = true;\n        if (account && library) {\n            library === null || library === void 0 ? void 0 : library.lookupAddress(account).then((name) => {\n                if (mounted) {\n                    setEns(name);\n                }\n            }).catch(() => setEns(null));\n        }\n        return () => {\n            mounted = false;\n        };\n    }, [account, library]);\n    return ens;\n}\n//# sourceMappingURL=useLookupAddress.js.map"]},"metadata":{},"sourceType":"module"}