{"ast":null,"code":"import { useReadonlyNetworks } from '../providers/network';\nimport { useChainId } from './useChainId';\n/**\n * Gets a readonly provider for specific chainId.\n * @param opts.chainId Requested chainId. If not provided, the currently connected wallet's chainId will be used or the default one from the config.\n * @returns An ethers.js provider or undefined.\n * @public\n */\n\nexport function useReadonlyNetwork() {\n  let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const chainId = useChainId({\n    queryParams: {\n      chainId: opts.chainId\n    }\n  });\n  const providers = useReadonlyNetworks();\n  return providers[chainId] !== undefined && chainId !== undefined ? {\n    provider: providers[chainId],\n    chainId: chainId\n  } : undefined;\n}","map":{"version":3,"sources":["../../../../src/hooks/useReadonlyProvider.tsx"],"names":[],"mappings":"AACA,SAAS,mBAAT,QAAoC,sBAApC;AACA,SAAS,UAAT,QAA2B,cAA3B;AAYA;;;;;AAKG;;AACH,OAAM,SAAU,kBAAV,GAAkE;EAAA,IAArC,IAAqC,uEAAF,EAAE;EACtE,MAAM,OAAO,GAAG,UAAU,CAAC;IAAE,WAAW,EAAE;MAAE,OAAO,EAAE,IAAI,CAAC;IAAhB;EAAf,CAAD,CAA1B;EACA,MAAM,SAAS,GAAG,mBAAmB,EAArC;EACA,OAAO,SAAS,CAAC,OAAD,CAAT,KAAkC,SAAlC,IAA+C,OAAO,KAAK,SAA3D,GACH;IACE,QAAQ,EAAE,SAAS,CAAC,OAAD,CADrB;IAEE,OAAO,EAAE;EAFX,CADG,GAKH,SALJ;AAMD","sourceRoot":"","sourcesContent":["import { useReadonlyNetworks } from '../providers/network';\nimport { useChainId } from './useChainId';\n/**\n * Gets a readonly provider for specific chainId.\n * @param opts.chainId Requested chainId. If not provided, the currently connected wallet's chainId will be used or the default one from the config.\n * @returns An ethers.js provider or undefined.\n * @public\n */\nexport function useReadonlyNetwork(opts = {}) {\n    const chainId = useChainId({ queryParams: { chainId: opts.chainId } });\n    const providers = useReadonlyNetworks();\n    return providers[chainId] !== undefined && chainId !== undefined\n        ? {\n            provider: providers[chainId],\n            chainId: chainId,\n        }\n        : undefined;\n}\n//# sourceMappingURL=useReadonlyProvider.js.map"]},"metadata":{},"sourceType":"module"}