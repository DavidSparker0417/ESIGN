{"ast":null,"code":"import { throwServerError } from \"../utils/index.js\";\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function parseAndCheckHttpResponse(operations) {\n  return function (response) {\n    return response.text().then(function (bodyText) {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        var parseError = err;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    }).then(function (result) {\n      if (response.status >= 300) {\n        throwServerError(response, result, \"Response not successful: Received status code \".concat(response.status));\n      }\n\n      if (!Array.isArray(result) && !hasOwnProperty.call(result, 'data') && !hasOwnProperty.call(result, 'errors')) {\n        throwServerError(response, result, \"Server response was missing for query '\".concat(Array.isArray(operations) ? operations.map(function (op) {\n          return op.operationName;\n        }) : operations.operationName, \"'.\"));\n      }\n\n      return result;\n    });\n  };\n}","map":{"version":3,"sources":["../../../src/link/http/parseAndCheckHttpResponse.ts"],"names":[],"mappings":"AACA,SAAS,gBAAT,QAAiC,mBAAjC;AAEQ,IAAA,cAAc,GAAK,MAAM,CAAC,SAAP,CAAL,cAAd;AAQR,OAAM,SAAU,yBAAV,CACJ,UADI,EAC+B;EAEnC,OAAO,UAAC,QAAD,EAAmB;IAAK,OAAA,QAAQ,CACpC,IAD4B,GAE5B,IAF4B,CAEvB,UAAA,QAAA,EAAQ;MACZ,IAAI;QACF,OAAO,IAAI,CAAC,KAAL,CAAW,QAAX,CAAP;MACD,CAFD,CAEE,OAAO,GAAP,EAAY;QACZ,IAAM,UAAU,GAAG,GAAnB;QACA,UAAU,CAAC,IAAX,GAAkB,kBAAlB;QACA,UAAU,CAAC,QAAX,GAAsB,QAAtB;QACA,UAAU,CAAC,UAAX,GAAwB,QAAQ,CAAC,MAAjC;QACA,UAAU,CAAC,QAAX,GAAsB,QAAtB;QACA,MAAM,UAAN;MACD;IACF,CAb4B,EAc5B,IAd4B,CAcvB,UAAC,MAAD,EAAY;MAChB,IAAI,QAAQ,CAAC,MAAT,IAAmB,GAAvB,EAA4B;QAE1B,gBAAgB,CACd,QADc,EAEd,MAFc,EAGd,iDAAA,MAAA,CAAiD,QAAQ,CAAC,MAA1D,CAHc,CAAhB;MAKD;;MAED,IACE,CAAC,KAAK,CAAC,OAAN,CAAc,MAAd,CAAD,IACA,CAAC,cAAc,CAAC,IAAf,CAAoB,MAApB,EAA4B,MAA5B,CADD,IAEA,CAAC,cAAc,CAAC,IAAf,CAAoB,MAApB,EAA4B,QAA5B,CAHH,EAIE;QAEA,gBAAgB,CACd,QADc,EAEd,MAFc,EAGd,0CAAA,MAAA,CACE,KAAK,CAAC,OAAN,CAAc,UAAd,IACI,UAAU,CAAC,GAAX,CAAe,UAAA,EAAA,EAAE;UAAI,OAAA,EAAE,CAAF,aAAA;QAAgB,CAArC,CADJ,GAEI,UAAU,CAAC,aAHjB,EAG8B,IAH9B,CAHc,CAAhB;MASD;;MACD,OAAO,MAAP;IAxC2B,CAAA,CAAA;EAyC3B,CAzCJ;AA0CD","sourcesContent":["import { Operation } from '../core';\nimport { throwServerError } from '../utils';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport function parseAndCheckHttpResponse(\n  operations: Operation | Operation[],\n) {\n  return (response: Response) => response\n    .text()\n    .then(bodyText => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        const parseError = err as ServerParseError;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    })\n    .then((result: any) => {\n      if (response.status >= 300) {\n        // Network error\n        throwServerError(\n          response,\n          result,\n          `Response not successful: Received status code ${response.status}`,\n        );\n      }\n\n      if (\n        !Array.isArray(result) &&\n        !hasOwnProperty.call(result, 'data') &&\n        !hasOwnProperty.call(result, 'errors')\n      ) {\n        // Data error\n        throwServerError(\n          response,\n          result,\n          `Server response was missing for query '${\n            Array.isArray(operations)\n              ? operations.map(op => op.operationName)\n              : operations.operationName\n          }'.`,\n        );\n      }\n      return result;\n    });\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}