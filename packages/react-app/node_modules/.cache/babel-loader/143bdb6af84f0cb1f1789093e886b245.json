{"ast":null,"code":"export function filterInPlace(array, test, context) {\n  var target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}","map":{"version":3,"sources":["../../../src/utilities/common/filterInPlace.ts"],"names":[],"mappings":"AAAA,OAAM,SAAU,aAAV,CACJ,KADI,EAEJ,IAFI,EAGJ,OAHI,EAGS;EAEb,IAAI,MAAM,GAAG,CAAb;EACA,KAAK,CAAC,OAAN,CAAc,UAAU,IAAV,EAAgB,CAAhB,EAAiB;IAC7B,IAAI,IAAI,CAAC,IAAL,CAAU,IAAV,EAAgB,IAAhB,EAAsB,CAAtB,EAAyB,KAAzB,CAAJ,EAAqC;MACnC,KAAK,CAAC,MAAM,EAAP,CAAL,GAAkB,IAAlB;IACD;EACF,CAJD,EAIG,OAJH;EAKA,KAAK,CAAC,MAAN,GAAe,MAAf;EACA,OAAO,KAAP;AACD","sourcesContent":["export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}