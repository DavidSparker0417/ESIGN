{"ast":null,"code":"import { useConfig, useNetwork } from '../providers';\nimport { useReadonlyNetwork } from './useReadonlyProvider';\n/**\n * @public\n */\n\nexport function useEthers() {\n  const {\n    network: {\n      provider: networkProvider,\n      chainId,\n      accounts,\n      errors\n    },\n    deactivate,\n    activate,\n    activateBrowserWallet,\n    isLoading\n  } = useNetwork();\n  const {\n    networks\n  } = useConfig();\n  const supportedChainIds = networks === null || networks === void 0 ? void 0 : networks.map(network => network.chainId);\n  const isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0;\n  const unsupportedChainIdError = new Error(`Unsupported chain id: ${chainId}. Supported chain ids are: ${supportedChainIds}.`);\n  unsupportedChainIdError.name = 'UnsupportedChainIdError';\n  const error = isUnsupportedChainId ? unsupportedChainIdError : errors[errors.length - 1];\n  const readonlyNetwork = useReadonlyNetwork();\n  const provider = networkProvider !== null && networkProvider !== void 0 ? networkProvider : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.provider;\n  return {\n    connector: undefined,\n    library: provider,\n    chainId: isUnsupportedChainId ? undefined : networkProvider !== undefined ? chainId : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId,\n    account: accounts[0],\n    active: !!provider,\n    activate: async providerOrConnector => {\n      if ('getProvider' in providerOrConnector) {\n        console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.');\n        await providerOrConnector.activate();\n        return activate(await providerOrConnector.getProvider());\n      }\n\n      return activate(providerOrConnector);\n    },\n    activateBrowserWallet,\n    deactivate,\n    setError: () => {\n      throw new Error('setError is deprecated');\n    },\n    error,\n    isLoading\n  };\n}","map":{"version":3,"sources":["../../../../src/hooks/useEthers.ts"],"names":[],"mappings":"AACA,SAAS,SAAT,EAAoB,UAApB,QAAsC,cAAtC;AACA,SAAS,kBAAT,QAAmC,uBAAnC;AA6BA;;AAEG;;AACH,OAAM,SAAU,SAAV,GAAmB;EACvB,MAAM;IACJ,OAAO,EAAE;MAAE,QAAQ,EAAE,eAAZ;MAA6B,OAA7B;MAAsC,QAAtC;MAAgD;IAAhD,CADL;IAEJ,UAFI;IAGJ,QAHI;IAIJ,qBAJI;IAKJ;EALI,IAMF,UAAU,EANd;EAQA,MAAM;IAAE;EAAF,IAAe,SAAS,EAA9B;EACA,MAAM,iBAAiB,GAAG,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,GAAV,CAAe,OAAD,IAAa,OAAO,CAAC,OAAnC,CAA1B;EACA,MAAM,oBAAoB,GAAG,OAAO,IAAI,iBAAX,IAAgC,iBAAiB,CAAC,OAAlB,CAA0B,OAA1B,IAAqC,CAAlG;EACA,MAAM,uBAAuB,GAAG,IAAI,KAAJ,CAC9B,yBAAyB,OAAO,8BAA8B,iBAAiB,GADjD,CAAhC;EAGA,uBAAuB,CAAC,IAAxB,GAA+B,yBAA/B;EACA,MAAM,KAAK,GAAG,oBAAoB,GAAG,uBAAH,GAA6B,MAAM,CAAC,MAAM,CAAC,MAAP,GAAgB,CAAjB,CAArE;EAEA,MAAM,eAAe,GAAG,kBAAkB,EAA1C;EACA,MAAM,QAAQ,GAAG,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAA,eAAA,GAAoB,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,QAAtD;EAEA,OAAO;IACL,SAAS,EAAE,SADN;IAEL,OAAO,EAAE,QAFJ;IAGL,OAAO,EAAE,oBAAoB,GAAG,SAAH,GAAe,eAAe,KAAK,SAApB,GAAgC,OAAhC,GAA0C,eAAe,KAAA,IAAf,IAAA,eAAe,KAAA,KAAA,CAAf,GAAe,KAAA,CAAf,GAAA,eAAe,CAAE,OAHlG;IAIL,OAAO,EAAE,QAAQ,CAAC,CAAD,CAJZ;IAKL,MAAM,EAAE,CAAC,CAAC,QALL;IAML,QAAQ,EAAE,MAAO,mBAAP,IAAkD;MAC1D,IAAI,iBAAiB,mBAArB,EAA0C;QACxC,OAAO,CAAC,IAAR,CAAa,gFAAb;QACA,MAAM,mBAAmB,CAAC,QAApB,EAAN;QACA,OAAO,QAAQ,CAAC,MAAM,mBAAmB,CAAC,WAApB,EAAP,CAAf;MACD;;MACD,OAAO,QAAQ,CAAC,mBAAD,CAAf;IACD,CAbI;IAcL,qBAdK;IAeL,UAfK;IAiBL,QAAQ,EAAE,MAAK;MACb,MAAM,IAAI,KAAJ,CAAU,wBAAV,CAAN;IACD,CAnBI;IAqBL,KArBK;IAsBL;EAtBK,CAAP;AAwBD","sourceRoot":"","sourcesContent":["import { useConfig, useNetwork } from '../providers';\nimport { useReadonlyNetwork } from './useReadonlyProvider';\n/**\n * @public\n */\nexport function useEthers() {\n    const { network: { provider: networkProvider, chainId, accounts, errors }, deactivate, activate, activateBrowserWallet, isLoading, } = useNetwork();\n    const { networks } = useConfig();\n    const supportedChainIds = networks === null || networks === void 0 ? void 0 : networks.map((network) => network.chainId);\n    const isUnsupportedChainId = chainId && supportedChainIds && supportedChainIds.indexOf(chainId) < 0;\n    const unsupportedChainIdError = new Error(`Unsupported chain id: ${chainId}. Supported chain ids are: ${supportedChainIds}.`);\n    unsupportedChainIdError.name = 'UnsupportedChainIdError';\n    const error = isUnsupportedChainId ? unsupportedChainIdError : errors[errors.length - 1];\n    const readonlyNetwork = useReadonlyNetwork();\n    const provider = networkProvider !== null && networkProvider !== void 0 ? networkProvider : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.provider;\n    return {\n        connector: undefined,\n        library: provider,\n        chainId: isUnsupportedChainId ? undefined : networkProvider !== undefined ? chainId : readonlyNetwork === null || readonlyNetwork === void 0 ? void 0 : readonlyNetwork.chainId,\n        account: accounts[0],\n        active: !!provider,\n        activate: async (providerOrConnector) => {\n            if ('getProvider' in providerOrConnector) {\n                console.warn('Using web3-react connectors is deprecated and may lead to unexpected behavior.');\n                await providerOrConnector.activate();\n                return activate(await providerOrConnector.getProvider());\n            }\n            return activate(providerOrConnector);\n        },\n        activateBrowserWallet,\n        deactivate,\n        setError: () => {\n            throw new Error('setError is deprecated');\n        },\n        error,\n        isLoading,\n    };\n}\n//# sourceMappingURL=useEthers.js.map"]},"metadata":{},"sourceType":"module"}