{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on an unstyled component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `componentsProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\n\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps, {\n      className: joinedClasses\n    });\n\n    if (joinedClasses.length === 0) {\n      delete props.className;\n    }\n\n    return {\n      props,\n      internalRef: undefined\n    };\n  } // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n  const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className, internalSlotProps == null ? void 0 : internalSlotProps.className);\n\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers, {\n    className: joinedClasses\n  });\n\n  if (joinedClasses.length === 0) {\n    delete props.className;\n  }\n\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}","map":{"version":3,"names":["_extends","clsx","extractEventHandlers","omitEventHandlers","mergeSlotProps","parameters","getSlotProps","additionalProps","externalSlotProps","externalForwardedProps","className","joinedClasses","props","length","internalRef","undefined","eventHandlers","componentsPropsWithoutEventHandlers","otherPropsWithoutEventHandlers","internalSlotProps","ref"],"sources":["D:/Working/Freelancing/18.PWA/Project/esign/node_modules/@mui/base/utils/mergeSlotProps.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport clsx from 'clsx';\nimport extractEventHandlers from './extractEventHandlers';\nimport omitEventHandlers from './omitEventHandlers';\n\n/**\n * Merges the slot component internal props (usually coming from a hook)\n * with the externally provided ones.\n *\n * The merge order is (the latter overrides the former):\n * 1. The internal props (specified as a getter function to work with get*Props hook result)\n * 2. Additional props (specified internally on an unstyled component)\n * 3. External props specified on the owner component. These should only be used on a root slot.\n * 4. External props specified in the `componentsProps.*` prop.\n * 5. The `className` prop - combined from all the above.\n * @param parameters\n * @returns\n */\nexport default function mergeSlotProps(parameters) {\n  const {\n    getSlotProps,\n    additionalProps,\n    externalSlotProps,\n    externalForwardedProps,\n    className\n  } = parameters;\n\n  if (!getSlotProps) {\n    // The simpler case - getSlotProps is not defined, so no internal event handlers are defined,\n    // so we can simply merge all the props without having to worry about extracting event handlers.\n    const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className);\n\n    const props = _extends({}, additionalProps, externalForwardedProps, externalSlotProps, {\n      className: joinedClasses\n    });\n\n    if (joinedClasses.length === 0) {\n      delete props.className;\n    }\n\n    return {\n      props,\n      internalRef: undefined\n    };\n  } // In this case, getSlotProps is responsible for calling the external event handlers.\n  // We don't need to include them in the merged props because of this.\n\n\n  const eventHandlers = extractEventHandlers(_extends({}, externalForwardedProps, externalSlotProps));\n  const componentsPropsWithoutEventHandlers = omitEventHandlers(externalSlotProps);\n  const otherPropsWithoutEventHandlers = omitEventHandlers(externalForwardedProps);\n  const internalSlotProps = getSlotProps(eventHandlers);\n  const joinedClasses = clsx(externalForwardedProps == null ? void 0 : externalForwardedProps.className, externalSlotProps == null ? void 0 : externalSlotProps.className, className, additionalProps == null ? void 0 : additionalProps.className, internalSlotProps == null ? void 0 : internalSlotProps.className);\n\n  const props = _extends({}, internalSlotProps, additionalProps, otherPropsWithoutEventHandlers, componentsPropsWithoutEventHandlers, {\n    className: joinedClasses\n  });\n\n  if (joinedClasses.length === 0) {\n    delete props.className;\n  }\n\n  return {\n    props,\n    internalRef: internalSlotProps.ref\n  };\n}"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,eAAe,SAASC,cAAT,CAAwBC,UAAxB,EAAoC;EACjD,MAAM;IACJC,YADI;IAEJC,eAFI;IAGJC,iBAHI;IAIJC,sBAJI;IAKJC;EALI,IAMFL,UANJ;;EAQA,IAAI,CAACC,YAAL,EAAmB;IACjB;IACA;IACA,MAAMK,aAAa,GAAGV,IAAI,CAACQ,sBAAsB,IAAI,IAA1B,GAAiC,KAAK,CAAtC,GAA0CA,sBAAsB,CAACC,SAAlE,EAA6EF,iBAAiB,IAAI,IAArB,GAA4B,KAAK,CAAjC,GAAqCA,iBAAiB,CAACE,SAApI,EAA+IA,SAA/I,EAA0JH,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACG,SAA7M,CAA1B;;IAEA,MAAME,KAAK,GAAGZ,QAAQ,CAAC,EAAD,EAAKO,eAAL,EAAsBE,sBAAtB,EAA8CD,iBAA9C,EAAiE;MACrFE,SAAS,EAAEC;IAD0E,CAAjE,CAAtB;;IAIA,IAAIA,aAAa,CAACE,MAAd,KAAyB,CAA7B,EAAgC;MAC9B,OAAOD,KAAK,CAACF,SAAb;IACD;;IAED,OAAO;MACLE,KADK;MAELE,WAAW,EAAEC;IAFR,CAAP;EAID,CA1BgD,CA0B/C;EACF;;;EAGA,MAAMC,aAAa,GAAGd,oBAAoB,CAACF,QAAQ,CAAC,EAAD,EAAKS,sBAAL,EAA6BD,iBAA7B,CAAT,CAA1C;EACA,MAAMS,mCAAmC,GAAGd,iBAAiB,CAACK,iBAAD,CAA7D;EACA,MAAMU,8BAA8B,GAAGf,iBAAiB,CAACM,sBAAD,CAAxD;EACA,MAAMU,iBAAiB,GAAGb,YAAY,CAACU,aAAD,CAAtC;EACA,MAAML,aAAa,GAAGV,IAAI,CAACQ,sBAAsB,IAAI,IAA1B,GAAiC,KAAK,CAAtC,GAA0CA,sBAAsB,CAACC,SAAlE,EAA6EF,iBAAiB,IAAI,IAArB,GAA4B,KAAK,CAAjC,GAAqCA,iBAAiB,CAACE,SAApI,EAA+IA,SAA/I,EAA0JH,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACG,SAA7M,EAAwNS,iBAAiB,IAAI,IAArB,GAA4B,KAAK,CAAjC,GAAqCA,iBAAiB,CAACT,SAA/Q,CAA1B;;EAEA,MAAME,KAAK,GAAGZ,QAAQ,CAAC,EAAD,EAAKmB,iBAAL,EAAwBZ,eAAxB,EAAyCW,8BAAzC,EAAyED,mCAAzE,EAA8G;IAClIP,SAAS,EAAEC;EADuH,CAA9G,CAAtB;;EAIA,IAAIA,aAAa,CAACE,MAAd,KAAyB,CAA7B,EAAgC;IAC9B,OAAOD,KAAK,CAACF,SAAb;EACD;;EAED,OAAO;IACLE,KADK;IAELE,WAAW,EAAEK,iBAAiB,CAACC;EAF1B,CAAP;AAID"},"metadata":{},"sourceType":"module"}