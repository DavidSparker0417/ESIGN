{"ast":null,"code":"var _jsxFileName = \"D:\\\\Working\\\\Freelancing\\\\18.PWA\\\\Project\\\\esign\\\\packages\\\\react-app\\\\src\\\\pages\\\\esign\\\\components\\\\PDFViewer.js\",\n    _s = $RefreshSig$();\n\n// import * as pjs from \"pdfjs-dist\";\n// import { useEffect } from \"react\";\n// pjs.GlobalWorkerOptions.workerSrc = `pdf.worker.min.js`;\n// export default function PDFViewer({pdf}) {\n//   useEffect(() => {\n//     if (!pdf)\n//       return;\n//     console.log(\"[DAVID] pjs = \", pjs);\n//     pjs.getDocument(pdf.url).promise\n//       .then(function (pdfDoc) {\n//         console.log(\"[DAVID] DOC :: \", pdfDoc);\n//         const page = pdfDoc.getPage(1);\n//         console.log(\"[DAVID] page :: \", page);\n//       })\n//       .catch(e => {\n//         console.log(\"[DAVID] Error on loading document! \", e);\n//       })\n//       ;\n//   }, [pdf]);\n//   return (\n//   <>\n//   </>);\n// }\nimport { Box, Grid, Typography } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { Document, Page } from \"react-pdf\";\nimport { pdfjs } from \"react-pdf\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/legacy/build/pdf.worker.min.js`;\nexport default function PDFViewer(_ref) {\n  _s();\n\n  let {\n    pdf\n  } = _ref;\n  const [totalPages, setTotalPages] = useState(0);\n\n  function onDocumentLoadSuccess(_ref2) {\n    let {\n      numPages\n    } = _ref2;\n    console.log(\"[PDF] document load success :: pages = \", numPages);\n    setTotalPages(numPages);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    children: [pdf && /*#__PURE__*/_jsxDEV(Document, {\n      file: pdf.url,\n      onLoadSuccess: onDocumentLoadSuccess,\n      style: {\n        display: \"flex\",\n        justifyContent: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        pageNumber: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      children: totalPages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PDFViewer, \"XEdk5CbbtbNY/d0YOdo1ICX/0D4=\");\n\n_c = PDFViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PDFViewer\");","map":{"version":3,"names":["Box","Grid","Typography","useEffect","useState","Document","Page","pdfjs","GlobalWorkerOptions","workerSrc","version","PDFViewer","pdf","totalPages","setTotalPages","onDocumentLoadSuccess","numPages","console","log","url","display","justifyContent"],"sources":["D:/Working/Freelancing/18.PWA/Project/esign/packages/react-app/src/pages/esign/components/PDFViewer.js"],"sourcesContent":["// import * as pjs from \"pdfjs-dist\";\r\n// import { useEffect } from \"react\";\r\n\r\n// pjs.GlobalWorkerOptions.workerSrc = `pdf.worker.min.js`;\r\n// export default function PDFViewer({pdf}) {\r\n\r\n//   useEffect(() => {\r\n//     if (!pdf)\r\n//       return;\r\n//     console.log(\"[DAVID] pjs = \", pjs);\r\n//     pjs.getDocument(pdf.url).promise\r\n//       .then(function (pdfDoc) {\r\n//         console.log(\"[DAVID] DOC :: \", pdfDoc);\r\n//         const page = pdfDoc.getPage(1);\r\n//         console.log(\"[DAVID] page :: \", page);\r\n//       })\r\n//       .catch(e => {\r\n//         console.log(\"[DAVID] Error on loading document! \", e);\r\n//       })\r\n//       ;\r\n//   }, [pdf]);\r\n\r\n//   return (\r\n//   <>\r\n\r\n//   </>);\r\n// }\r\n\r\nimport { Box, Grid, Typography } from \"@mui/material\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { Document, Page } from \"react-pdf\";\r\n\r\nimport { pdfjs } from \"react-pdf\";\r\npdfjs.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${pdfjs.version}/legacy/build/pdf.worker.min.js`;\r\n\r\nexport default function PDFViewer({ pdf }) {\r\n  const [totalPages, setTotalPages] = useState(0);\r\n\r\n  function onDocumentLoadSuccess({ numPages }) {\r\n    console.log(\"[PDF] document load success :: pages = \", numPages);\r\n    setTotalPages(numPages);\r\n  }\r\n  return (\r\n    <Grid container flexDirection=\"column\" justifyContent=\"center\" alignItems=\"center\">\r\n      {pdf && (\r\n        <Document\r\n          file={pdf.url}\r\n          onLoadSuccess={onDocumentLoadSuccess}\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Page pageNumber={1} />\r\n        </Document>\r\n      )}\r\n      <Typography></Typography>\r\n      <Typography>{totalPages}</Typography>\r\n    </Grid>\r\n  );\r\n}\r\n"],"mappings":";;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA,SAASA,GAAT,EAAcC,IAAd,EAAoBC,UAApB,QAAsC,eAAtC;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,EAAmBC,IAAnB,QAA+B,WAA/B;AAEA,SAASC,KAAT,QAAsB,WAAtB;;AACAA,KAAK,CAACC,mBAAN,CAA0BC,SAA1B,GAAuC,0BAAyBF,KAAK,CAACG,OAAQ,iCAA9E;AAEA,eAAe,SAASC,SAAT,OAA4B;EAAA;;EAAA,IAAT;IAAEC;EAAF,CAAS;EACzC,MAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BV,QAAQ,CAAC,CAAD,CAA5C;;EAEA,SAASW,qBAAT,QAA6C;IAAA,IAAd;MAAEC;IAAF,CAAc;IAC3CC,OAAO,CAACC,GAAR,CAAY,yCAAZ,EAAuDF,QAAvD;IACAF,aAAa,CAACE,QAAD,CAAb;EACD;;EACD,oBACE,QAAC,IAAD;IAAM,SAAS,MAAf;IAAgB,aAAa,EAAC,QAA9B;IAAuC,cAAc,EAAC,QAAtD;IAA+D,UAAU,EAAC,QAA1E;IAAA,WACGJ,GAAG,iBACF,QAAC,QAAD;MACE,IAAI,EAAEA,GAAG,CAACO,GADZ;MAEE,aAAa,EAAEJ,qBAFjB;MAGE,KAAK,EAAE;QACLK,OAAO,EAAE,MADJ;QAELC,cAAc,EAAE;MAFX,CAHT;MAAA,uBAQE,QAAC,IAAD;QAAM,UAAU,EAAE;MAAlB;QAAA;QAAA;QAAA;MAAA;IARF;MAAA;MAAA;MAAA;IAAA,QAFJ,eAaE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAbF,eAcE,QAAC,UAAD;MAAA,UAAaR;IAAb;MAAA;MAAA;MAAA;IAAA,QAdF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAkBD;;GAzBuBF,S;;KAAAA,S"},"metadata":{},"sourceType":"module"}