{"ast":null,"code":"import * as chains from '../model/chain';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\n\nexport function getChainMeta(chainId) {\n  const chain = Object.values(chains).find(chain => chain.chainId === chainId);\n\n  if (!chain) {\n    throw new Error(`Chain ${chainId} does not exist`);\n  }\n\n  return chain;\n}","map":{"version":3,"sources":["../../../../src/helpers/getChainMeta.ts"],"names":[],"mappings":"AACA,OAAO,KAAK,MAAZ,MAAwB,gBAAxB;AAEA;;AAEG;;AACH,OAAM,SAAU,YAAV,CAAuB,OAAvB,EAAuC;EAC3C,MAAM,KAAK,GAAG,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,IAAtB,CAA4B,KAAD,IAAW,KAAK,CAAC,OAAN,KAAkB,OAAxD,CAAd;;EACA,IAAI,CAAC,KAAL,EAAY;IACV,MAAM,IAAI,KAAJ,CAAU,SAAS,OAAO,iBAA1B,CAAN;EACD;;EACD,OAAO,KAAP;AACD","sourceRoot":"","sourcesContent":["import * as chains from '../model/chain';\n/**\n * @internal Intended for internal use - use it on your own risk\n */\nexport function getChainMeta(chainId) {\n    const chain = Object.values(chains).find((chain) => chain.chainId === chainId);\n    if (!chain) {\n        throw new Error(`Chain ${chainId} does not exist`);\n    }\n    return chain;\n}\n//# sourceMappingURL=getChainMeta.js.map"]},"metadata":{},"sourceType":"module"}