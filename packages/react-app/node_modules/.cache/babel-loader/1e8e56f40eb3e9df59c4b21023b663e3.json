{"ast":null,"code":"import \"../../utilities/globals/index.js\";\nimport { useState, useRef, useEffect } from 'react';\nimport { equal } from '@wry/equality';\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nexport function useSubscription(subscription, options) {\n  var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n  verifyDocumentType(subscription, DocumentType.Subscription);\n\n  var _a = useState({\n    loading: !(options === null || options === void 0 ? void 0 : options.skip),\n    error: void 0,\n    data: void 0,\n    variables: options === null || options === void 0 ? void 0 : options.variables\n  }),\n      result = _a[0],\n      setResult = _a[1];\n\n  var _b = useState(function () {\n    if (options === null || options === void 0 ? void 0 : options.skip) {\n      return null;\n    }\n\n    return client.subscribe({\n      query: subscription,\n      variables: options === null || options === void 0 ? void 0 : options.variables,\n      fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n      context: options === null || options === void 0 ? void 0 : options.context\n    });\n  }),\n      observable = _b[0],\n      setObservable = _b[1];\n\n  var canResetObservableRef = useRef(false);\n  useEffect(function () {\n    return function () {\n      canResetObservableRef.current = true;\n    };\n  }, []);\n  var ref = useRef({\n    client: client,\n    subscription: subscription,\n    options: options\n  });\n  useEffect(function () {\n    var _a, _b, _c, _d;\n\n    var shouldResubscribe = options === null || options === void 0 ? void 0 : options.shouldResubscribe;\n\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(options);\n    }\n\n    if (options === null || options === void 0 ? void 0 : options.skip) {\n      if (!(options === null || options === void 0 ? void 0 : options.skip) !== !((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.skip) || canResetObservableRef.current) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error: void 0,\n          variables: options === null || options === void 0 ? void 0 : options.variables\n        });\n        setObservable(null);\n        canResetObservableRef.current = false;\n      }\n    } else if (shouldResubscribe !== false && (client !== ref.current.client || subscription !== ref.current.subscription || (options === null || options === void 0 ? void 0 : options.fetchPolicy) !== ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.fetchPolicy) || !(options === null || options === void 0 ? void 0 : options.skip) !== !((_c = ref.current.options) === null || _c === void 0 ? void 0 : _c.skip) || !equal(options === null || options === void 0 ? void 0 : options.variables, (_d = ref.current.options) === null || _d === void 0 ? void 0 : _d.variables)) || canResetObservableRef.current) {\n      setResult({\n        loading: true,\n        data: void 0,\n        error: void 0,\n        variables: options === null || options === void 0 ? void 0 : options.variables\n      });\n      setObservable(client.subscribe({\n        query: subscription,\n        variables: options === null || options === void 0 ? void 0 : options.variables,\n        fetchPolicy: options === null || options === void 0 ? void 0 : options.fetchPolicy,\n        context: options === null || options === void 0 ? void 0 : options.context\n      }));\n      canResetObservableRef.current = false;\n    }\n\n    Object.assign(ref.current, {\n      client: client,\n      subscription: subscription,\n      options: options\n    });\n  }, [client, subscription, options, canResetObservableRef.current]);\n  useEffect(function () {\n    if (!observable) {\n      return;\n    }\n\n    var subscription = observable.subscribe({\n      next: function (fetchResult) {\n        var _a, _b;\n\n        var result = {\n          loading: false,\n          data: fetchResult.data,\n          error: void 0,\n          variables: options === null || options === void 0 ? void 0 : options.variables\n        };\n        setResult(result);\n        (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onSubscriptionData) === null || _b === void 0 ? void 0 : _b.call(_a, {\n          client: client,\n          subscriptionData: result\n        });\n      },\n      error: function (error) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error: error,\n          variables: options === null || options === void 0 ? void 0 : options.variables\n        });\n      },\n      complete: function () {\n        var _a, _b;\n\n        (_b = (_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onSubscriptionComplete) === null || _b === void 0 ? void 0 : _b.call(_a);\n      }\n    });\n    return function () {\n      subscription.unsubscribe();\n    };\n  }, [observable]);\n  return result;\n}","map":{"version":3,"sources":["../../../src/react/hooks/useSubscription.ts"],"names":[],"mappings":"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","sourcesContent":["import '../../utilities/globals';\nimport { useState, useRef, useEffect } from 'react';\nimport { DocumentNode } from 'graphql';\nimport { TypedDocumentNode } from '@graphql-typed-document-node/core';\nimport { equal } from '@wry/equality';\n\nimport { DocumentType, verifyDocumentType } from '../parser';\nimport {\n  SubscriptionHookOptions,\n  SubscriptionResult\n} from '../types/types';\nimport { OperationVariables } from '../../core';\nimport { useApolloClient } from './useApolloClient';\n\nexport function useSubscription<TData = any, TVariables = OperationVariables>(\n  subscription: DocumentNode | TypedDocumentNode<TData, TVariables>,\n  options?: SubscriptionHookOptions<TData, TVariables>,\n) {\n  const client = useApolloClient(options?.client);\n  verifyDocumentType(subscription, DocumentType.Subscription);\n  const [result, setResult] = useState<SubscriptionResult<TData>>({\n    loading: !options?.skip,\n    error: void 0,\n    data: void 0,\n    variables: options?.variables,\n  });\n\n  const [observable, setObservable] = useState(() => {\n    if (options?.skip) {\n      return null;\n    }\n\n    return client.subscribe({\n      query: subscription,\n      variables: options?.variables,\n      fetchPolicy: options?.fetchPolicy,\n      context: options?.context,\n    });\n  });\n\n  const canResetObservableRef = useRef(false);\n  useEffect(() => {\n    return () => {\n      canResetObservableRef.current = true;\n    };\n  }, []);\n\n  const ref = useRef({ client, subscription, options });\n  useEffect(() => {\n    let shouldResubscribe = options?.shouldResubscribe;\n    if (typeof shouldResubscribe === 'function') {\n      shouldResubscribe = !!shouldResubscribe(options!);\n    }\n\n    if (options?.skip) {\n      if (!options?.skip !== !ref.current.options?.skip || canResetObservableRef.current) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error: void 0,\n          variables: options?.variables,\n        });\n        setObservable(null);\n        canResetObservableRef.current = false;\n      }\n    } else if (\n      (shouldResubscribe !== false &&\n        (client !== ref.current.client ||\n          subscription !== ref.current.subscription ||\n          options?.fetchPolicy !== ref.current.options?.fetchPolicy ||\n          !options?.skip !== !ref.current.options?.skip ||\n          !equal(options?.variables, ref.current.options?.variables))) ||\n      canResetObservableRef.current\n    ) {\n      setResult({\n        loading: true,\n        data: void 0,\n        error: void 0,\n        variables: options?.variables,\n      });\n      setObservable(client.subscribe({\n        query: subscription,\n        variables: options?.variables,\n        fetchPolicy: options?.fetchPolicy,\n        context: options?.context,\n      }));\n      canResetObservableRef.current = false;\n    }\n\n    Object.assign(ref.current, { client, subscription, options });\n  }, [client, subscription, options, canResetObservableRef.current]);\n\n  useEffect(() => {\n    if (!observable) {\n      return;\n    }\n\n    const subscription = observable.subscribe({\n      next(fetchResult) {\n        const result = {\n          loading: false,\n          // TODO: fetchResult.data can be null but SubscriptionResult.data\n          // expects TData | undefined only\n          data: fetchResult.data!,\n          error: void 0,\n          variables: options?.variables,\n        };\n        setResult(result);\n\n        ref.current.options?.onSubscriptionData?.({\n          client,\n          subscriptionData: result\n        });\n      },\n      error(error) {\n        setResult({\n          loading: false,\n          data: void 0,\n          error,\n          variables: options?.variables,\n        });\n      },\n      complete() {\n        ref.current.options?.onSubscriptionComplete?.();\n      },\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [observable]);\n\n  return result;\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}