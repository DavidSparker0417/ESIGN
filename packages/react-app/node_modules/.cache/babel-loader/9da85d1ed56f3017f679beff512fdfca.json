{"ast":null,"code":"export var selectURI = function (operation, fallbackURI) {\n  var context = operation.getContext();\n  var contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return fallbackURI || '/graphql';\n  }\n};","map":{"version":3,"sources":["../../../src/link/http/selectURI.ts"],"names":[],"mappings":"AAEA,OAAO,IAAM,SAAS,GAAG,UACvB,SADuB,EAEvB,WAFuB,EAEkC;EAEzD,IAAM,OAAO,GAAG,SAAS,CAAC,UAAV,EAAhB;EACA,IAAM,UAAU,GAAG,OAAO,CAAC,GAA3B;;EAEA,IAAI,UAAJ,EAAgB;IACd,OAAO,UAAP;EACD,CAFD,MAEO,IAAI,OAAO,WAAP,KAAuB,UAA3B,EAAuC;IAC5C,OAAO,WAAW,CAAC,SAAD,CAAlB;EACD,CAFM,MAEA;IACL,OAAQ,WAAsB,IAAI,UAAlC;EACD;AACF,CAdM","sourcesContent":["import { Operation } from '../core';\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}